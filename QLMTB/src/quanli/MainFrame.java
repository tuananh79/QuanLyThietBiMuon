/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package quanli;

import java.awt.Color;
import java.util.Calendar;
import java.util.GregorianCalendar;
import KetNoiSQL.KetNoi;
import ThietBi.ThietBi;
import java.awt.HeadlessException;
import java.io.BufferedOutputStream;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.FileWriter;
import java.io.IOException;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.time.LocalTime;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.Date;
import java.util.Locale;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.naming.spi.DirStateFactory;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JPasswordField;
import javax.swing.JTable;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;
import static org.apache.commons.math3.fitting.leastsquares.LeastSquaresFactory.model;
import org.apache.poi.ss.formula.functions.Code;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.ss.usermodel.Workbook;
import org.apache.poi.xssf.usermodel.XSSFCell;
import org.apache.poi.xssf.usermodel.XSSFRow;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import java.sql.CallableStatement;

/**
 *
 * @author Minh Huan
 */
public class MainFrame extends javax.swing.JFrame {

    /**
     * Creates new form MainFrame
     */
    private int sods = 0;
    private int tongTB, tbHong, tbCoSan, tbDangMuon, tbBaoTri;
    private boolean SVDaDK = false;
    private String maMuonDK = "", tenDN = "", tenDNSV = "";
    ArrayList<ThietBi> dstbmuon = new ArrayList<>();
    ArrayList<ThietBi> dstbtra = new ArrayList<>();

    ArrayList<ThietBi> TBmuon = new ArrayList<>();
    ArrayList<ThietBi> TBtra = new ArrayList<>();

    
    ArrayList<String> maLoai = new ArrayList<>();
    private String mamuonTra;
    private String maLoaiBanDau;
    int sotbMuon = 0;
    Connection ketNoi = (Connection) KetNoi.ConnectSQL();

    public MainFrame(String manv, String phanquyen) {
        initComponents();
        this.setLocationRelativeTo(null);
        phanquyen(phanquyen);
        docDanhSach(manv);
        jPanel_trangchu.setVisible(true);
        jPanel_muontb.setVisible(false);
        jPanel_tratb.setVisible(false);
        jPanel_themtb.setVisible(false);

        jPanel_trangchu_btn.setBackground(Color.white);
        jPanel_muontb_btn.setBackground(new Color(153, 153, 153));
        jPanel_tratb_btn.setBackground(new Color(153, 153, 153));
        jPanel_themtb_btn.setBackground(new Color(153, 153, 153));
        datePicker_NgayTra.setLocale(Locale.forLanguageTag("VI"));
        datePicker_NgayMuon.setLocale(Locale.forLanguageTag("VI"));
        jTextField_NgayGioNhapKho_Them.setEditable(false);
        clock();
        docDanhSach();
        layLoaiTB();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jDialog_ChonDSDangKy = new javax.swing.JDialog();
        jPanel12 = new javax.swing.JPanel();
        jLabel16 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTable_ChonDSDK = new javax.swing.JTable();
        jButton_ChonDSDK = new javax.swing.JButton();
        jLabel45 = new javax.swing.JLabel();
        jPanel13 = new javax.swing.JPanel();
        jDialog_DanhSachMuon = new javax.swing.JDialog();
        jPanel14 = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        jTable_DanhSachMuon = new javax.swing.JTable();
        jButton1_XacNhanChonTB = new javax.swing.JButton();
        jPanel15 = new javax.swing.JPanel();
        jLabel48 = new javax.swing.JLabel();
        jButton_HuyChonTB = new javax.swing.JButton();
        jLabel49 = new javax.swing.JLabel();
        jLabel63 = new javax.swing.JLabel();
        jComboBox_LocTheoLoaiTBDK = new javax.swing.JComboBox<>();
        jLabel64 = new javax.swing.JLabel();
        jTextField_TimKiemTBMuon = new javax.swing.JTextField();
        jDialog_ChonDSTra = new javax.swing.JDialog();
        jPanel17 = new javax.swing.JPanel();
        jLabel50 = new javax.swing.JLabel();
        jScrollPane6 = new javax.swing.JScrollPane();
        jTable_ChonDSMuon = new javax.swing.JTable();
        jButton_ChonDSMuon = new javax.swing.JButton();
        jLabel51 = new javax.swing.JLabel();
        jPanel18 = new javax.swing.JPanel();
        jDialog_ChucNang = new javax.swing.JDialog();
        jPanel20 = new javax.swing.JPanel();
        jLabel43 = new javax.swing.JLabel();
        jPanel21 = new javax.swing.JPanel();
        jLabel62 = new javax.swing.JLabel();
        jPanel22 = new javax.swing.JPanel();
        jPanel23 = new javax.swing.JPanel();
        jPanel24 = new javax.swing.JPanel();
        jDialog_SuaTB = new javax.swing.JDialog();
        jPanel25 = new javax.swing.JPanel();
        jLabel46 = new javax.swing.JLabel();
        jLabel67 = new javax.swing.JLabel();
        jTextField_MaTb_Sua = new javax.swing.JTextField();
        jLabel68 = new javax.swing.JLabel();
        jTextField_TenTb_Sua = new javax.swing.JTextField();
        jLabel69 = new javax.swing.JLabel();
        jComboBox_LoaiTB_Sua = new javax.swing.JComboBox<>();
        jLabel70 = new javax.swing.JLabel();
        jTextField_NgayNhapKho_Sua = new javax.swing.JTextField();
        jLabel71 = new javax.swing.JLabel();
        jScrollPane8 = new javax.swing.JScrollPane();
        jTextArea_MoTa_Sua = new javax.swing.JTextArea();
        jComboBox_TinhTrang_Sua = new javax.swing.JComboBox<>();
        jLabel72 = new javax.swing.JLabel();
        jButton_Luu_Sua = new javax.swing.JButton();
        jButton_QuayLai_Sua = new javax.swing.JButton();
        jDialog_ThemLoaiTB = new javax.swing.JDialog();
        jPanel26 = new javax.swing.JPanel();
        jLabel52 = new javax.swing.JLabel();
        jTextField_MaLoai_Them = new javax.swing.JTextField();
        jLabel58 = new javax.swing.JLabel();
        jLabel65 = new javax.swing.JLabel();
        jTextField_TenLoaiThem = new javax.swing.JTextField();
        jButton_ThemLoaiTB = new javax.swing.JButton();
        jButton_QuayLai_ThemLoai = new javax.swing.JButton();
        jDialog_ThemSV = new javax.swing.JDialog();
        jPanel27 = new javax.swing.JPanel();
        jLabel66 = new javax.swing.JLabel();
        jPanel28 = new javax.swing.JPanel();
        jTextField_MaSV_Them = new javax.swing.JTextField();
        jButton_SV_Them = new javax.swing.JButton();
        jLabel75 = new javax.swing.JLabel();
        jTextField_HoTenSV_Them = new javax.swing.JTextField();
        jLabel76 = new javax.swing.JLabel();
        jLabel77 = new javax.swing.JLabel();
        jTextField_LopSV_Them = new javax.swing.JTextField();
        jLabel78 = new javax.swing.JLabel();
        jTextField_SDTSV_Them = new javax.swing.JTextField();
        jLabel79 = new javax.swing.JLabel();
        jLabel_NotePass = new javax.swing.JLabel();
        jLabel_NoteSDT = new javax.swing.JLabel();
        jDialog_ThongTinNV = new javax.swing.JDialog();
        jPanel29 = new javax.swing.JPanel();
        jLabel74 = new javax.swing.JLabel();
        jLabel80 = new javax.swing.JLabel();
        jSeparator8 = new javax.swing.JSeparator();
        jTextField_MaNV = new javax.swing.JTextField();
        jTextField_HoTenNV = new javax.swing.JTextField();
        jScrollPane9 = new javax.swing.JScrollPane();
        jTable_NhanVIien = new javax.swing.JTable();
        jTextField_TenDN = new javax.swing.JTextField();
        jTextField_SDTNV = new javax.swing.JTextField();
        jComboBox_ChucVu = new javax.swing.JComboBox<>();
        jLabel81 = new javax.swing.JLabel();
        jLabel82 = new javax.swing.JLabel();
        jLabel83 = new javax.swing.JLabel();
        jComboBox_GioiTinh = new javax.swing.JComboBox<>();
        jLabel84 = new javax.swing.JLabel();
        jLabel85 = new javax.swing.JLabel();
        datePicker_NamSinh = new com.github.lgooddatepicker.components.DatePicker();
        jLabel86 = new javax.swing.JLabel();
        jLabel87 = new javax.swing.JLabel();
        jLabel88 = new javax.swing.JLabel();
        jTextField_MatKhau = new javax.swing.JTextField();
        jLabel89 = new javax.swing.JLabel();
        jSeparator9 = new javax.swing.JSeparator();
        jButton_ThemNV = new javax.swing.JButton();
        jButton_XoaNV = new javax.swing.JButton();
        jButton_LuuNV = new javax.swing.JButton();
        jPanel_ChinhSuaNV = new javax.swing.JPanel();
        jLabel_ChinhSuaNV_btn = new javax.swing.JLabel();
        jPanel_ThemNV = new javax.swing.JPanel();
        jLabel_ThemNV_btn = new javax.swing.JLabel();
        jDialog_ThongTinCaNhan = new javax.swing.JDialog();
        jPanel30 = new javax.swing.JPanel();
        jLabel90 = new javax.swing.JLabel();
        jLabel91 = new javax.swing.JLabel();
        jTextField_MaNV_CaNhan = new javax.swing.JTextField();
        jLabel92 = new javax.swing.JLabel();
        jTextField_HoTenNV_CaNhan = new javax.swing.JTextField();
        jLabel93 = new javax.swing.JLabel();
        jComboBox_GioiTinh_CaNhan = new javax.swing.JComboBox<>();
        jLabel94 = new javax.swing.JLabel();
        jComboBox_ChucVu_CaNhan = new javax.swing.JComboBox<>();
        jLabel95 = new javax.swing.JLabel();
        jTextField_SDT_CaNhan = new javax.swing.JTextField();
        jLabel96 = new javax.swing.JLabel();
        datePicker_NamSinhNV_CaNhan = new com.github.lgooddatepicker.components.DatePicker();
        jLabel97 = new javax.swing.JLabel();
        jSeparator10 = new javax.swing.JSeparator();
        jLabel98 = new javax.swing.JLabel();
        jSeparator11 = new javax.swing.JSeparator();
        jLabel99 = new javax.swing.JLabel();
        jTextField_TenDangNhap_CaNhan = new javax.swing.JTextField();
        jLabel100 = new javax.swing.JLabel();
        jTextField_MatKhau_CaNhan = new javax.swing.JTextField();
        jButton_LuuTTCN = new javax.swing.JButton();
        jLabel_MaTK = new javax.swing.JLabel();
        jDialog_DanhSachSV = new javax.swing.JDialog();
        jPanel31 = new javax.swing.JPanel();
        jScrollPane11 = new javax.swing.JScrollPane();
        jTable_SinhVien = new javax.swing.JTable();
        jLabel101 = new javax.swing.JLabel();
        jLabel102 = new javax.swing.JLabel();
        jPanel32 = new javax.swing.JPanel();
        jLabel103 = new javax.swing.JLabel();
        jSeparator12 = new javax.swing.JSeparator();
        jLabel104 = new javax.swing.JLabel();
        jTextField_LopSV_TT = new javax.swing.JTextField();
        jTextField_MaSV_TT = new javax.swing.JTextField();
        jLabel105 = new javax.swing.JLabel();
        jTextField_HoTenSV_TT = new javax.swing.JTextField();
        jLabel106 = new javax.swing.JLabel();
        jTextField_SDTSV_TT = new javax.swing.JTextField();
        jLabel107 = new javax.swing.JLabel();
        jSeparator13 = new javax.swing.JSeparator();
        jLabel108 = new javax.swing.JLabel();
        jLabel109 = new javax.swing.JLabel();
        jTextField_TenDN_TT = new javax.swing.JTextField();
        jLabel110 = new javax.swing.JLabel();
        jTextField_MatKhau_TT = new javax.swing.JTextField();
        jButton_Luu_TT = new javax.swing.JButton();
        jButton_XoaSV = new javax.swing.JButton();
        jTextField_TimKiemSV = new javax.swing.JTextField();
        jLabel111 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jPanel_trangchu_btn = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel_muontb_btn = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jPanel_tratb_btn = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jPanel_themtb_btn = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jButton16 = new javax.swing.JButton();
        jPanel9 = new javax.swing.JPanel();
        jLabel_ChucNang = new javax.swing.JLabel();
        jPanel10 = new javax.swing.JPanel();
        jLabel44 = new javax.swing.JLabel();
        jPanel11 = new javax.swing.JPanel();
        jLabel_time = new javax.swing.JLabel();
        jLabel_TenNV = new javax.swing.JLabel();
        jLabel47 = new javax.swing.JLabel();
        jLabel_MaNV = new javax.swing.JLabel();
        jPanel19 = new javax.swing.JPanel();
        jLabel_ThongKe = new javax.swing.JLabel();
        jLabel_ThemSV = new javax.swing.JLabel();
        jLabel_DanhSachSV = new javax.swing.JLabel();
        jLabel_ThemLoaiThietBi = new javax.swing.JLabel();
        jLabel_ThongTinNV = new javax.swing.JLabel();
        jPanel_main = new javax.swing.JPanel();
        jPanel_trangchu = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable_TBCoSan = new javax.swing.JTable();
        jTextField_TimKiem = new javax.swing.JTextField();
        jComboBox_TrangThai = new javax.swing.JComboBox<>();
        jComboBox_LocTheoLoai = new javax.swing.JComboBox<>();
        jButton_TimKiem = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jButton_Sua = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel_tbCoSan = new javax.swing.JLabel();
        jLabel_tbHong = new javax.swing.JLabel();
        jLabel_tbBaoTri = new javax.swing.JLabel();
        jLabel_tbDangMuon = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        jLabel10 = new javax.swing.JLabel();
        jButton_Xoa = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        jPanel7 = new javax.swing.JPanel();
        jLabel20 = new javax.swing.JLabel();
        jLabel_TongSoTB = new javax.swing.JLabel();
        jPanel_muontb = new javax.swing.JPanel();
        jLabel17 = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        jSeparator3 = new javax.swing.JSeparator();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jTextField_MaSV = new javax.swing.JTextField();
        jButton_TimSV = new javax.swing.JButton();
        jLabel21 = new javax.swing.JLabel();
        jTextField_Lop = new javax.swing.JTextField();
        jLabel22 = new javax.swing.JLabel();
        jTextField_HoTen = new javax.swing.JTextField();
        jLabel23 = new javax.swing.JLabel();
        jTextField_SDT = new javax.swing.JTextField();
        jLabel24 = new javax.swing.JLabel();
        jSeparator4 = new javax.swing.JSeparator();
        jLabel25 = new javax.swing.JLabel();
        datePicker_NgayMuon = new com.github.lgooddatepicker.components.DatePicker();
        timePicker_GioMuon = new com.github.lgooddatepicker.components.TimePicker();
        jLabel26 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable_DSThBiMuon = new javax.swing.JTable();
        jLabel27 = new javax.swing.JLabel();
        datePicker_NgayTra = new com.github.lgooddatepicker.components.DatePicker();
        timePicker_GioTra = new com.github.lgooddatepicker.components.TimePicker();
        jLabel28 = new javax.swing.JLabel();
        jButton_ChonTB = new javax.swing.JButton();
        jButton_DSDangKy = new javax.swing.JButton();
        jButton_gioHT = new javax.swing.JButton();
        jButton_XNmuon = new javax.swing.JButton();
        jButton_DatLai = new javax.swing.JButton();
        jLabel29 = new javax.swing.JLabel();
        jPanel_tratb = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable_DSThBiTra = new javax.swing.JTable();
        jLabel30 = new javax.swing.JLabel();
        jPanel8 = new javax.swing.JPanel();
        jLabel32 = new javax.swing.JLabel();
        jButton_XacNhanTra = new javax.swing.JButton();
        jSeparator5 = new javax.swing.JSeparator();
        jTextField_SDTTra = new javax.swing.JTextField();
        jLabel33 = new javax.swing.JLabel();
        jTextField_HoTenSVTra = new javax.swing.JTextField();
        jLabel34 = new javax.swing.JLabel();
        jTextField_LopSVTra = new javax.swing.JTextField();
        jLabel35 = new javax.swing.JLabel();
        jButton_TimMaSVmuon = new javax.swing.JButton();
        jTextField_MaSVTra = new javax.swing.JTextField();
        jLabel36 = new javax.swing.JLabel();
        jLabel37 = new javax.swing.JLabel();
        jSeparator6 = new javax.swing.JSeparator();
        jLabel38 = new javax.swing.JLabel();
        jButton_ChonTatCa = new javax.swing.JButton();
        jLabel31 = new javax.swing.JLabel();
        jLabel39 = new javax.swing.JLabel();
        jTextField_MaSVMuon = new javax.swing.JTextField();
        jButton_TimMaSVTra = new javax.swing.JButton();
        jLabel40 = new javax.swing.JLabel();
        jLabel41 = new javax.swing.JLabel();
        jTextField_MaMuon = new javax.swing.JTextField();
        jButton_DanhSachDaMuon = new javax.swing.JButton();
        jLabel42 = new javax.swing.JLabel();
        jSeparator7 = new javax.swing.JSeparator();
        jButton1_TimMaMuonTBi = new javax.swing.JButton();
        jPanel_themtb = new javax.swing.JPanel();
        jLabel53 = new javax.swing.JLabel();
        jPanel16 = new javax.swing.JPanel();
        jLabel54 = new javax.swing.JLabel();
        jTextField_CuoiMaTB_Them = new javax.swing.JTextField();
        jComboBox_LoaiTB_Them = new javax.swing.JComboBox<>();
        jLabel55 = new javax.swing.JLabel();
        jTextField_TenTB_Them = new javax.swing.JTextField();
        jLabel56 = new javax.swing.JLabel();
        jTextField_NgayGioNhapKho_Them = new javax.swing.JTextField();
        jLabel57 = new javax.swing.JLabel();
        jLabel_DauMaTB_Them = new javax.swing.JLabel();
        jScrollPane7 = new javax.swing.JScrollPane();
        jTextArea_MoTa_Them = new javax.swing.JTextArea();
        jLabel59 = new javax.swing.JLabel();
        jLabel60 = new javax.swing.JLabel();
        jLabel61 = new javax.swing.JLabel();
        jButton_ThemTB = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jLabel_LoaiTB_TB_Them = new javax.swing.JLabel();
        jLabel_MaTB_TB_Them = new javax.swing.JLabel();
        jLabel_TenTB_TB_Them = new javax.swing.JLabel();
        jLabel73 = new javax.swing.JLabel();

        jDialog_ChonDSDangKy.setMinimumSize(new java.awt.Dimension(465, 276));
        jDialog_ChonDSDangKy.setModal(true);

        jPanel12.setBackground(new java.awt.Color(255, 255, 255));

        jLabel16.setText("DANH SÁCH ĐĂNG KÝ");
        jLabel16.setFont(new java.awt.Font("sansserif", 1, 18)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(0, 0, 102));

        jTable_ChonDSDK.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã mượn", "Thời gian mượn", "Thời gian trả", "Chọn"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane4.setViewportView(jTable_ChonDSDK);
        if (jTable_ChonDSDK.getColumnModel().getColumnCount() > 0) {
            jTable_ChonDSDK.getColumnModel().getColumn(0).setMaxWidth(100);
            jTable_ChonDSDK.getColumnModel().getColumn(3).setMaxWidth(40);
        }

        jButton_ChonDSDK.setText("CHỌN");
        jButton_ChonDSDK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_ChonDSDKActionPerformed(evt);
            }
        });

        jLabel45.setText("*Chọn danh sách đăng ký trong bảng trên");
        jLabel45.setFont(new java.awt.Font("sansserif", 2, 12)); // NOI18N
        jLabel45.setForeground(new java.awt.Color(102, 102, 102));

        jPanel13.setBackground(new java.awt.Color(0, 0, 102));

        javax.swing.GroupLayout jPanel13Layout = new javax.swing.GroupLayout(jPanel13);
        jPanel13.setLayout(jPanel13Layout);
        jPanel13Layout.setHorizontalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 159, Short.MAX_VALUE)
        );
        jPanel13Layout.setVerticalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 24, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 396, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel12Layout.createSequentialGroup()
                        .addComponent(jLabel16)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel12Layout.createSequentialGroup()
                        .addComponent(jLabel45, javax.swing.GroupLayout.PREFERRED_SIZE, 305, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton_ChonDSDK, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(24, Short.MAX_VALUE))
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton_ChonDSDK)
                    .addComponent(jLabel45))
                .addContainerGap(18, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jDialog_ChonDSDangKyLayout = new javax.swing.GroupLayout(jDialog_ChonDSDangKy.getContentPane());
        jDialog_ChonDSDangKy.getContentPane().setLayout(jDialog_ChonDSDangKyLayout);
        jDialog_ChonDSDangKyLayout.setHorizontalGroup(
            jDialog_ChonDSDangKyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jDialog_ChonDSDangKyLayout.setVerticalGroup(
            jDialog_ChonDSDangKyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jDialog_DanhSachMuon.setMinimumSize(null);
        jDialog_DanhSachMuon.setModal(true);
        jDialog_DanhSachMuon.setSize(new java.awt.Dimension(536, 485));

        jPanel14.setBackground(new java.awt.Color(255, 255, 255));
        jPanel14.setPreferredSize(new java.awt.Dimension(536, 500));

        jTable_DanhSachMuon.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã TB", "Tên TB", "Mô tả", "Chọn"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Boolean.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jTable_DanhSachMuon.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable_DanhSachMuonMouseClicked(evt);
            }
        });
        jScrollPane5.setViewportView(jTable_DanhSachMuon);
        if (jTable_DanhSachMuon.getColumnModel().getColumnCount() > 0) {
            jTable_DanhSachMuon.getColumnModel().getColumn(0).setMaxWidth(90);
            jTable_DanhSachMuon.getColumnModel().getColumn(2).setMaxWidth(90);
            jTable_DanhSachMuon.getColumnModel().getColumn(3).setMaxWidth(40);
        }

        jButton1_XacNhanChonTB.setText("Xác nhận");
        jButton1_XacNhanChonTB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1_XacNhanChonTBActionPerformed(evt);
            }
        });

        jPanel15.setBackground(new java.awt.Color(0, 0, 102));

        javax.swing.GroupLayout jPanel15Layout = new javax.swing.GroupLayout(jPanel15);
        jPanel15.setLayout(jPanel15Layout);
        jPanel15Layout.setHorizontalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 239, Short.MAX_VALUE)
        );
        jPanel15Layout.setVerticalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 24, Short.MAX_VALUE)
        );

        jLabel48.setText("DANH SÁCH THIẾT BỊ");
        jLabel48.setFont(new java.awt.Font("sansserif", 1, 18)); // NOI18N
        jLabel48.setForeground(new java.awt.Color(0, 0, 102));

        jButton_HuyChonTB.setText("Hủy");
        jButton_HuyChonTB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_HuyChonTBActionPerformed(evt);
            }
        });

        jLabel49.setText("*Chọn các thiết bị cần mượn có thể chọn 1 hoặc nhiều");
        jLabel49.setFont(new java.awt.Font("sansserif", 2, 12)); // NOI18N
        jLabel49.setForeground(new java.awt.Color(102, 102, 102));

        jLabel63.setText("Lọc theo loại:");
        jLabel63.setFont(new java.awt.Font("sansserif", 1, 12)); // NOI18N

        jComboBox_LocTheoLoaiTBDK.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "--Tất cả--" }));
        jComboBox_LocTheoLoaiTBDK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox_LocTheoLoaiTBDKActionPerformed(evt);
            }
        });

        jLabel64.setText("Tìm kiếm:");
        jLabel64.setFont(new java.awt.Font("sansserif", 1, 12)); // NOI18N

        jTextField_TimKiemTBMuon.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField_TimKiemTBMuonKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout jPanel14Layout = new javax.swing.GroupLayout(jPanel14);
        jPanel14.setLayout(jPanel14Layout);
        jPanel14Layout.setHorizontalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel14Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel49, javax.swing.GroupLayout.PREFERRED_SIZE, 444, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel14Layout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel14Layout.createSequentialGroup()
                                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jTextField_TimKiemTBMuon, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel64, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel63)
                                    .addComponent(jComboBox_LocTheoLoaiTBDK, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel14Layout.createSequentialGroup()
                                .addComponent(jLabel48, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jPanel15, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel14Layout.createSequentialGroup()
                                .addComponent(jButton_HuyChonTB, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(277, 277, 277)
                                .addComponent(jButton1_XacNhanChonTB, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))))
                .addContainerGap(36, Short.MAX_VALUE))
        );
        jPanel14Layout.setVerticalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel14Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel48, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel15, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 13, Short.MAX_VALUE)
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel63)
                    .addComponent(jLabel64))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBox_LocTheoLoaiTBDK, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField_TimKiemTBMuon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 261, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1_XacNhanChonTB)
                    .addComponent(jButton_HuyChonTB))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel49)
                .addGap(29, 29, 29))
        );

        javax.swing.GroupLayout jDialog_DanhSachMuonLayout = new javax.swing.GroupLayout(jDialog_DanhSachMuon.getContentPane());
        jDialog_DanhSachMuon.getContentPane().setLayout(jDialog_DanhSachMuonLayout);
        jDialog_DanhSachMuonLayout.setHorizontalGroup(
            jDialog_DanhSachMuonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel14, javax.swing.GroupLayout.DEFAULT_SIZE, 528, Short.MAX_VALUE)
        );
        jDialog_DanhSachMuonLayout.setVerticalGroup(
            jDialog_DanhSachMuonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel14, javax.swing.GroupLayout.DEFAULT_SIZE, 488, Short.MAX_VALUE)
        );

        jDialog_ChonDSTra.setModal(true);
        jDialog_ChonDSTra.setSize(new java.awt.Dimension(450, 410));

        jPanel17.setBackground(new java.awt.Color(255, 255, 255));

        jLabel50.setText("DANH SÁCH MƯỢN");
        jLabel50.setFont(new java.awt.Font("sansserif", 1, 18)); // NOI18N
        jLabel50.setForeground(new java.awt.Color(0, 0, 102));

        jTable_ChonDSMuon.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã mượn", "Thời gian mượn", "Thời gian trả", "Mã SV"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable_ChonDSMuon.setRowHeight(20);
        jScrollPane6.setViewportView(jTable_ChonDSMuon);
        if (jTable_ChonDSMuon.getColumnModel().getColumnCount() > 0) {
            jTable_ChonDSMuon.getColumnModel().getColumn(0).setMaxWidth(100);
        }

        jButton_ChonDSMuon.setText("CHỌN");
        jButton_ChonDSMuon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_ChonDSMuonActionPerformed(evt);
            }
        });

        jLabel51.setText("*Chọn danh sách mượn cần trả trong bảng trên");
        jLabel51.setFont(new java.awt.Font("sansserif", 2, 12)); // NOI18N
        jLabel51.setForeground(new java.awt.Color(102, 102, 102));

        jPanel18.setBackground(new java.awt.Color(0, 0, 102));

        javax.swing.GroupLayout jPanel18Layout = new javax.swing.GroupLayout(jPanel18);
        jPanel18.setLayout(jPanel18Layout);
        jPanel18Layout.setHorizontalGroup(
            jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 159, Short.MAX_VALUE)
        );
        jPanel18Layout.setVerticalGroup(
            jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 24, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel17Layout = new javax.swing.GroupLayout(jPanel17);
        jPanel17.setLayout(jPanel17Layout);
        jPanel17Layout.setHorizontalGroup(
            jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel17Layout.createSequentialGroup()
                .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel17Layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addComponent(jLabel50)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel18, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel17Layout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel17Layout.createSequentialGroup()
                                .addComponent(jLabel51, javax.swing.GroupLayout.PREFERRED_SIZE, 273, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton_ChonDSMuon, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 396, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(23, Short.MAX_VALUE))
        );
        jPanel17Layout.setVerticalGroup(
            jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel17Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel50, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel18, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 263, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton_ChonDSMuon)
                    .addComponent(jLabel51))
                .addGap(42, 42, 42))
        );

        javax.swing.GroupLayout jDialog_ChonDSTraLayout = new javax.swing.GroupLayout(jDialog_ChonDSTra.getContentPane());
        jDialog_ChonDSTra.getContentPane().setLayout(jDialog_ChonDSTraLayout);
        jDialog_ChonDSTraLayout.setHorizontalGroup(
            jDialog_ChonDSTraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel17, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jDialog_ChonDSTraLayout.setVerticalGroup(
            jDialog_ChonDSTraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel17, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jDialog_ChucNang.setMinimumSize(new java.awt.Dimension(300, 420));
        jDialog_ChucNang.setModal(true);

        jPanel20.setBackground(new java.awt.Color(255, 255, 255));

        jLabel43.setText("CHỨC NĂNG");
        jLabel43.setFont(new java.awt.Font("sansserif", 1, 24)); // NOI18N
        jLabel43.setForeground(new java.awt.Color(0, 0, 102));

        jPanel21.setBackground(new java.awt.Color(0, 0, 102));

        jLabel62.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel62.setText("THỐNG KÊ");
        jLabel62.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        jLabel62.setForeground(new java.awt.Color(255, 255, 255));
        jLabel62.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel62MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel21Layout = new javax.swing.GroupLayout(jPanel21);
        jPanel21.setLayout(jPanel21Layout);
        jPanel21Layout.setHorizontalGroup(
            jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel62, javax.swing.GroupLayout.DEFAULT_SIZE, 228, Short.MAX_VALUE)
        );
        jPanel21Layout.setVerticalGroup(
            jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel62, javax.swing.GroupLayout.DEFAULT_SIZE, 42, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel22Layout = new javax.swing.GroupLayout(jPanel22);
        jPanel22.setLayout(jPanel22Layout);
        jPanel22Layout.setHorizontalGroup(
            jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel22Layout.setVerticalGroup(
            jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 42, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel23Layout = new javax.swing.GroupLayout(jPanel23);
        jPanel23.setLayout(jPanel23Layout);
        jPanel23Layout.setHorizontalGroup(
            jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel23Layout.setVerticalGroup(
            jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 42, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel24Layout = new javax.swing.GroupLayout(jPanel24);
        jPanel24.setLayout(jPanel24Layout);
        jPanel24Layout.setHorizontalGroup(
            jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel24Layout.setVerticalGroup(
            jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 42, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel20Layout = new javax.swing.GroupLayout(jPanel20);
        jPanel20.setLayout(jPanel20Layout);
        jPanel20Layout.setHorizontalGroup(
            jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel20Layout.createSequentialGroup()
                .addGroup(jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel21, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel22, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel23, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel24, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jPanel20Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jLabel43, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(126, Short.MAX_VALUE))
        );
        jPanel20Layout.setVerticalGroup(
            jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel20Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel43)
                .addGap(41, 41, 41)
                .addComponent(jPanel21, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel22, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel24, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel23, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(105, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jDialog_ChucNangLayout = new javax.swing.GroupLayout(jDialog_ChucNang.getContentPane());
        jDialog_ChucNang.getContentPane().setLayout(jDialog_ChucNangLayout);
        jDialog_ChucNangLayout.setHorizontalGroup(
            jDialog_ChucNangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel20, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jDialog_ChucNangLayout.setVerticalGroup(
            jDialog_ChucNangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel20, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(jDialog_ChucNang.DO_NOTHING_ON_CLOSE);

        jDialog_SuaTB.setMinimumSize(new java.awt.Dimension(404, 510));
        jDialog_SuaTB.setModal(true);

        jPanel25.setBackground(new java.awt.Color(255, 255, 255));

        jLabel46.setText("CHỈNH SỬA THIẾT BỊ");
        jLabel46.setFont(new java.awt.Font("sansserif", 1, 20)); // NOI18N
        jLabel46.setForeground(new java.awt.Color(0, 0, 102));

        jLabel67.setText("Mã thiết bị:");

        jLabel68.setText("Tên thiết bị");

        jLabel69.setText("Loại thiết bị: ");

        jComboBox_LoaiTB_Sua.setEnabled(false);

        jLabel70.setText("Ngày nhập kho:");

        jLabel71.setText("Mô tả: ");

        jTextArea_MoTa_Sua.setColumns(20);
        jTextArea_MoTa_Sua.setRows(5);
        jScrollPane8.setViewportView(jTextArea_MoTa_Sua);

        jComboBox_TinhTrang_Sua.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Có sẵn", "Bảo trì", "Hỏng", "Đang mượn" }));

        jLabel72.setText("Tình trạng:");

        jButton_Luu_Sua.setText("Lưu");
        jButton_Luu_Sua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_Luu_SuaActionPerformed(evt);
            }
        });

        jButton_QuayLai_Sua.setText("Quay lại");

        javax.swing.GroupLayout jPanel25Layout = new javax.swing.GroupLayout(jPanel25);
        jPanel25.setLayout(jPanel25Layout);
        jPanel25Layout.setHorizontalGroup(
            jPanel25Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel25Layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(jPanel25Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel25Layout.createSequentialGroup()
                        .addComponent(jLabel68, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jTextField_TenTb_Sua))
                    .addGroup(jPanel25Layout.createSequentialGroup()
                        .addComponent(jLabel69, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jComboBox_LoaiTB_Sua, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel25Layout.createSequentialGroup()
                        .addComponent(jLabel70)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField_NgayNhapKho_Sua))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel25Layout.createSequentialGroup()
                        .addGroup(jPanel25Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel71, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel72, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel25Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jComboBox_TinhTrang_Sua, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jScrollPane8, javax.swing.GroupLayout.DEFAULT_SIZE, 242, Short.MAX_VALUE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel25Layout.createSequentialGroup()
                        .addComponent(jButton_QuayLai_Sua, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton_Luu_Sua, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel25Layout.createSequentialGroup()
                        .addComponent(jLabel67, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel25Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel46)
                            .addComponent(jTextField_MaTb_Sua, javax.swing.GroupLayout.PREFERRED_SIZE, 245, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(41, Short.MAX_VALUE))
        );
        jPanel25Layout.setVerticalGroup(
            jPanel25Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel25Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jLabel46, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(43, 43, 43)
                .addGroup(jPanel25Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel67)
                    .addComponent(jTextField_MaTb_Sua, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel25Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel68)
                    .addComponent(jTextField_TenTb_Sua, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel25Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel69)
                    .addComponent(jComboBox_LoaiTB_Sua, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel25Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel70)
                    .addComponent(jTextField_NgayNhapKho_Sua, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel25Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel71)
                    .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel25Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBox_TinhTrang_Sua, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel72))
                .addGap(18, 18, 18)
                .addGroup(jPanel25Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton_Luu_Sua)
                    .addComponent(jButton_QuayLai_Sua))
                .addContainerGap(32, Short.MAX_VALUE))
        );

        jTextField_MaTb_Sua.setEnabled(false);
        jTextField_NgayNhapKho_Sua.setEnabled(false);

        javax.swing.GroupLayout jDialog_SuaTBLayout = new javax.swing.GroupLayout(jDialog_SuaTB.getContentPane());
        jDialog_SuaTB.getContentPane().setLayout(jDialog_SuaTBLayout);
        jDialog_SuaTBLayout.setHorizontalGroup(
            jDialog_SuaTBLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel25, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jDialog_SuaTBLayout.setVerticalGroup(
            jDialog_SuaTBLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel25, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        jDialog_SuaTB.setLocationRelativeTo(null);

        jDialog_ThemLoaiTB.setMinimumSize(new java.awt.Dimension(290, 300));
        jDialog_ThemLoaiTB.setModal(true);

        jPanel26.setBackground(new java.awt.Color(255, 255, 255));
        jPanel26.setMinimumSize(new java.awt.Dimension(304, 280));
        jPanel26.setPreferredSize(new java.awt.Dimension(305, 280));

        jLabel52.setText("THÊM LOẠI THIẾT BỊ");
        jLabel52.setFont(new java.awt.Font("sansserif", 1, 20)); // NOI18N
        jLabel52.setForeground(new java.awt.Color(0, 0, 102));

        jLabel58.setText("Mã thiết bị:");
        jLabel58.setFont(new java.awt.Font("sansserif", 1, 12)); // NOI18N

        jLabel65.setText("Tên loại thiết bị:");
        jLabel65.setFont(new java.awt.Font("sansserif", 1, 12)); // NOI18N

        jButton_ThemLoaiTB.setText("THÊM");
        jButton_ThemLoaiTB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_ThemLoaiTBActionPerformed(evt);
            }
        });

        jButton_QuayLai_ThemLoai.setText("QUAY LẠI");
        jButton_QuayLai_ThemLoai.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_QuayLai_ThemLoaiActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel26Layout = new javax.swing.GroupLayout(jPanel26);
        jPanel26.setLayout(jPanel26Layout);
        jPanel26Layout.setHorizontalGroup(
            jPanel26Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel26Layout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addGroup(jPanel26Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel52, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel26Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(jPanel26Layout.createSequentialGroup()
                            .addComponent(jButton_QuayLai_ThemLoai)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton_ThemLoaiTB, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(jTextField_MaLoai_Them, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel58, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel65, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jTextField_TenLoaiThem, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(54, Short.MAX_VALUE))
        );
        jPanel26Layout.setVerticalGroup(
            jPanel26Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel26Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(jLabel52, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel58)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField_MaLoai_Them, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel65)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField_TenLoaiThem, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 31, Short.MAX_VALUE)
                .addGroup(jPanel26Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton_ThemLoaiTB, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton_QuayLai_ThemLoai, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29))
        );

        javax.swing.GroupLayout jDialog_ThemLoaiTBLayout = new javax.swing.GroupLayout(jDialog_ThemLoaiTB.getContentPane());
        jDialog_ThemLoaiTB.getContentPane().setLayout(jDialog_ThemLoaiTBLayout);
        jDialog_ThemLoaiTBLayout.setHorizontalGroup(
            jDialog_ThemLoaiTBLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel26, javax.swing.GroupLayout.DEFAULT_SIZE, 304, Short.MAX_VALUE)
        );
        jDialog_ThemLoaiTBLayout.setVerticalGroup(
            jDialog_ThemLoaiTBLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel26, javax.swing.GroupLayout.DEFAULT_SIZE, 296, Short.MAX_VALUE)
        );

        jDialog_ThemSV.setMinimumSize(new java.awt.Dimension(400, 541));
        jDialog_ThemSV.setModal(true);

        jPanel27.setBackground(new java.awt.Color(255, 255, 255));

        jLabel66.setText("THÊM SINH VIÊN");
        jLabel66.setFont(new java.awt.Font("Roboto Medium", 1, 24)); // NOI18N
        jLabel66.setForeground(new java.awt.Color(0, 0, 102));

        jTextField_MaSV_Them.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTextField_MaSV_ThemFocusGained(evt);
            }
        });

        jButton_SV_Them.setText("THÊM");
        jButton_SV_Them.setBackground(new java.awt.Color(51, 102, 255));
        jButton_SV_Them.setBorder(null);
        jButton_SV_Them.setFont(new java.awt.Font("Roboto Black", 1, 13)); // NOI18N
        jButton_SV_Them.setForeground(new java.awt.Color(255, 255, 255));
        jButton_SV_Them.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_SV_ThemActionPerformed(evt);
            }
        });

        jLabel75.setText("Mã sinh viên (*)");
        jLabel75.setFont(new java.awt.Font("Roboto Medium", 0, 14)); // NOI18N

        jTextField_HoTenSV_Them.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTextField_HoTenSV_ThemFocusGained(evt);
            }
        });

        jLabel76.setText("Họ và tên (*)");
        jLabel76.setFont(new java.awt.Font("Roboto Medium", 0, 14)); // NOI18N

        jLabel77.setText("Lớp (*)");
        jLabel77.setFont(new java.awt.Font("Roboto Medium", 0, 14)); // NOI18N

        jTextField_LopSV_Them.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTextField_LopSV_ThemFocusGained(evt);
            }
        });

        jLabel78.setText("Số điện thoại (*)");
        jLabel78.setFont(new java.awt.Font("Roboto Medium", 0, 14)); // NOI18N

        jTextField_SDTSV_Them.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTextField_SDTSV_ThemFocusGained(evt);
            }
        });
        jTextField_SDTSV_Them.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField_SDTSV_ThemKeyReleased(evt);
            }
        });

        jLabel79.setText("*Các trường có (*) là bắt buộc");
        jLabel79.setFont(new java.awt.Font("sansserif", 2, 12)); // NOI18N
        jLabel79.setForeground(new java.awt.Color(102, 102, 102));

        jLabel_NotePass.setFont(new java.awt.Font("sansserif", 2, 12)); // NOI18N
        jLabel_NotePass.setForeground(new java.awt.Color(255, 0, 0));

        jLabel_NoteSDT.setForeground(new java.awt.Color(255, 0, 51));

        javax.swing.GroupLayout jPanel28Layout = new javax.swing.GroupLayout(jPanel28);
        jPanel28.setLayout(jPanel28Layout);
        jPanel28Layout.setHorizontalGroup(
            jPanel28Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel28Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel28Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel28Layout.createSequentialGroup()
                        .addGroup(jPanel28Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextField_SDTSV_Them, javax.swing.GroupLayout.PREFERRED_SIZE, 295, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField_LopSV_Them, javax.swing.GroupLayout.PREFERRED_SIZE, 295, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel77, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel76, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel75, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel28Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jTextField_MaSV_Them, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jTextField_HoTenSV_Them)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel28Layout.createSequentialGroup()
                                    .addComponent(jLabel78)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jLabel_NoteSDT, javax.swing.GroupLayout.DEFAULT_SIZE, 185, Short.MAX_VALUE))))
                        .addContainerGap(18, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel28Layout.createSequentialGroup()
                        .addGroup(jPanel28Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel28Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jButton_SV_Them, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel28Layout.createSequentialGroup()
                                .addComponent(jLabel79, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel_NotePass, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGap(21, 21, 21))))
        );
        jPanel28Layout.setVerticalGroup(
            jPanel28Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel28Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jLabel75, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField_MaSV_Them, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel76, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField_HoTenSV_Them, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel77)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jTextField_LopSV_Them, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel28Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel78, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel_NoteSDT, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jTextField_SDTSV_Them, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel28Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel_NotePass, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel79, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton_SV_Them, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(42, 42, 42))
        );

        javax.swing.GroupLayout jPanel27Layout = new javax.swing.GroupLayout(jPanel27);
        jPanel27.setLayout(jPanel27Layout);
        jPanel27Layout.setHorizontalGroup(
            jPanel27Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel27Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(jPanel27Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel66)
                    .addComponent(jPanel28, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(40, Short.MAX_VALUE))
        );
        jPanel27Layout.setVerticalGroup(
            jPanel27Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel27Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jLabel66)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel28, javax.swing.GroupLayout.PREFERRED_SIZE, 421, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(61, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jDialog_ThemSVLayout = new javax.swing.GroupLayout(jDialog_ThemSV.getContentPane());
        jDialog_ThemSV.getContentPane().setLayout(jDialog_ThemSVLayout);
        jDialog_ThemSVLayout.setHorizontalGroup(
            jDialog_ThemSVLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel27, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jDialog_ThemSVLayout.setVerticalGroup(
            jDialog_ThemSVLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel27, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jDialog_ThongTinNV.setMinimumSize(new java.awt.Dimension(570, 620));
        jDialog_ThongTinNV.setModal(true);

        jPanel29.setBackground(new java.awt.Color(255, 255, 255));

        jLabel74.setText("NHÂN VIÊN");
        jLabel74.setBackground(new java.awt.Color(0, 0, 102));
        jLabel74.setFont(new java.awt.Font("sansserif", 1, 24)); // NOI18N
        jLabel74.setForeground(new java.awt.Color(0, 0, 102));

        jLabel80.setText("Thông tin");
        jLabel80.setFont(new java.awt.Font("sansserif", 1, 12)); // NOI18N
        jLabel80.setForeground(new java.awt.Color(102, 102, 102));

        jTextField_MaNV.setEnabled(false);

        jTable_NhanVIien.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã NV", "Họ tên", "Chức vụ", "SĐT"
            }
        ));
        jTable_NhanVIien.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable_NhanVIienMouseClicked(evt);
            }
        });
        jScrollPane9.setViewportView(jTable_NhanVIien);

        jComboBox_ChucVu.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "QUẢN LÍ", "NHÂN VIÊN" }));

        jLabel81.setText("Mã nhân viên");

        jLabel82.setText("Họ và tên");

        jLabel83.setText("Giới tính");

        jComboBox_GioiTinh.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "NAM", "NỮ" }));

        jLabel84.setText("Chức vụ");

        jLabel85.setText("Năm sinh");

        jLabel86.setText("SDT");

        jLabel87.setText("Tên đăng nhập");

        jLabel88.setText("Mật khẩu");

        jLabel89.setText("Chức năng");
        jLabel89.setFont(new java.awt.Font("sansserif", 1, 12)); // NOI18N
        jLabel89.setForeground(new java.awt.Color(102, 102, 102));

        jButton_ThemNV.setText("THÊM");
        jButton_ThemNV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_ThemNVActionPerformed(evt);
            }
        });

        jButton_XoaNV.setText("XÓA");
        jButton_XoaNV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_XoaNVActionPerformed(evt);
            }
        });

        jButton_LuuNV.setText("LƯU");
        jButton_LuuNV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_LuuNVActionPerformed(evt);
            }
        });

        jPanel_ChinhSuaNV.setBackground(new java.awt.Color(0, 0, 102));

        jLabel_ChinhSuaNV_btn.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel_ChinhSuaNV_btn.setText("Chỉnh sửa ");
        jLabel_ChinhSuaNV_btn.setFont(new java.awt.Font("sansserif", 1, 12)); // NOI18N
        jLabel_ChinhSuaNV_btn.setForeground(new java.awt.Color(255, 255, 255));
        jLabel_ChinhSuaNV_btn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel_ChinhSuaNV_btnMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel_ChinhSuaNVLayout = new javax.swing.GroupLayout(jPanel_ChinhSuaNV);
        jPanel_ChinhSuaNV.setLayout(jPanel_ChinhSuaNVLayout);
        jPanel_ChinhSuaNVLayout.setHorizontalGroup(
            jPanel_ChinhSuaNVLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel_ChinhSuaNV_btn, javax.swing.GroupLayout.DEFAULT_SIZE, 112, Short.MAX_VALUE)
        );
        jPanel_ChinhSuaNVLayout.setVerticalGroup(
            jPanel_ChinhSuaNVLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel_ChinhSuaNV_btn, javax.swing.GroupLayout.DEFAULT_SIZE, 34, Short.MAX_VALUE)
        );

        jPanel_ThemNV.setBackground(new java.awt.Color(204, 204, 204));
        jPanel_ThemNV.setForeground(new java.awt.Color(0, 0, 102));

        jLabel_ThemNV_btn.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel_ThemNV_btn.setText("Thêm nhân viên");
        jLabel_ThemNV_btn.setFont(new java.awt.Font("sansserif", 1, 12)); // NOI18N
        jLabel_ThemNV_btn.setForeground(new java.awt.Color(0, 0, 102));
        jLabel_ThemNV_btn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel_ThemNV_btnMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel_ThemNVLayout = new javax.swing.GroupLayout(jPanel_ThemNV);
        jPanel_ThemNV.setLayout(jPanel_ThemNVLayout);
        jPanel_ThemNVLayout.setHorizontalGroup(
            jPanel_ThemNVLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel_ThemNV_btn, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 119, Short.MAX_VALUE)
        );
        jPanel_ThemNVLayout.setVerticalGroup(
            jPanel_ThemNVLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel_ThemNV_btn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel29Layout = new javax.swing.GroupLayout(jPanel29);
        jPanel29.setLayout(jPanel29Layout);
        jPanel29Layout.setHorizontalGroup(
            jPanel29Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel29Layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addGroup(jPanel29Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel29Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(jPanel29Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel29Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jTextField_MaNV, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel83, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel81, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jComboBox_GioiTinh, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel85, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(datePicker_NamSinh, javax.swing.GroupLayout.DEFAULT_SIZE, 181, Short.MAX_VALUE))
                            .addComponent(jLabel87, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField_TenDN, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel29Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel88, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel84, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField_HoTenNV)
                            .addComponent(jTextField_SDTNV)
                            .addComponent(jLabel82, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jComboBox_ChucVu, javax.swing.GroupLayout.Alignment.TRAILING, 0, 180, Short.MAX_VALUE)
                            .addComponent(jLabel86, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField_MatKhau)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel29Layout.createSequentialGroup()
                        .addComponent(jLabel89)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSeparator9, javax.swing.GroupLayout.PREFERRED_SIZE, 410, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel29Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel29Layout.createSequentialGroup()
                            .addComponent(jButton_ThemNV, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(jButton_XoaNV, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(jButton_LuuNV, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(jScrollPane9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel29Layout.createSequentialGroup()
                        .addComponent(jLabel74, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel_ThemNV, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jPanel_ChinhSuaNV, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel29Layout.createSequentialGroup()
                        .addComponent(jLabel80)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jSeparator8, javax.swing.GroupLayout.PREFERRED_SIZE, 404, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(29, Short.MAX_VALUE))
        );
        jPanel29Layout.setVerticalGroup(
            jPanel29Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel29Layout.createSequentialGroup()
                .addGroup(jPanel29Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel29Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(jPanel29Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jPanel_ChinhSuaNV, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel_ThemNV, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(20, 20, 20))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel29Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel74, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)))
                .addGroup(jPanel29Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jSeparator8, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel80, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel29Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel81)
                    .addComponent(jLabel82))
                .addGap(17, 17, 17)
                .addGroup(jPanel29Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField_MaNV, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField_HoTenNV, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel29Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel29Layout.createSequentialGroup()
                        .addComponent(jLabel83)
                        .addGap(0, 0, 0)
                        .addGroup(jPanel29Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jComboBox_GioiTinh, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jComboBox_ChucVu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel29Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel85)
                            .addComponent(jLabel86))
                        .addGap(2, 2, 2)
                        .addGroup(jPanel29Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextField_SDTNV, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(datePicker_NamSinh, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel29Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel87)
                            .addComponent(jLabel88))
                        .addGap(10, 10, 10)
                        .addGroup(jPanel29Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextField_TenDN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField_MatKhau, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jLabel84))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel29Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jSeparator9, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel89, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel29Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton_ThemNV)
                    .addComponent(jButton_XoaNV)
                    .addComponent(jButton_LuuNV))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane9, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(23, 23, 23))
        );

        javax.swing.GroupLayout jDialog_ThongTinNVLayout = new javax.swing.GroupLayout(jDialog_ThongTinNV.getContentPane());
        jDialog_ThongTinNV.getContentPane().setLayout(jDialog_ThongTinNVLayout);
        jDialog_ThongTinNVLayout.setHorizontalGroup(
            jDialog_ThongTinNVLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel29, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jDialog_ThongTinNVLayout.setVerticalGroup(
            jDialog_ThongTinNVLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel29, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jDialog_ThongTinCaNhan.setMinimumSize(new java.awt.Dimension(345, 671));
        jDialog_ThongTinCaNhan.setModal(true);

        jPanel30.setBackground(new java.awt.Color(255, 255, 255));

        jLabel90.setText("THÔNG TIN ");
        jLabel90.setFont(new java.awt.Font("sansserif", 1, 24)); // NOI18N
        jLabel90.setForeground(new java.awt.Color(0, 0, 102));

        jLabel91.setText("Mã nhân viên:");

        jTextField_MaNV_CaNhan.setEnabled(false);

        jLabel92.setText("Họ tên:");

        jLabel93.setText("Giới tính:");

        jComboBox_GioiTinh_CaNhan.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "NAM", "NỮ" }));

        jLabel94.setText("Chức vụ:");

        jComboBox_ChucVu_CaNhan.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "QUẢN LÍ", "NHÂN VIÊN" }));
        jComboBox_ChucVu_CaNhan.setEnabled(false);

        jLabel95.setText("Số điện thoại:");

        jLabel96.setText("Năm sinh: ");

        jLabel97.setText("TÀI KHOẢN");
        jLabel97.setFont(new java.awt.Font("sansserif", 1, 12)); // NOI18N

        jLabel98.setText("THÔNG TIN CÁ NHÂN");
        jLabel98.setFont(new java.awt.Font("sansserif", 1, 12)); // NOI18N

        jLabel99.setText("Tên đăng nhập");

        jLabel100.setText("Mật khẩu:");

        jButton_LuuTTCN.setText("LƯU");
        jButton_LuuTTCN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_LuuTTCNActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel30Layout = new javax.swing.GroupLayout(jPanel30);
        jPanel30.setLayout(jPanel30Layout);
        jPanel30Layout.setHorizontalGroup(
            jPanel30Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel30Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(jPanel30Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel30Layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addGroup(jPanel30Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel30Layout.createSequentialGroup()
                                .addGap(1, 1, 1)
                                .addComponent(jLabel91))
                            .addGroup(jPanel30Layout.createSequentialGroup()
                                .addComponent(jLabel93, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(105, 105, 105)
                                .addComponent(jLabel94, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jTextField_MaNV_CaNhan)
                            .addComponent(jLabel92, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField_HoTenNV_CaNhan)
                            .addGroup(jPanel30Layout.createSequentialGroup()
                                .addComponent(jComboBox_GioiTinh_CaNhan, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jComboBox_ChucVu_CaNhan, 0, 130, Short.MAX_VALUE))
                            .addComponent(jLabel95, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField_SDT_CaNhan)
                            .addComponent(jLabel96, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(datePicker_NamSinhNV_CaNhan, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel30Layout.createSequentialGroup()
                        .addGroup(jPanel30Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel90)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel30Layout.createSequentialGroup()
                                .addComponent(jLabel98, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(18, 18, 18)
                                .addComponent(jSeparator11, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(44, 44, 44))))
            .addGroup(jPanel30Layout.createSequentialGroup()
                .addGroup(jPanel30Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(jPanel30Layout.createSequentialGroup()
                        .addGroup(jPanel30Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel30Layout.createSequentialGroup()
                                .addGap(20, 20, 20)
                                .addComponent(jLabel97, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jSeparator10, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel30Layout.createSequentialGroup()
                                .addGap(29, 29, 29)
                                .addComponent(jLabel99)))
                        .addGap(14, 14, 14))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel30Layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addGroup(jPanel30Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(jPanel30Layout.createSequentialGroup()
                                .addComponent(jLabel_MaTK, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 152, Short.MAX_VALUE)
                                .addComponent(jButton_LuuTTCN, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel100, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField_TenDangNhap_CaNhan, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextField_MatKhau_CaNhan, javax.swing.GroupLayout.Alignment.LEADING))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel30Layout.setVerticalGroup(
            jPanel30Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel30Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jLabel90, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31)
                .addGroup(jPanel30Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel98)
                    .addComponent(jSeparator11, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel91)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField_MaNV_CaNhan, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel92)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField_HoTenNV_CaNhan, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel96)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(datePicker_NamSinhNV_CaNhan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel30Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel93)
                    .addComponent(jLabel94))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel30Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBox_GioiTinh_CaNhan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBox_ChucVu_CaNhan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel95)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField_SDT_CaNhan, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel30Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel97)
                    .addComponent(jSeparator10, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel99)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField_TenDangNhap_CaNhan, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel100)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField_MatKhau_CaNhan, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel30Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton_LuuTTCN, javax.swing.GroupLayout.DEFAULT_SIZE, 34, Short.MAX_VALUE)
                    .addGroup(jPanel30Layout.createSequentialGroup()
                        .addComponent(jLabel_MaTK, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        javax.swing.GroupLayout jDialog_ThongTinCaNhanLayout = new javax.swing.GroupLayout(jDialog_ThongTinCaNhan.getContentPane());
        jDialog_ThongTinCaNhan.getContentPane().setLayout(jDialog_ThongTinCaNhanLayout);
        jDialog_ThongTinCaNhanLayout.setHorizontalGroup(
            jDialog_ThongTinCaNhanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel30, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jDialog_ThongTinCaNhanLayout.setVerticalGroup(
            jDialog_ThongTinCaNhanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDialog_ThongTinCaNhanLayout.createSequentialGroup()
                .addComponent(jPanel30, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jDialog_DanhSachSV.setMinimumSize(new java.awt.Dimension(654, 645));
        jDialog_DanhSachSV.setModal(true);

        jPanel31.setBackground(new java.awt.Color(255, 255, 255));

        jTable_SinhVien.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "MÃ SV", "HỌ TÊN", "LỚP", "SĐT"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable_SinhVien.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable_SinhVienMouseClicked(evt);
            }
        });
        jScrollPane11.setViewportView(jTable_SinhVien);

        jLabel101.setText("DANH SÁCH SINH VIÊN");
        jLabel101.setFont(new java.awt.Font("sansserif", 1, 18)); // NOI18N
        jLabel101.setForeground(new java.awt.Color(0, 0, 102));

        jLabel102.setText("THÔNG TIN SINH VIÊN");
        jLabel102.setFont(new java.awt.Font("sansserif", 1, 18)); // NOI18N
        jLabel102.setForeground(new java.awt.Color(0, 0, 102));

        jPanel32.setBackground(new java.awt.Color(0, 0, 102));
        jPanel32.setForeground(new java.awt.Color(0, 0, 102));

        javax.swing.GroupLayout jPanel32Layout = new javax.swing.GroupLayout(jPanel32);
        jPanel32.setLayout(jPanel32Layout);
        jPanel32Layout.setHorizontalGroup(
            jPanel32Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 337, Short.MAX_VALUE)
        );
        jPanel32Layout.setVerticalGroup(
            jPanel32Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 23, Short.MAX_VALUE)
        );

        jLabel103.setText("THÔNG TIN");
        jLabel103.setFont(new java.awt.Font("sansserif", 1, 12)); // NOI18N

        jLabel104.setText("Lớp (*)");
        jLabel104.setFont(new java.awt.Font("Roboto Medium", 0, 12)); // NOI18N

        jTextField_LopSV_TT.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTextField_LopSV_TTFocusGained(evt);
            }
        });

        jTextField_MaSV_TT.setEnabled(false);
        jTextField_MaSV_TT.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTextField_MaSV_TTFocusGained(evt);
            }
        });

        jLabel105.setText("Mã sinh viên (*)");
        jLabel105.setFont(new java.awt.Font("Roboto Medium", 0, 12)); // NOI18N

        jTextField_HoTenSV_TT.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTextField_HoTenSV_TTFocusGained(evt);
            }
        });

        jLabel106.setText("Họ và tên (*)");
        jLabel106.setFont(new java.awt.Font("Roboto Medium", 0, 12)); // NOI18N

        jTextField_SDTSV_TT.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTextField_SDTSV_TTFocusGained(evt);
            }
        });
        jTextField_SDTSV_TT.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField_SDTSV_TTKeyReleased(evt);
            }
        });

        jLabel107.setText("Số điện thoại (*)");
        jLabel107.setFont(new java.awt.Font("Roboto Medium", 0, 12)); // NOI18N

        jLabel108.setText("Tên đăng nhập:");
        jLabel108.setFont(new java.awt.Font("Roboto Medium", 0, 12)); // NOI18N

        jLabel109.setText("TÀI KHOẢN");
        jLabel109.setFont(new java.awt.Font("sansserif", 1, 12)); // NOI18N

        jTextField_TenDN_TT.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTextField_TenDN_TTFocusGained(evt);
            }
        });
        jTextField_TenDN_TT.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField_TenDN_TTKeyReleased(evt);
            }
        });

        jLabel110.setText("Mật khẩu:");
        jLabel110.setFont(new java.awt.Font("Roboto Medium", 0, 12)); // NOI18N

        jTextField_MatKhau_TT.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTextField_MatKhau_TTFocusGained(evt);
            }
        });
        jTextField_MatKhau_TT.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField_MatKhau_TTKeyReleased(evt);
            }
        });

        jButton_Luu_TT.setText("LƯU");
        jButton_Luu_TT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_Luu_TTActionPerformed(evt);
            }
        });

        jButton_XoaSV.setText("XÓA");
        jButton_XoaSV.setEnabled(false);
        jButton_XoaSV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_XoaSVActionPerformed(evt);
            }
        });

        jTextField_TimKiemSV.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField_TimKiemSVKeyReleased(evt);
            }
        });

        jLabel111.setText("Tìm kiếm:");
        jLabel111.setFont(new java.awt.Font("Roboto Medium", 0, 12)); // NOI18N

        javax.swing.GroupLayout jPanel31Layout = new javax.swing.GroupLayout(jPanel31);
        jPanel31.setLayout(jPanel31Layout);
        jPanel31Layout.setHorizontalGroup(
            jPanel31Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel31Layout.createSequentialGroup()
                .addGroup(jPanel31Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel31Layout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addComponent(jLabel102, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel32, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel31Layout.createSequentialGroup()
                        .addGap(72, 72, 72)
                        .addGroup(jPanel31Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel106, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel105, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField_HoTenSV_TT, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 201, Short.MAX_VALUE)
                            .addComponent(jTextField_MaSV_TT, javax.swing.GroupLayout.Alignment.LEADING))
                        .addGap(40, 40, 40)
                        .addGroup(jPanel31Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel104, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel107)
                            .addComponent(jTextField_SDTSV_TT, javax.swing.GroupLayout.DEFAULT_SIZE, 231, Short.MAX_VALUE)
                            .addComponent(jTextField_LopSV_TT)))
                    .addGroup(jPanel31Layout.createSequentialGroup()
                        .addGap(203, 203, 203)
                        .addComponent(jLabel101))
                    .addGroup(jPanel31Layout.createSequentialGroup()
                        .addGap(52, 52, 52)
                        .addGroup(jPanel31Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel31Layout.createSequentialGroup()
                                .addComponent(jLabel103, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jSeparator12))
                            .addGroup(jPanel31Layout.createSequentialGroup()
                                .addComponent(jLabel109, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jSeparator13))
                            .addComponent(jScrollPane11, javax.swing.GroupLayout.PREFERRED_SIZE, 530, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel31Layout.createSequentialGroup()
                                .addGap(23, 23, 23)
                                .addGroup(jPanel31Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(jPanel31Layout.createSequentialGroup()
                                        .addComponent(jButton_XoaSV, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jButton_Luu_TT, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel31Layout.createSequentialGroup()
                                        .addGroup(jPanel31Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel108)
                                            .addComponent(jTextField_TenDN_TT, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(42, 42, 42)
                                        .addGroup(jPanel31Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel110)
                                            .addComponent(jTextField_MatKhau_TT, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                            .addGroup(jPanel31Layout.createSequentialGroup()
                                .addComponent(jLabel111)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextField_TimKiemSV, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(48, Short.MAX_VALUE))
        );
        jPanel31Layout.setVerticalGroup(
            jPanel31Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel31Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(jPanel31Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel32, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel102))
                .addGap(18, 18, 18)
                .addGroup(jPanel31Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel103)
                    .addComponent(jSeparator12, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel31Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel105, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel104))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel31Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField_MaSV_TT, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField_LopSV_TT, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel31Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel106, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel107, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel31Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField_HoTenSV_TT, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField_SDTSV_TT, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel31Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel109)
                    .addComponent(jSeparator13, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel31Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel108, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel110, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel31Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField_TenDN_TT, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField_MatKhau_TT, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel31Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton_XoaSV, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel31Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButton_Luu_TT)))
                .addGap(24, 24, 24)
                .addGroup(jPanel31Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField_TimKiemSV, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel111, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel101)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane11, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36))
        );

        javax.swing.GroupLayout jDialog_DanhSachSVLayout = new javax.swing.GroupLayout(jDialog_DanhSachSV.getContentPane());
        jDialog_DanhSachSV.getContentPane().setLayout(jDialog_DanhSachSVLayout);
        jDialog_DanhSachSVLayout.setHorizontalGroup(
            jDialog_DanhSachSVLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel31, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jDialog_DanhSachSVLayout.setVerticalGroup(
            jDialog_DanhSachSVLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDialog_DanhSachSVLayout.createSequentialGroup()
                .addComponent(jPanel31, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel3.setBackground(new java.awt.Color(0, 0, 102));

        jLabel8.setText("  PHẦN MỀM QUẢN LÝ CHO MƯỢN THIẾT BỊ        ");
        jLabel8.setBackground(new java.awt.Color(235, 235, 235));
        jLabel8.setFont(new java.awt.Font("Segoe UI", 3, 15)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));

        jPanel_trangchu_btn.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Trang chủ");
        jLabel1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel1MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel_trangchu_btnLayout = new javax.swing.GroupLayout(jPanel_trangchu_btn);
        jPanel_trangchu_btn.setLayout(jPanel_trangchu_btnLayout);
        jPanel_trangchu_btnLayout.setHorizontalGroup(
            jPanel_trangchu_btnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel_trangchu_btnLayout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel_trangchu_btnLayout.setVerticalGroup(
            jPanel_trangchu_btnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 31, Short.MAX_VALUE)
        );

        jPanel_muontb_btn.setBackground(new java.awt.Color(153, 153, 153));

        jLabel2.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        jLabel2.setText("Mượn thiết bị");
        jLabel2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel2MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel_muontb_btnLayout = new javax.swing.GroupLayout(jPanel_muontb_btn);
        jPanel_muontb_btn.setLayout(jPanel_muontb_btnLayout);
        jPanel_muontb_btnLayout.setHorizontalGroup(
            jPanel_muontb_btnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel_muontb_btnLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel_muontb_btnLayout.setVerticalGroup(
            jPanel_muontb_btnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jPanel_tratb_btn.setBackground(new java.awt.Color(153, 153, 153));

        jLabel3.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        jLabel3.setText("Trả thiết bị");
        jLabel3.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel3MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel_tratb_btnLayout = new javax.swing.GroupLayout(jPanel_tratb_btn);
        jPanel_tratb_btn.setLayout(jPanel_tratb_btnLayout);
        jPanel_tratb_btnLayout.setHorizontalGroup(
            jPanel_tratb_btnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel_tratb_btnLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel_tratb_btnLayout.setVerticalGroup(
            jPanel_tratb_btnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jPanel_themtb_btn.setBackground(new java.awt.Color(153, 153, 153));

        jLabel4.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        jLabel4.setText("Thêm thiết bị");
        jLabel4.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel4MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel_themtb_btnLayout = new javax.swing.GroupLayout(jPanel_themtb_btn);
        jPanel_themtb_btn.setLayout(jPanel_themtb_btnLayout);
        jPanel_themtb_btnLayout.setHorizontalGroup(
            jPanel_themtb_btnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel_themtb_btnLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel_themtb_btnLayout.setVerticalGroup(
            jPanel_themtb_btnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, 31, Short.MAX_VALUE)
        );

        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/quanli/images/icons8_settings_24px_1.png"))); // NOI18N
        jLabel6.setToolTipText("Cài đặt");
        jLabel6.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel8)
                .addGap(51, 51, 51)
                .addComponent(jPanel_trangchu_btn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel_muontb_btn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel_tratb_btn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel_themtb_btn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 150, Short.MAX_VALUE)
                .addComponent(jLabel6)
                .addGap(16, 16, 16))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jPanel_themtb_btn, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel_tratb_btn, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel_muontb_btn, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPanel_trangchu_btn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(10, Short.MAX_VALUE))
        );

        jPanel2.add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1010, 50));

        jPanel4.setBackground(new java.awt.Color(42, 42, 112));
        jPanel4.setForeground(new java.awt.Color(255, 255, 255));

        jButton16.setText("ĐĂNG XUẤT");
        jButton16.setBackground(new java.awt.Color(153, 153, 153));
        jButton16.setFont(new java.awt.Font("sansserif", 1, 12)); // NOI18N
        jButton16.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton16ActionPerformed(evt);
            }
        });

        jPanel9.setBackground(new java.awt.Color(220, 220, 220));

        jLabel_ChucNang.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel_ChucNang.setText("CHỨC NĂNG");
        jLabel_ChucNang.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel_ChucNang, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel_ChucNang, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 31, Short.MAX_VALUE)
        );

        jPanel10.setBackground(new java.awt.Color(220, 220, 220));

        jLabel44.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        jLabel44.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel44.setText("XUẤT DANH SÁCH");
        jLabel44.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel44.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel44MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel44, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel44, javax.swing.GroupLayout.DEFAULT_SIZE, 31, Short.MAX_VALUE)
        );

        jPanel11.setBackground(new java.awt.Color(220, 220, 220));

        jLabel_time.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel_time.setText("ĐỒNG HỒ");
        jLabel_time.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel11Layout.createSequentialGroup()
                .addComponent(jLabel_time, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel_time)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel_TenNV.setFont(new java.awt.Font("sansserif", 1, 12)); // NOI18N
        jLabel_TenNV.setForeground(new java.awt.Color(255, 255, 255));
        jLabel_TenNV.setIcon(new javax.swing.ImageIcon(getClass().getResource("/quanli/images/icons8_name_tag_40px.png"))); // NOI18N
        jLabel_TenNV.setText("NGUYỄN MINH HUẤN");
        jLabel_TenNV.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel_TenNV.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel_TenNVMouseClicked(evt);
            }
        });

        jLabel47.setText("Mã nhân viên: ");
        jLabel47.setFont(new java.awt.Font("sansserif", 1, 12)); // NOI18N
        jLabel47.setForeground(new java.awt.Color(255, 255, 255));

        jLabel_MaNV.setText("QL01");
        jLabel_MaNV.setFont(new java.awt.Font("sansserif", 1, 12)); // NOI18N
        jLabel_MaNV.setForeground(new java.awt.Color(255, 255, 255));

        jLabel_ThongKe.setFont(new java.awt.Font("sansserif", 1, 12)); // NOI18N
        jLabel_ThongKe.setText("1. Thống kê");
        jLabel_ThongKe.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel_ThongKe.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel_ThongKeMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabel_ThongKeMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLabel_ThongKeMouseExited(evt);
            }
        });

        jLabel_ThemSV.setFont(new java.awt.Font("sansserif", 1, 12)); // NOI18N
        jLabel_ThemSV.setText("2. Thêm sinh viên");
        jLabel_ThemSV.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel_ThemSV.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel_ThemSVMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabel_ThemSVMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLabel_ThemSVMouseExited(evt);
            }
        });

        jLabel_DanhSachSV.setFont(new java.awt.Font("sansserif", 1, 12)); // NOI18N
        jLabel_DanhSachSV.setText("3. Danh sách sinh viên");
        jLabel_DanhSachSV.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel_DanhSachSV.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel_DanhSachSVMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabel_DanhSachSVMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLabel_DanhSachSVMouseExited(evt);
            }
        });

        jLabel_ThemLoaiThietBi.setFont(new java.awt.Font("sansserif", 1, 12)); // NOI18N
        jLabel_ThemLoaiThietBi.setText("4. Thêm loại thiết bị");
        jLabel_ThemLoaiThietBi.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel_ThemLoaiThietBi.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel_ThemLoaiThietBiMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabel_ThemLoaiThietBiMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLabel_ThemLoaiThietBiMouseExited(evt);
            }
        });

        jLabel_ThongTinNV.setFont(new java.awt.Font("sansserif", 1, 12)); // NOI18N
        jLabel_ThongTinNV.setText("5. Thông tin nhân viên");
        jLabel_ThongTinNV.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel_ThongTinNV.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel_ThongTinNVMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabel_ThongTinNVMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLabel_ThongTinNVMouseExited(evt);
            }
        });

        javax.swing.GroupLayout jPanel19Layout = new javax.swing.GroupLayout(jPanel19);
        jPanel19.setLayout(jPanel19Layout);
        jPanel19Layout.setHorizontalGroup(
            jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel19Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel_DanhSachSV, javax.swing.GroupLayout.DEFAULT_SIZE, 161, Short.MAX_VALUE)
                    .addGroup(jPanel19Layout.createSequentialGroup()
                        .addGroup(jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel_ThemSV, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel_ThongKe, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel_ThemLoaiThietBi, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel_ThongTinNV, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel19Layout.setVerticalGroup(
            jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel19Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jLabel_ThongKe)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel_ThemSV)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel_DanhSachSV)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel_ThemLoaiThietBi)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel_ThongTinNV)
                .addContainerGap(34, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap(25, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addComponent(jButton16)
                        .addGap(54, 54, 54))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(jLabel47)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel_MaNV, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jPanel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jPanel10, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jPanel19, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(22, 22, 22))))
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jLabel_TenNV, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(jLabel_TenNV)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel47)
                    .addComponent(jLabel_MaNV))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 141, Short.MAX_VALUE)
                .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel19, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addComponent(jButton16, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18))
        );

        jPanel2.add(jPanel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 40, 220, 600));

        jPanel_trangchu.setBackground(new java.awt.Color(255, 255, 255));

        jLabel5.setText("DANH SÁCH THIẾT BỊ");
        jLabel5.setFont(new java.awt.Font("sansserif", 1, 24)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 0, 102));

        jSeparator1.setAlignmentX(1.0F);
        jSeparator1.setAlignmentY(1.0F);
        jSeparator1.setBackground(new java.awt.Color(0, 0, 102));
        jSeparator1.setForeground(new java.awt.Color(0, 0, 102));
        jSeparator1.setMinimumSize(new java.awt.Dimension(0, 3));

        jTable_TBCoSan.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã TB", "Tên TB", "Loại TB", "Ngày nhập kho", "Mô tả", "Trạng thái"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable_TBCoSan.setRowHeight(23);
        jScrollPane2.setViewportView(jTable_TBCoSan);
        if (jTable_TBCoSan.getColumnModel().getColumnCount() > 0) {
            jTable_TBCoSan.getColumnModel().getColumn(0).setMaxWidth(80);
            jTable_TBCoSan.getColumnModel().getColumn(2).setMaxWidth(70);
        }

        jTextField_TimKiem.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField_TimKiemKeyReleased(evt);
            }
        });

        jComboBox_TrangThai.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "--- Tất cả ---", "Có sẵn", "Đang mượn", "Hỏng", "Bảo trì" }));
        jComboBox_TrangThai.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox_TrangThaiActionPerformed(evt);
            }
        });

        jComboBox_LocTheoLoai.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "-- Tất cả --" }));
        jComboBox_LocTheoLoai.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox_LocTheoLoaiActionPerformed(evt);
            }
        });

        jButton_TimKiem.setText("Tìm kiếm");

        jLabel7.setText("Trạng thái:");
        jLabel7.setFont(new java.awt.Font("sansserif", 1, 12)); // NOI18N

        jLabel9.setText("Lọc theo loại thiết  bị:");
        jLabel9.setFont(new java.awt.Font("sansserif", 1, 12)); // NOI18N

        jButton_Sua.setText("SỬA");
        jButton_Sua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_SuaActionPerformed(evt);
            }
        });

        jLabel12.setText("Có sẵn:");
        jLabel12.setFont(new java.awt.Font("sansserif", 3, 12)); // NOI18N

        jLabel13.setText("Đang mượn:");
        jLabel13.setFont(new java.awt.Font("sansserif", 3, 12)); // NOI18N

        jLabel14.setText("Hỏng:");
        jLabel14.setFont(new java.awt.Font("sansserif", 3, 12)); // NOI18N

        jLabel15.setText("Bảo trì:");
        jLabel15.setFont(new java.awt.Font("sansserif", 3, 12)); // NOI18N

        jLabel_tbCoSan.setText("Co san");

        jLabel_tbHong.setText("jLabel16");

        jLabel_tbBaoTri.setText("jLabel16");

        jLabel_tbDangMuon.setText("jLabel16");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel12)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel_tbCoSan)
                        .addGap(50, 50, 50))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel13)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel_tbDangMuon, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel15)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel_tbBaoTri, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel14)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel_tbHong, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(89, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(jLabel14)
                    .addComponent(jLabel_tbCoSan)
                    .addComponent(jLabel_tbHong))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 11, Short.MAX_VALUE)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(jLabel15)
                    .addComponent(jLabel_tbBaoTri)
                    .addComponent(jLabel_tbDangMuon))
                .addContainerGap())
        );

        jSeparator2.setAlignmentX(1.0F);
        jSeparator2.setAlignmentY(1.0F);
        jSeparator2.setBackground(new java.awt.Color(0, 0, 102));
        jSeparator2.setForeground(new java.awt.Color(0, 0, 102));
        jSeparator2.setMinimumSize(new java.awt.Dimension(0, 3));

        jLabel10.setText("Tìm kiếm:");
        jLabel10.setFont(new java.awt.Font("sansserif", 1, 12)); // NOI18N

        jButton_Xoa.setText("XÓA");
        jButton_Xoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_XoaActionPerformed(evt);
            }
        });

        jLabel11.setText("TỔNG QUAN:");
        jLabel11.setFont(new java.awt.Font("sansserif", 1, 12)); // NOI18N

        jLabel20.setText("Tổng số thiết bị:");
        jLabel20.setFont(new java.awt.Font("sansserif", 3, 14)); // NOI18N

        jLabel_TongSoTB.setText("102");
        jLabel_TongSoTB.setFont(new java.awt.Font("sansserif", 1, 18)); // NOI18N

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(jLabel20)
                .addGap(18, 18, 18)
                .addComponent(jLabel_TongSoTB, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(29, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel20)
                    .addComponent(jLabel_TongSoTB, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel_trangchuLayout = new javax.swing.GroupLayout(jPanel_trangchu);
        jPanel_trangchu.setLayout(jPanel_trangchuLayout);
        jPanel_trangchuLayout.setHorizontalGroup(
            jPanel_trangchuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel_trangchuLayout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(jPanel_trangchuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel_trangchuLayout.createSequentialGroup()
                        .addGroup(jPanel_trangchuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel_trangchuLayout.createSequentialGroup()
                                .addGap(0, 5, Short.MAX_VALUE)
                                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 232, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel_trangchuLayout.createSequentialGroup()
                                .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 232, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(24, 24, 24))
                    .addGroup(jPanel_trangchuLayout.createSequentialGroup()
                        .addGroup(jPanel_trangchuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel_trangchuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 722, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel_trangchuLayout.createSequentialGroup()
                                    .addGroup(jPanel_trangchuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel_trangchuLayout.createSequentialGroup()
                                            .addComponent(jTextField_TimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(jButton_TimKiem))
                                        .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(jPanel_trangchuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel_trangchuLayout.createSequentialGroup()
                                            .addGroup(jPanel_trangchuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(jComboBox_LocTheoLoai, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(jLabel9))
                                            .addGap(33, 33, 33)
                                            .addGroup(jPanel_trangchuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(jComboBox_TrangThai, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel_trangchuLayout.createSequentialGroup()
                                .addComponent(jButton_Sua, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButton_Xoa, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jPanel_trangchuLayout.setVerticalGroup(
            jPanel_trangchuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel_trangchuLayout.createSequentialGroup()
                .addContainerGap(16, Short.MAX_VALUE)
                .addGroup(jPanel_trangchuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel_trangchuLayout.createSequentialGroup()
                        .addGroup(jPanel_trangchuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jSeparator2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel11)
                        .addGap(8, 8, 8))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel_trangchuLayout.createSequentialGroup()
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)))
                .addGroup(jPanel_trangchuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(30, 30, 30)
                .addGroup(jPanel_trangchuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jLabel9)
                    .addComponent(jLabel10))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel_trangchuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField_TimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBox_TrangThai, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBox_LocTheoLoai, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton_TimKiem))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 305, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel_trangchuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton_Sua)
                    .addComponent(jButton_Xoa))
                .addContainerGap(27, Short.MAX_VALUE))
        );

        jPanel_muontb.setBackground(new java.awt.Color(255, 255, 255));

        jLabel17.setText("MƯỢN THIẾT BỊ");
        jLabel17.setFont(new java.awt.Font("sansserif", 1, 24)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(0, 0, 102));

        jPanel6.setBackground(new java.awt.Color(0, 0, 102));
        jPanel6.setForeground(new java.awt.Color(0, 0, 102));

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 489, Short.MAX_VALUE)
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        jLabel18.setText("Thông tin người mượn:");
        jLabel18.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N

        jLabel19.setText("Mã sinh viên:");

        jTextField_MaSV.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField_MaSVKeyReleased(evt);
            }
        });

        jButton_TimSV.setText("TÌM");
        jButton_TimSV.setFont(new java.awt.Font("sansserif", 1, 12)); // NOI18N
        jButton_TimSV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_TimSVActionPerformed(evt);
            }
        });

        jLabel21.setText("Lớp:");

        jLabel22.setText("Họ tên:");

        jLabel23.setText("Số điện thoại:");

        jLabel24.setText("Thông tin mượn:");
        jLabel24.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N

        jLabel25.setText("Ngày mượn");

        jLabel26.setText("Giờ mượn");

        jTable_DSThBiMuon.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "STT", "MÃ TB", "TÊN TB", "MÔ TẢ"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(jTable_DSThBiMuon);
        if (jTable_DSThBiMuon.getColumnModel().getColumnCount() > 0) {
            jTable_DSThBiMuon.getColumnModel().getColumn(0).setMaxWidth(50);
        }

        jLabel27.setText("Ngày trả:");

        jLabel28.setText("Giờ trả:");

        jButton_ChonTB.setText("CHỌN THIẾT BỊ");
        jButton_ChonTB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_ChonTBActionPerformed(evt);
            }
        });

        jButton_DSDangKy.setText("DS ĐĂNG KÝ");
        jButton_DSDangKy.setEnabled(false);
        jButton_DSDangKy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_DSDangKyActionPerformed(evt);
            }
        });

        jButton_gioHT.setText("Thời gian hiện tại");
        jButton_gioHT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_gioHTActionPerformed(evt);
            }
        });

        jButton_XNmuon.setText("XÁC NHẬN");
        jButton_XNmuon.setBackground(new java.awt.Color(0, 102, 0));
        jButton_XNmuon.setFont(new java.awt.Font("sansserif", 1, 12)); // NOI18N
        jButton_XNmuon.setForeground(new java.awt.Color(255, 255, 255));
        jButton_XNmuon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_XNmuonActionPerformed(evt);
            }
        });

        jButton_DatLai.setText("ĐẶT LẠI");
        jButton_DatLai.setBackground(new java.awt.Color(204, 0, 51));
        jButton_DatLai.setFont(new java.awt.Font("sansserif", 1, 12)); // NOI18N
        jButton_DatLai.setForeground(new java.awt.Color(255, 255, 255));
        jButton_DatLai.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_DatLaiActionPerformed(evt);
            }
        });

        jLabel29.setText("DANH SÁCH THIẾT BỊ MƯỢN");
        jLabel29.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N

        javax.swing.GroupLayout jPanel_muontbLayout = new javax.swing.GroupLayout(jPanel_muontb);
        jPanel_muontb.setLayout(jPanel_muontbLayout);
        jPanel_muontbLayout.setHorizontalGroup(
            jPanel_muontbLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel_muontbLayout.createSequentialGroup()
                .addGroup(jPanel_muontbLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel_muontbLayout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addGroup(jPanel_muontbLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel_muontbLayout.createSequentialGroup()
                                .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel_muontbLayout.createSequentialGroup()
                                .addGap(22, 22, 22)
                                .addGroup(jPanel_muontbLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(jPanel_muontbLayout.createSequentialGroup()
                                        .addComponent(jLabel18)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 506, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel_muontbLayout.createSequentialGroup()
                                        .addComponent(jLabel24)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jSeparator4))
                                    .addGroup(jPanel_muontbLayout.createSequentialGroup()
                                        .addGap(16, 16, 16)
                                        .addGroup(jPanel_muontbLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addGroup(jPanel_muontbLayout.createSequentialGroup()
                                                .addComponent(jButton_DatLai, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(jButton_XNmuon))
                                            .addGroup(jPanel_muontbLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 634, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGroup(jPanel_muontbLayout.createSequentialGroup()
                                                    .addGroup(jPanel_muontbLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                        .addComponent(jLabel27, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                        .addComponent(jLabel25, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                                    .addGap(24, 24, 24)
                                                    .addGroup(jPanel_muontbLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                        .addComponent(datePicker_NgayMuon, javax.swing.GroupLayout.DEFAULT_SIZE, 184, Short.MAX_VALUE)
                                                        .addComponent(datePicker_NgayTra, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                                    .addGap(37, 37, 37)
                                                    .addGroup(jPanel_muontbLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                        .addGroup(jPanel_muontbLayout.createSequentialGroup()
                                                            .addComponent(jLabel26)
                                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                            .addComponent(timePicker_GioMuon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                        .addGroup(jPanel_muontbLayout.createSequentialGroup()
                                                            .addComponent(jLabel28)
                                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                            .addComponent(timePicker_GioTra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                                    .addGap(26, 26, 26)
                                                    .addComponent(jButton_gioHT))
                                                .addGroup(jPanel_muontbLayout.createSequentialGroup()
                                                    .addComponent(jButton_ChonTB)
                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                    .addComponent(jButton_DSDangKy, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)))))))))
                    .addGroup(jPanel_muontbLayout.createSequentialGroup()
                        .addGap(77, 77, 77)
                        .addGroup(jPanel_muontbLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel22, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel_muontbLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jTextField_HoTen, javax.swing.GroupLayout.DEFAULT_SIZE, 175, Short.MAX_VALUE)
                            .addComponent(jTextField_MaSV))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton_TimSV, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel_muontbLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel23)
                            .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel_muontbLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jTextField_SDT, javax.swing.GroupLayout.DEFAULT_SIZE, 166, Short.MAX_VALUE)
                            .addComponent(jTextField_Lop))))
                .addContainerGap(37, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel_muontbLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel29, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(272, 272, 272))
        );
        jPanel_muontbLayout.setVerticalGroup(
            jPanel_muontbLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel_muontbLayout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(jPanel_muontbLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel17, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGroup(jPanel_muontbLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel_muontbLayout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addComponent(jLabel18))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel_muontbLayout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 8, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(8, 8, 8)
                .addGroup(jPanel_muontbLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel19)
                    .addComponent(jTextField_MaSV, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton_TimSV)
                    .addComponent(jLabel21)
                    .addComponent(jTextField_Lop, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel_muontbLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel22)
                    .addComponent(jTextField_HoTen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel23)
                    .addComponent(jTextField_SDT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel_muontbLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel_muontbLayout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel_muontbLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel24)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel_muontbLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel25)
                    .addComponent(datePicker_NgayMuon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel26)
                    .addComponent(timePicker_GioMuon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton_gioHT))
                .addGap(18, 18, 18)
                .addGroup(jPanel_muontbLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel27)
                    .addComponent(datePicker_NgayTra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(timePicker_GioTra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel28))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 31, Short.MAX_VALUE)
                .addGroup(jPanel_muontbLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton_ChonTB)
                    .addComponent(jButton_DSDangKy))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel29)
                .addGap(10, 10, 10)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel_muontbLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton_XNmuon, javax.swing.GroupLayout.DEFAULT_SIZE, 32, Short.MAX_VALUE)
                    .addComponent(jButton_DatLai, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        jPanel_tratb.setBackground(new java.awt.Color(255, 255, 255));

        jTable_DSThBiTra.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "STT", "Mã TB", "Tên TB", "TinhTrangTB", "Chọn"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.String.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable_DSThBiTra);
        if (jTable_DSThBiTra.getColumnModel().getColumnCount() > 0) {
            jTable_DSThBiTra.getColumnModel().getColumn(0).setMaxWidth(50);
            jTable_DSThBiTra.getColumnModel().getColumn(1).setMaxWidth(100);
            jTable_DSThBiTra.getColumnModel().getColumn(4).setMaxWidth(60);
        }

        jLabel30.setText("TRẢ THIẾT BỊ");
        jLabel30.setFont(new java.awt.Font("sansserif", 1, 24)); // NOI18N
        jLabel30.setForeground(new java.awt.Color(0, 0, 102));

        jPanel8.setBackground(new java.awt.Color(0, 0, 102));
        jPanel8.setForeground(new java.awt.Color(0, 0, 102));

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 534, Short.MAX_VALUE)
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 32, Short.MAX_VALUE)
        );

        jLabel32.setText("Danh sách thiết bị trả:");
        jLabel32.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N

        jButton_XacNhanTra.setText("XÁC NHẬN");
        jButton_XacNhanTra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_XacNhanTraActionPerformed(evt);
            }
        });

        jLabel33.setText("Số điện thoại:");

        jLabel34.setText("Họ tên:");

        jLabel35.setText("Lớp:");

        jButton_TimMaSVmuon.setText("TÌM");
        jButton_TimMaSVmuon.setFont(new java.awt.Font("sansserif", 1, 12)); // NOI18N
        jButton_TimMaSVmuon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_TimMaSVmuonActionPerformed(evt);
            }
        });

        jLabel36.setText("Mã sinh viên:");

        jLabel37.setText("Thông tin người trả:");
        jLabel37.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N

        jLabel38.setText("Nhập mã sinh viên mượn:");
        jLabel38.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N

        jButton_ChonTatCa.setText("CHỌN TẤT CẢ");
        jButton_ChonTatCa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_ChonTatCaActionPerformed(evt);
            }
        });

        jLabel31.setText("*Chọn các thiết bị cần trả trong bảng trên, hoặc nhấn chọn tất cả để trả tất cả thiết bị");
        jLabel31.setFont(new java.awt.Font("sansserif", 2, 12)); // NOI18N
        jLabel31.setForeground(new java.awt.Color(102, 102, 102));

        jLabel39.setText("Mã sinh viên:");

        jButton_TimMaSVTra.setText("TÌM");
        jButton_TimMaSVTra.setFont(new java.awt.Font("sansserif", 1, 12)); // NOI18N
        jButton_TimMaSVTra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_TimMaSVTraActionPerformed(evt);
            }
        });

        jLabel40.setText("Hoặc");
        jLabel40.setFont(new java.awt.Font("sansserif", 1, 12)); // NOI18N

        jLabel41.setText("Mã mượn:");

        jButton_DanhSachDaMuon.setText("MỞ DANH SÁCH MƯỢN");
        jButton_DanhSachDaMuon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_DanhSachDaMuonActionPerformed(evt);
            }
        });

        jLabel42.setText("*Nhập mã sinh viên hoặc mã mượn để tìm danh sách thiết bị mượn");
        jLabel42.setFont(new java.awt.Font("sansserif", 2, 12)); // NOI18N
        jLabel42.setForeground(new java.awt.Color(102, 102, 102));

        jButton1_TimMaMuonTBi.setText("TÌM");
        jButton1_TimMaMuonTBi.setFont(new java.awt.Font("sansserif", 1, 12)); // NOI18N
        jButton1_TimMaMuonTBi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1_TimMaMuonTBiActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel_tratbLayout = new javax.swing.GroupLayout(jPanel_tratb);
        jPanel_tratb.setLayout(jPanel_tratbLayout);
        jPanel_tratbLayout.setHorizontalGroup(
            jPanel_tratbLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel_tratbLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(jPanel_tratbLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel_tratbLayout.createSequentialGroup()
                        .addComponent(jSeparator6, javax.swing.GroupLayout.PREFERRED_SIZE, 488, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(63, 63, 63))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel_tratbLayout.createSequentialGroup()
                        .addGroup(jPanel_tratbLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel_tratbLayout.createSequentialGroup()
                                .addComponent(jLabel31, javax.swing.GroupLayout.PREFERRED_SIZE, 460, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton_ChonTatCa, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 628, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel_tratbLayout.createSequentialGroup()
                                .addGap(259, 259, 259)
                                .addComponent(jButton_XacNhanTra, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(73, 73, 73))))
            .addGroup(jPanel_tratbLayout.createSequentialGroup()
                .addGroup(jPanel_tratbLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel_tratbLayout.createSequentialGroup()
                        .addGap(39, 39, 39)
                        .addComponent(jLabel30, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel_tratbLayout.createSequentialGroup()
                        .addGap(74, 74, 74)
                        .addGroup(jPanel_tratbLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel_tratbLayout.createSequentialGroup()
                                .addComponent(jButton_DanhSachDaMuon)
                                .addGap(133, 133, 133)
                                .addComponent(jLabel42))
                            .addGroup(jPanel_tratbLayout.createSequentialGroup()
                                .addComponent(jLabel39, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextField_MaSVMuon, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton_TimMaSVmuon, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel40, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel41)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextField_MaMuon, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel_tratbLayout.createSequentialGroup()
                        .addGap(58, 58, 58)
                        .addGroup(jPanel_tratbLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jButton1_TimMaMuonTBi, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel_tratbLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel_tratbLayout.createSequentialGroup()
                                    .addGap(19, 19, 19)
                                    .addGroup(jPanel_tratbLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel36, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel34, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addGroup(jPanel_tratbLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(jTextField_MaSVTra)
                                        .addComponent(jTextField_HoTenSVTra, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jButton_TimMaSVTra, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(24, 24, 24)
                                    .addGroup(jPanel_tratbLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel33)
                                        .addComponent(jLabel35, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addGroup(jPanel_tratbLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(jTextField_SDTTra)
                                        .addComponent(jTextField_LopSVTra, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGroup(jPanel_tratbLayout.createSequentialGroup()
                                    .addComponent(jLabel37)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(jSeparator5, javax.swing.GroupLayout.PREFERRED_SIZE, 506, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(jLabel32, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(jPanel_tratbLayout.createSequentialGroup()
                                    .addComponent(jLabel38)
                                    .addGap(18, 18, 18)
                                    .addComponent(jSeparator7, javax.swing.GroupLayout.PREFERRED_SIZE, 458, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addContainerGap(33, Short.MAX_VALUE))
        );
        jPanel_tratbLayout.setVerticalGroup(
            jPanel_tratbLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel_tratbLayout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(jPanel_tratbLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel30))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel_tratbLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel38)
                    .addComponent(jSeparator7, javax.swing.GroupLayout.PREFERRED_SIZE, 8, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel_tratbLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel39)
                    .addComponent(jTextField_MaSVMuon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton_TimMaSVmuon)
                    .addComponent(jLabel40)
                    .addComponent(jLabel41)
                    .addComponent(jTextField_MaMuon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1_TimMaMuonTBi))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel_tratbLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton_DanhSachDaMuon)
                    .addComponent(jLabel42, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 13, Short.MAX_VALUE)
                .addGroup(jPanel_tratbLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel37)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel_tratbLayout.createSequentialGroup()
                        .addGap(11, 11, 11)
                        .addComponent(jSeparator5, javax.swing.GroupLayout.PREFERRED_SIZE, 8, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(8, 8, 8)
                .addGroup(jPanel_tratbLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel36)
                    .addComponent(jTextField_MaSVTra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel35)
                    .addComponent(jTextField_LopSVTra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton_TimMaSVTra))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel_tratbLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel34)
                    .addComponent(jTextField_HoTenSVTra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel33)
                    .addComponent(jTextField_SDTTra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel_tratbLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel32)
                    .addComponent(jSeparator6, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 8, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel_tratbLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton_ChonTatCa)
                    .addGroup(jPanel_tratbLayout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(jLabel31, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(45, 45, 45)
                .addComponent(jButton_XacNhanTra, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel_themtb.setBackground(new java.awt.Color(255, 255, 255));

        jLabel53.setText("THÊM THIẾT BỊ");
        jLabel53.setFont(new java.awt.Font("sansserif", 1, 24)); // NOI18N
        jLabel53.setForeground(new java.awt.Color(0, 0, 102));

        jPanel16.setBackground(new java.awt.Color(0, 0, 102));
        jPanel16.setForeground(new java.awt.Color(0, 0, 102));

        javax.swing.GroupLayout jPanel16Layout = new javax.swing.GroupLayout(jPanel16);
        jPanel16.setLayout(jPanel16Layout);
        jPanel16Layout.setHorizontalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 494, Short.MAX_VALUE)
        );
        jPanel16Layout.setVerticalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 32, Short.MAX_VALUE)
        );

        jLabel54.setText("Mã thiết bị (*):");

        jTextField_CuoiMaTB_Them.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTextField_CuoiMaTB_ThemFocusGained(evt);
            }
        });
        jTextField_CuoiMaTB_Them.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField_CuoiMaTB_ThemKeyReleased(evt);
            }
        });

        jComboBox_LoaiTB_Them.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "--- Loại thiết bị ---" }));
        jComboBox_LoaiTB_Them.setBorder(null);
        jComboBox_LoaiTB_Them.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox_LoaiTB_ThemActionPerformed(evt);
            }
        });

        jLabel55.setText("Loại thiết bị(*):");

        jTextField_TenTB_Them.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTextField_TenTB_ThemFocusGained(evt);
            }
        });

        jLabel56.setText("Ngày nhâp kho");

        jTextField_NgayGioNhapKho_Them.setEnabled(false);

        jLabel57.setText("Tên thiết bị (*):");

        jLabel_DauMaTB_Them.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel_DauMaTB_Them.setText("MIC");

        jTextArea_MoTa_Them.setColumns(20);
        jTextArea_MoTa_Them.setRows(5);
        jScrollPane7.setViewportView(jTextArea_MoTa_Them);

        jLabel59.setText("Mô tả:");

        jLabel60.setText("Các trường đánh dấu (*) là bắt buộc phải nhập");
        jLabel60.setFont(new java.awt.Font("sansserif", 2, 12)); // NOI18N
        jLabel60.setForeground(new java.awt.Color(102, 102, 102));

        jLabel61.setText("Nhân viên chịu trách nhiệm trong việc thêm thiết bị - Ngày giờ nhập kho tự động lấy giờ hệ thống");
        jLabel61.setFont(new java.awt.Font("sansserif", 2, 12)); // NOI18N
        jLabel61.setForeground(new java.awt.Color(102, 102, 102));

        jButton_ThemTB.setText("THÊM");
        jButton_ThemTB.setBackground(new java.awt.Color(0, 102, 51));
        jButton_ThemTB.setForeground(new java.awt.Color(255, 255, 255));
        jButton_ThemTB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_ThemTBActionPerformed(evt);
            }
        });

        jButton2.setText("HỦY");
        jButton2.setBackground(new java.awt.Color(204, 0, 51));
        jButton2.setForeground(new java.awt.Color(255, 255, 255));
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("ĐẶT LẠI");
        jButton3.setBackground(new java.awt.Color(0, 0, 102));
        jButton3.setForeground(new java.awt.Color(255, 255, 255));

        jLabel_LoaiTB_TB_Them.setFont(new java.awt.Font("sansserif", 2, 12)); // NOI18N
        jLabel_LoaiTB_TB_Them.setForeground(new java.awt.Color(255, 51, 51));

        jLabel_MaTB_TB_Them.setFont(new java.awt.Font("sansserif", 2, 12)); // NOI18N
        jLabel_MaTB_TB_Them.setForeground(new java.awt.Color(255, 51, 51));

        jLabel_TenTB_TB_Them.setFont(new java.awt.Font("sansserif", 2, 12)); // NOI18N
        jLabel_TenTB_TB_Them.setForeground(new java.awt.Color(255, 51, 51));

        jLabel73.setText("-");

        javax.swing.GroupLayout jPanel_themtbLayout = new javax.swing.GroupLayout(jPanel_themtb);
        jPanel_themtb.setLayout(jPanel_themtbLayout);
        jPanel_themtbLayout.setHorizontalGroup(
            jPanel_themtbLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel_themtbLayout.createSequentialGroup()
                .addGroup(jPanel_themtbLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(jPanel_themtbLayout.createSequentialGroup()
                        .addGap(69, 69, 69)
                        .addGroup(jPanel_themtbLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel_themtbLayout.createSequentialGroup()
                                .addGroup(jPanel_themtbLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel54, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel55, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel_themtbLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel_themtbLayout.createSequentialGroup()
                                        .addGroup(jPanel_themtbLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jComboBox_LoaiTB_Them, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(jPanel_themtbLayout.createSequentialGroup()
                                                .addComponent(jLabel_DauMaTB_Them, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jLabel73, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jTextField_CuoiMaTB_Them, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGroup(jPanel_themtbLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jPanel_themtbLayout.createSequentialGroup()
                                                .addGroup(jPanel_themtbLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(jLabel56, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(jLabel57))
                                                .addGap(18, 18, 18)
                                                .addGroup(jPanel_themtbLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                    .addComponent(jTextField_NgayGioNhapKho_Them, javax.swing.GroupLayout.DEFAULT_SIZE, 199, Short.MAX_VALUE)
                                                    .addComponent(jTextField_TenTB_Them)))
                                            .addComponent(jLabel_TenTB_TB_Them, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addComponent(jScrollPane7)))
                            .addComponent(jLabel61, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel_themtbLayout.createSequentialGroup()
                                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton_ThemTB, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel_themtbLayout.createSequentialGroup()
                                .addGroup(jPanel_themtbLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel60, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel_LoaiTB_TB_Them, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 322, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel_MaTB_TB_Them, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 322, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(jPanel_themtbLayout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addGroup(jPanel_themtbLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel_themtbLayout.createSequentialGroup()
                                .addComponent(jLabel53, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jPanel16, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel_themtbLayout.createSequentialGroup()
                                .addComponent(jLabel59, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(601, 601, 601)))))
                .addContainerGap(37, Short.MAX_VALUE))
        );
        jPanel_themtbLayout.setVerticalGroup(
            jPanel_themtbLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel_themtbLayout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(jPanel_themtbLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel53)
                    .addComponent(jPanel16, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 36, Short.MAX_VALUE)
                .addGroup(jPanel_themtbLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel55)
                    .addComponent(jComboBox_LoaiTB_Them, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel56)
                    .addComponent(jTextField_NgayGioNhapKho_Them, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel_LoaiTB_TB_Them, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel_themtbLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel54)
                    .addComponent(jLabel_DauMaTB_Them)
                    .addComponent(jTextField_CuoiMaTB_Them, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel57)
                    .addComponent(jTextField_TenTB_Them, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel73))
                .addGap(12, 12, 12)
                .addGroup(jPanel_themtbLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel_MaTB_TB_Them, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel_TenTB_TB_Them, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(jPanel_themtbLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel59)
                    .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(45, 45, 45)
                .addComponent(jLabel60)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel61)
                .addGap(18, 18, 18)
                .addGroup(jPanel_themtbLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton_ThemTB, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28))
        );

        javax.swing.GroupLayout jPanel_mainLayout = new javax.swing.GroupLayout(jPanel_main);
        jPanel_main.setLayout(jPanel_mainLayout);
        jPanel_mainLayout.setHorizontalGroup(
            jPanel_mainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel_trangchu, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGroup(jPanel_mainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel_mainLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jPanel_muontb, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addContainerGap()))
            .addGroup(jPanel_mainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel_mainLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jPanel_tratb, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addContainerGap()))
            .addGroup(jPanel_mainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel_mainLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jPanel_themtb, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addContainerGap()))
        );
        jPanel_mainLayout.setVerticalGroup(
            jPanel_mainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel_trangchu, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGroup(jPanel_mainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel_mainLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jPanel_muontb, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addContainerGap()))
            .addGroup(jPanel_mainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel_mainLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jPanel_tratb, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addContainerGap()))
            .addGroup(jPanel_mainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel_mainLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jPanel_themtb, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addContainerGap()))
        );

        jPanel2.add(jPanel_main, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 50, 790, 590));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 1008, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    //dong ho 
    //trang chủ ==================
    
    private void layLoaiTB(){
        String sql = "select * from LOAITB";
        try {
            PreparedStatement ps = ketNoi.prepareStatement(sql);
            ResultSet rs = ps.executeQuery();
            while(rs.next()){
                jComboBox_LocTheoLoai.addItem(rs.getString("TENLOAI"));
            }
        } catch (Exception e) {
        }
    }
    
    
    //end trang chủ
    //--tra thiet bi
    private void layLoaiTBmuon(){
        

        maLoai.clear();
//        jComboBox_LocTheoLoaiTBDK.removeAllItems();
        String sql = "select * from LOAITB";
        try {
            
            PreparedStatement ps = ketNoi.prepareStatement(sql);
            ResultSet rs = ps.executeQuery();
            while(rs.next()){
                jComboBox_LocTheoLoaiTBDK.addItem(rs.getString("TENLOAI"));
                maLoai.add(rs.getString("MALOAI"));
            }
        } catch (Exception e) {
        }
    }
    //-- end tra thiet bi
    // kiem tra ten dang nhap trung 
    private boolean tonTaiTenDN(String tenDN){
        String sql = "select * from TAIKHOAN where TENDANGNHAP = ?";
        try {
            PreparedStatement ps = ketNoi.prepareStatement(sql);
            ps.setString(1, tenDN);
            ResultSet rs = ps.executeQuery();
            if(rs.next()){
                return true;
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        return false;
    }
    //ghi file excel
    public void exportExcel(JTable table){
        
        try {
          
            JFileChooser jFile = new JFileChooser();
            jFile.showSaveDialog(this);
            File saveFile = jFile.getSelectedFile();
            if(saveFile != null) {
                saveFile = new File(saveFile.toString()+"_ThietBi.xlsx"); 
                Workbook wb = new XSSFWorkbook();
                org.apache.poi.ss.usermodel.Sheet sheetTB = wb.createSheet("THIET BI");
                Row rowCol = sheetTB.createRow(0);
                for(int i = 0; i<table.getColumnCount(); i++){
                    Cell cell = rowCol.createCell(i);
                    cell.setCellValue(table.getColumnName(i));
                }           
                for(int j=0;j < table.getRowCount(); j++){
                    Row row = sheetTB.createRow(j+1);
                    for(int k = 0; k< table.getColumnCount(); k++){
                        Cell cell = row.createCell(k);
                        if(table.getValueAt(j, k) != null){
                            cell.setCellValue(table.getValueAt(j, k).toString());
                        }
                    }
                }
                
                try (FileOutputStream f =  new FileOutputStream(saveFile)) {
                    wb.write(f);
                }
            }
            
            JOptionPane.showMessageDialog(rootPane, "Xuất file thành công");       
        } catch (Exception e) {
            e.printStackTrace();
        }
  



   }
   
    private void loadDanhSachSV(){
        DefaultTableModel dtm =  (DefaultTableModel) jTable_SinhVien.getModel();
        dtm.setNumRows(0);
        String sql = "select * from SINHVIEN";
        
        try {
            PreparedStatement ps = ketNoi.prepareStatement(sql);
            ResultSet rs = ps.executeQuery();
            Vector v;
            while(rs.next()){
                v= new Vector();
                v.add(rs.getString("MASV"));
                v.add(rs.getString("HOTEN"));
                v.add(rs.getString("LOP"));
                v.add(rs.getString("SDT"));
                
                dtm.addRow(v);
            }
            jTable_SinhVien.setModel(dtm);
        } catch (Exception e) {
        }
    }
    private void loadDanhSachSVTheoMa(String masv){
        DefaultTableModel dtm =  (DefaultTableModel) jTable_SinhVien.getModel();
        dtm.setNumRows(0);
        String sql = "select * from SINHVIEN where MASV like '%"+masv+"%'";
        
        try {
            PreparedStatement ps = ketNoi.prepareStatement(sql);
            ResultSet rs = ps.executeQuery();
            Vector v;
            while(rs.next()){
                v= new Vector();
                v.add(rs.getString("MASV"));
                v.add(rs.getString("HOTEN"));
                v.add(rs.getString("LOP"));
                v.add(rs.getString("SDT"));
                
                dtm.addRow(v);
            }
            jTable_SinhVien.setModel(dtm);
        } catch (Exception e) {
        }
    }
    
    //tồn tại nhân viên
    private boolean tontaiNV(String manv){
        String sql = "select * from NHANVIEN where MANV = ?";
        try {
            PreparedStatement ps = ketNoi.prepareStatement(sql);
            ps.setString(1, manv);
            ResultSet rs=  ps.executeQuery();
            if(rs.next()) return true;
        } catch (Exception e) {
            e.printStackTrace();
        }
        return false;
    }
    //NhanVien
    private void loadNhanVien(){
        DefaultTableModel dtm = (DefaultTableModel) jTable_NhanVIien.getModel();
        dtm.setNumRows(0);
        String sql = "select * from NHANVIEN";

        try {

            PreparedStatement ps = ketNoi.prepareStatement(sql);
            ResultSet rs = ps.executeQuery();

            while (rs.next()) {
                Vector v = new Vector();
                String manv, hoten, chucvu, sdt;
                manv = rs.getString("MANV");
                v.add(manv);
                hoten = rs.getString("HOTEN");
                v.add(hoten);
                chucvu = rs.getString("CHUCVU");
                v.add(chucvu);
                sdt = rs.getString("SDT");
                v.add(sdt);
           
                v.add(sdt);

                dtm.addRow(v);

            }
            rs.close();
            ps.close();
            jTable_NhanVIien.setModel(dtm);
            
        } catch (SQLException e) {
            System.out.println("Get data error...");
        }
    }
    //phan quyen
    private void phanquyen(String pq){
        if(pq.equals("NHANVIEN")){
            jLabel_ThongTinNV.setVisible(false);
            jLabel_ThemLoaiThietBi.setVisible(false);
            jButton_Sua.setEnabled(false);
            jButton_Xoa.setEnabled(false);
         
        }
    }
    
    //
    public void clock() {
        Thread clock = new Thread() {
            public void run() {
                try {
                    while (true) {
                        Calendar cal = new GregorianCalendar();
                        int second = cal.get(Calendar.SECOND);
                        int minute = cal.get(Calendar.MINUTE);
                        int hour = cal.get(Calendar.HOUR_OF_DAY);
                        String thu;
                        int dayOfWeek = cal.get(Calendar.DAY_OF_WEEK);
                        if (dayOfWeek == 1) {
                            thu = "Chủ nhật";
                        } else {
                            thu = "Thứ " + Integer.toString(dayOfWeek);
                        }
                        int dayOfMonth = cal.get(Calendar.DAY_OF_MONTH);
                        int month = cal.get(Calendar.MONTH)+1;
                        int year = cal.get(Calendar.YEAR);

                        jLabel_time.setText(dayOfMonth + "/" + month + "/" + year + " " + hour + ":" + minute + ":" + second);
                        jTextField_NgayGioNhapKho_Them.setText(year + "-" + month + "-" +dayOfMonth  + " " + hour + ":" + minute + ":" + second);
                        sleep(1000);
                    }
                } catch (Exception e) {
                    e.printStackTrace();
                }
            }
        };
        clock.start();
    }
    //load thong tin nhan vien
    private void docDanhSach(String manv){
        String sql = "select * from nhanvien where manv = ?";
        try {
            PreparedStatement ps = ketNoi.prepareStatement(sql);
            ps.setString(1, manv);
            ResultSet rs = ps.executeQuery();
            
            if(rs.next()){
                jLabel_TenNV.setText(rs.getString("HOTEN"));
                jLabel_MaNV.setText(rs.getString("MANV"));
            }
        } catch (Exception e) {
        }
    }
    //load danh sach tb
    private void docDanhSach() {
        tongTB = 0; tbCoSan = 0;
        tbHong = 0; tbDangMuon= 0; tbBaoTri=0;
        DefaultTableModel dtm = (DefaultTableModel) jTable_TBCoSan.getModel();
        dtm.setNumRows(0);
        String sql = "select * from thietbi";

        try {

            PreparedStatement ps = ketNoi.prepareStatement(sql);
            ResultSet rs = ps.executeQuery();

            while (rs.next()) {
                Vector v = new Vector();
                String matb, tentb, maloai, ngaynhapkho, mota, tinhtrangsd;
                matb = rs.getString("MATB");
                v.add(matb);
                tentb = rs.getString("TENTB");
                v.add(tentb);
                maloai = rs.getString("MALOAI");
                v.add(maloai);
                ngaynhapkho = rs.getString("NGAYNHAPKHO");
                v.add(ngaynhapkho);
                mota = rs.getString("MOTA");
                v.add(mota);
                tinhtrangsd = rs.getString("TINHTRANGSD");
                demTB(tinhtrangsd);
                v.add(tinhtrangsd);

                dtm.addRow(v);

            }
            rs.close();
            ps.close();
            jTable_TBCoSan.setModel(dtm);
            ghiSoTB();
        } catch (SQLException e) {
            System.out.println("Get data error...");
        }
    }

    //dem tb
    private void demTB(String trangThai) {
        
        tongTB++;
        if (trangThai.equals("Có sẵn")) {
            tbCoSan++;
        }
        if (trangThai.equals("Hỏng")) {
            tbHong++;
        }
        if (trangThai.equals("Đang mượn")) {
            tbDangMuon++;
        }
        if (trangThai.equals("Bảo trì")) {
            tbBaoTri++;
        }

    }
    //tao ma tb
    private String taoMaThietBi(String loaiTB){
        String sql = "select MAX(RIGHT(MATB, 2)) as maxid from THIETBI where LEFT(MATB, 3) = '"+loaiTB+"'";
        String  maTB= loaiTB;
        try {
            PreparedStatement ps = ketNoi.prepareStatement(sql);
            ResultSet rs= ps.executeQuery();
            if(rs.next()){
                String a = rs.getString("maxid");
                int b = Integer.parseInt(a);
                b++;
                if(b<=9) maTB = maTB+"-" + "0"+b;
                if(b>9) maTB = maTB+"-" +b;
            }
            
        } catch (NumberFormatException | SQLException e) {
        }
        return  maTB;
    }
    //Them tai khoan
    private String taoMaTaiKhoan(String loaiTK){
        String sql = "select MAX(RIGHT(MATK, 3)) as maxid from TAIKHOAN where LEFT(MATK, 4) = N'"+loaiTK+"'";
        String  maTK= loaiTK;
        try {
            PreparedStatement ps = ketNoi.prepareStatement(sql);
            ResultSet rs= ps.executeQuery();
            if(rs.next()){
                String a = rs.getString("maxid");
                int b = Integer.parseInt(a);
                b++;
                if(b<=9) maTK = maTK + "00"+b;
                if(b<=99 && b>9) maTK = maTK + "0"+b;
                if(b>99) maTK = maTK +b;
            }
            
        } catch (NumberFormatException | SQLException e) {
        }
        return  maTK;
    }
    
    //TK end

    //kiem tra sinh vien da co dk tb chua
    private void kiemTraDK(String masv) {
        String sql = "select * from muontb where TRANGTHAIMUON = N'Đăng ký'";
        try {
            PreparedStatement ps = ketNoi.prepareStatement(sql);
            ResultSet rs = ps.executeQuery();
            if (rs.next()) {
                jButton_DSDangKy.setEnabled(true);
            } else {
                jButton_DSDangKy.setEnabled(false);
            }
        } catch (SQLException e) {
        }
    }

    //set so tb
    private void ghiSoTB() {
        jLabel_TongSoTB.setText(tongTB + "");
        jLabel_tbBaoTri.setText(tbBaoTri + "");
        jLabel_tbHong.setText(tbHong + "");
        jLabel_tbDangMuon.setText(tbDangMuon + "");
        jLabel_tbCoSan.setText(tbCoSan + "");

    }

    //tim ma sinh vien muon
    private boolean timMaSVmuon() {
        boolean kqua = false;
        String masv = jTextField_MaSV.getText();

        System.out.println(masv);
        if ("".equals(masv)) {
            return false;
        }

        String sql = "select * from sinhvien where MASV = ?";
        try {
            PreparedStatement ps = ketNoi.prepareStatement(sql);
            ps.setString(1, masv);
            ResultSet rs = ps.executeQuery();
            if (rs.next()) {
                String hoten = rs.getString("HOTEN");
                String lop = rs.getString("LOP");
                String sdt = rs.getString("SDT");
                jTextField_MaSV.setText(masv);
                jTextField_HoTen.setText(hoten);
                jTextField_Lop.setText(lop);
                jTextField_SDT.setText(sdt);
                kqua = true;
                kiemTraDK(masv);
            } else {
//                jTextField_HoTen.setText("");
//                jTextField_Lop.setText("");
//                jTextField_SDT.setText("");
            }
        } catch (SQLException e) {

        }
        return kqua;
    }
    //tim ma sinh vien muon
    private boolean timMaSVtra() {
        boolean kqua = false;
        String masv = jTextField_MaSVTra.getText();

        System.out.println(masv);
        if ("".equals(masv)) {
            return false;
        }

        String sql = "select * from sinhvien where MASV = ?";
        try {
            PreparedStatement ps = ketNoi.prepareStatement(sql);
            ps.setString(1, masv);
            ResultSet rs = ps.executeQuery();
            if (rs.next()) {
                String hoten = rs.getString("HOTEN");
                String lop = rs.getString("LOP");
                String sdt = rs.getString("SDT");
                jTextField_MaSV.setText(masv);
                jTextField_HoTen.setText(hoten);
                jTextField_Lop.setText(lop);
                jTextField_SDT.setText(sdt);
                kqua = true;
                kiemTraDK(masv);
            } else {
//                jTextField_HoTen.setText("");
//                jTextField_Lop.setText("");
//                jTextField_SDT.setText("");
            }
        } catch (SQLException e) {

        }
        return kqua;
    }

    //load dstb dang ky
    private void danhSachTBDangky(String mamuon) {
        ArrayList<String> dstb = new ArrayList<>();
        String note = "";
        DefaultTableModel dtm = (DefaultTableModel) jTable_DSThBiMuon.getModel();
        dtm.setNumRows(0);
        String sql = "select * from thietbi where MATB in (select MATB from chitietmuon where MAMUON = ?)";
        try {
            PreparedStatement ps = ketNoi.prepareStatement(sql);
            ps.setString(1, mamuon);
            ResultSet rs = ps.executeQuery();
            int i = 0;
            TBmuon.clear();
            ThietBi tb;
            while (rs.next()) {
                tb = new ThietBi();
                Vector v = new Vector();
                String tam = "";
                
                String matb, tentb, mota;
                
                matb = rs.getString("MATB");
                tam = matb;
                tentb = rs.getString("TENTB");   
                mota = rs.getString("MOTA");
                
                String maloai = rs.getString("MALOAI");
                if(!"Có sẵn".equals(rs.getString("TINHTRANGSD"))){
                    String sql1 = "select NGAYGIOMUON, NGAYGIODUDINHTRA from MUONTB where MAMUON = ?";
                    PreparedStatement ps1 = ketNoi.prepareStatement(sql1);
                    ps1.setString(1, mamuon);
                    ResultSet rs1 = ps1.executeQuery();
                    String tgMuon = "", tgTra="";
                    if(rs1.next()){
                        tgMuon = rs1.getString("NGAYGIOMUON");
                        tgTra = rs1.getString("NGAYGIODUDINHTRA");
                    }
                    
                    //thay the 
                    String sql2 = "select * from thietbi where TINHTRANGSD = N'Có sẵn' and MATB not in ( select MATB from muontb mtb, chitietmuon ctm where mtb.MAMUON = ctm.MAMUON and TRANGTHAIMUON = N'Đăng ký' and ((? between NGAYGIOMUON and NGAYGIODUDINHTRA) or ( ? between NGAYGIOMUON and NGAYGIODUDINHTRA) or (NGAYGIOMUON between ? and ?))) and MALOAI = ?";
                    PreparedStatement ps2 = ketNoi.prepareStatement(sql2);
                    ps2.setString(1, tgMuon);
                    ps2.setString(2, tgTra);
                    ps2.setString(3, tgMuon);
                    ps2.setString(4, tgTra);
                    ps2.setString(5, maloai);
                    ResultSet rs2 = ps2.executeQuery();
                    
                    if(rs2.next()){
                        String tenTbThay = rs2.getString("TENTB");
                        note=note+"Thiết bị "+ tentb +" được thay thế bằng "+tenTbThay+"\n";
                        matb = rs.getString("MATB");
                        tentb = rs.getString("TENTB");   
                        mota = rs.getString("MOTA");
                        //UPDATE MATB
                        String updateSql = "update CHITIETMUON set MATB = ? where MAMUON = ? and MATB = ? ";
                        ps = ketNoi.prepareStatement(updateSql);
                        ps.setString(1, matb);
                        ps.setString(2, mamuon);
                        ps.setString(3, tam);
                        ps.executeUpdate();
                        
                    }
                    else {
                       note=note+"Thiết bị "+ tentb +" chưa được trả và không có thiệt bị thay thế\n";
                       //XÓA THIẾT BỊ KHỎI CHI TIẾT MƯỢN
                       String delete = "delete from CHITIETMUON where MAMUON = ? and MATB = ?";
                        try {
                            ps = ketNoi.prepareStatement(delete);
                            ps.setString(1, mamuon);
                            ps.setString(2, tam);
                            ps.executeUpdate();
                        } catch (Exception e) {
                        }
                       continue;
                    }
                }
                
                
                tb.matb = matb;
                tb.tenTB = tentb;
                tb.moTa = mota;
                v.add(i + "");
                v.add(matb);
                v.add(tentb);
                v.add(mota);
                
                dtm.addRow(v);
//                dtm.setValueAt(false , sods, 0);
                sods++;
                i++;
                TBmuon.add(tb);
            }
            ps.close();
            rs.close();
            jTable_DSThBiMuon.setModel(dtm);

        } catch (SQLException e) {
            System.out.println("lỗi load danh sách thiết bị ...402");
        }

    }

    //lay ma sinh vien muon
    private void layMaSVMuon(String mamuon) {
        String sql = "select MASV from muontb where MAMUON = ?";
        try {
            PreparedStatement ps = ketNoi.prepareStatement(sql);
            ps.setString(1, mamuon);
            ResultSet rs = ps.executeQuery();
            if (rs.next()) {
                jTextField_MaSVMuon.setText(rs.getString("MASV"));
            }
        } catch (SQLException e) {
        }
    }
    //load loại tb len combobox
    private void layTenLoaiTB(String maloai){
        jComboBox_LoaiTB_Sua.removeAllItems();
        maLoai.clear();
        String sql = "select * from loaitb";
        String a = "";
        try {
            PreparedStatement ps = ketNoi.prepareStatement(sql);
            
            ResultSet rs = ps.executeQuery();

            while (rs.next()) {
                String tenloaiTB = rs.getString("TENLOAI");
                String maloai2 = rs.getString("MALOAI");
                maLoai.add(maloai2);
                jComboBox_LoaiTB_Sua.addItem(tenloaiTB);
                if(maloai == null ? maloai2 == null : maloai.equals(maloai2)){
                    a = tenloaiTB;
                }

            }

        } catch (SQLException e) {
        }
        
        jComboBox_LoaiTB_Sua.setSelectedItem(a);
        
        
    }
    //lay thoi gian muon
    private void layThoiGianMuonTra(String mamuon) {
        String sql = "select NGAYGIOMUON, NGAYGIODUDINHTRA from muontb where MAMUON = ?";
        String tgmuon = null, tgtra = null;
        try {
            PreparedStatement ps = ketNoi.prepareStatement(sql);
            ps.setString(1, mamuon);
            ResultSet rs = ps.executeQuery();

            while (rs.next()) {
                tgmuon = rs.getString("NGAYGIOMUON");
                tgtra = rs.getString("NGAYGIODUDINHTRA");

            }

        } catch (SQLException e) {
        }

        DateTimeFormatter dateFormat = DateTimeFormatter.ofPattern("yyyy-MM-d");
        DateTimeFormatter timeFormat = DateTimeFormatter.ofPattern("HH:mm:ss");

        LocalDate ngaymuon, ngaytra;
        LocalTime giomuon, giotra;
        ngaymuon = LocalDate.parse(tgmuon.substring(0, 10), dateFormat);
        ngaytra = LocalDate.parse(tgtra.substring(0, 10), dateFormat);

        giomuon = LocalTime.parse(tgmuon.substring(11, 19), timeFormat);
        giotra = LocalTime.parse(tgtra.substring(11, 19), timeFormat);
        datePicker_NgayMuon.setDate(ngaymuon);
        datePicker_NgayTra.setDate(ngaytra);
        timePicker_GioMuon.setTime(giomuon);
        timePicker_GioTra.setTime(giotra);
    }

    //load du lieu len ban
    private void loadDuLieuLenBang() {
        DefaultTableModel dtm = (DefaultTableModel) jTable_DanhSachMuon.getModel();
        dtm.setNumRows(0);
        dstbmuon.stream().map(tb -> {
            Vector v = new Vector();
            v.add(tb.matb);
            v.add(tb.tenTB);
            v.add(tb.moTa);
            v.add(tb.check);
            return v;
        }).forEachOrdered(v -> {
            dtm.addRow(v);
        });
        jTable_DanhSachMuon.setModel(dtm);
    }

    // reset table 
    private void resetTableTBMUON() {
        DefaultTableModel dtm = (DefaultTableModel) jTable_DSThBiMuon.getModel();
        dtm.setNumRows(0);
        jTable_DSThBiMuon.setModel(dtm);
    }

    //reset danh sach thiet bi can tra
    private void resetSinhVienTra() {

        jTextField_HoTenSVTra.setText("");
        jTextField_LopSVTra.setText("");
        jTextField_SDTTra.setText("");
    }
    

    //load danh sách thiết bị cần trả
    private void layTBmuon(String mamuon) {
        dstbtra.clear();
        DefaultTableModel dtm = (DefaultTableModel) jTable_DSThBiTra.getModel();
        dtm.setNumRows(0);
        String sql = "select * from thietbi where MATB in (select MATB from chitietmuon where MAMUON = ? and TRANGTHAIMUONCT = N'Đang mượn')";
        try {
            PreparedStatement ps = ketNoi.prepareStatement(sql);
            ps.setString(1, mamuon);
            ResultSet rs = ps.executeQuery();

            int stt = 0;
            Vector vt;
            while (rs.next()) {

                vt = new Vector();
                ThietBi tb = new ThietBi();
                vt.add(stt + ""); //1
                tb.matb = rs.getString("MATB");
                vt.add(tb.matb); //2
                tb.tenTB = rs.getString("TENTB");
                vt.add(tb.tenTB); //3
                vt.add(""); //4
                tb.check = false;
                vt.add(tb.check);
                System.out.println("test...");
                stt++;
                
                dstbtra.add(tb);
                dtm.addRow(vt);

            }
            jTable_DSThBiTra.setModel(dtm);
        } catch (SQLException e) {
            System.out.println("Loi load thiet bi can tra");
        }
    }
    //lay danh sach thiet bi muon tu bang
    
    //lay thong tin sv 
    private void layThongTinSVTra(String masv){
        String sql = "select * from SINHVIEN where MASV = ?";
        try {
            PreparedStatement ps = ketNoi.prepareStatement(sql);
            ps.setString(1, masv);
            ResultSet rs = ps.executeQuery();
            if(rs.next()){
                jTextField_MaSVTra.setText(masv);
                jTextField_HoTenSVTra.setText(rs.getString("HOTEN"));
                jTextField_LopSVTra.setText(rs.getString("LOP"));
                jTextField_SDTTra.setText(rs.getString("SDT"));
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(rootPane, "Loi tim thay SV");
        }
    }
    //khóa sửa tên lớp sdt tra
    private void khoaSuaTTTra(){
        jTextField_HoTenSVTra.setEditable(false);
        jTextField_LopSVTra.setEditable(false);
        jTextField_SDTTra.setEditable(false);
    }
    private void moSuaTTTra(){
        jTextField_HoTenSVTra.setEditable(true);
        jTextField_LopSVTra.setEditable(true);
        jTextField_SDTTra.setEditable(true);
    }

    //luu thong tin muon
    private void luuThongTinMuon(String tgmuon, String tgtra, String masv, String manv) {
        String sqlmuon = "select  MAX(MAMUON) as max from muontb\n";
        String max = "";
        try {
            PreparedStatement ps_max = ketNoi.prepareStatement(sqlmuon);
            ResultSet rs = ps_max.executeQuery();

            while (rs.next()) {
                max = rs.getString("max");
            }
            System.out.println(max);
        } catch (SQLException e) {
        }

        int maxInt = Integer.parseInt(max);
        maxInt += 1;
        max = maxInt + "";
        System.out.println(max + " " + tgmuon + " " + tgtra + " " + masv);

        boolean check = true;
        for (int i = 0; i < sotbMuon; i++) {
            if (dstbmuon.get(i).check) {
                String sql = "insert into muontb (MAMUON, NGAYGIOMUON, NGAYGIODUDINHTRA, TRANGTHAIMUON, MASV, MANV) values (?, ?, ?, N'Mượn', ?, ?)";
                try {
                    PreparedStatement ps = ketNoi.prepareStatement(sql);
                    ps.setString(1, max);
                    ps.setString(2, tgmuon);
                    ps.setString(3, tgtra);
                    ps.setString(4, masv);
                    ps.setString(5, manv);
                    ps.executeUpdate();

                    ps.close();

//                    JOptionPane.showMessageDialog(rootPane, "Mượn thành công");
                    System.out.println(TBmuon);
                    luuChiTietMuon(TBmuon, max);
                    return;
                } catch (SQLException e) {
                    JOptionPane.showMessageDialog(rootPane, "Mượn không thành công");
                }
            }
        }
    }

    private void locDanhSach() {
        String ngaymuon = datePicker_NgayMuon.getDateStringOrEmptyString();
        String ngaytra = datePicker_NgayTra.getDateStringOrEmptyString();
        String giomuon = timePicker_GioMuon.getTimeStringOrEmptyString();
        String giotra = timePicker_GioTra.getTimeStringOrEmptyString();

        String tgmuon, tgtra;

        tgmuon = ngaymuon + " " + giomuon;
        tgtra = ngaytra + " " + giotra;
        Date date_tgmuon = null;
        Date date_tgtra = null;
        try {
            date_tgmuon = new SimpleDateFormat("yyyy-MM-dd HH:mm").parse(tgmuon);
            date_tgtra = new SimpleDateFormat("yyyy-MM-dd HH:mm").parse(tgtra);
        } catch (ParseException ex) {
            Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }

        int result = date_tgmuon.compareTo(date_tgtra);
        if (result == 0) {
            JOptionPane.showMessageDialog(rootPane, "Thời gian mượn không đủ");
        } else if (result > 0) {
            JOptionPane.showMessageDialog(rootPane, "Thời gian mượn sau thời gian trả");
        } else {
            SimpleDateFormat formatter = new SimpleDateFormat("yyyy-MM-dd");
            Date date = new Date();
            Date date_tgmuon1 = null;
            Date now = null;
            try {
                date_tgmuon1 = new SimpleDateFormat("yyyy-MM-dd").parse(ngaymuon);
                now = new SimpleDateFormat("yyyy-MM-dd").parse(formatter.format(date));
                System.out.println(now);
                System.err.println(date_tgmuon1);

            } catch (ParseException ex) {
                Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
            int result2 = now.compareTo(date_tgmuon1);
            if (result2 > 0) {
                JOptionPane.showMessageDialog(rootPane, "Thời gian phải lớn hơn thời gian hiện tại");
            } else {
                String sql = "select * from thietbi where TINHTRANGSD = N'Có sẵn' and MATB not in ( select MATB from muontb mtb, chitietmuon ctm where mtb.MAMUON = ctm.MAMUON and TRANGTHAIMUON = N'Đăng ký' and ((? between NGAYGIOMUON and NGAYGIODUDINHTRA) or ( ? between NGAYGIOMUON and NGAYGIODUDINHTRA) or (NGAYGIOMUON between ? and ?)))";
                    dstbmuon.clear();
                    sotbMuon = 0;
                try {
                    PreparedStatement ps = ketNoi.prepareStatement(sql);
                    ps.setString(1, tgmuon);
                    ps.setString(2, tgtra);
                    ps.setString(3, tgmuon);
                    ps.setString(4, tgtra);

                    ResultSet rs = ps.executeQuery();
                    dstbmuon.clear();
                    sotbMuon = 0;
                    while (rs.next()) {
                        ThietBi tb = new ThietBi();
                        tb.matb = rs.getString("MATB");
                        tb.tenTB = rs.getString("TENTB");
                        tb.maLoai = rs.getString("MALOAI");
                        tb.moTa = rs.getString("MOTA");
                        dstbmuon.add(tb);
                        sotbMuon++;
                    }
                    rs.close();
                    ps.close();

                } catch (Exception e) {
                    System.out.println("loi chon thiet bi...");
                }
                loadDuLieuLenBang();
                layLoaiTBmuon();
                jDialog_DanhSachMuon.setLocationRelativeTo(null);
                jDialog_DanhSachMuon.setVisible(true);
            }
        }

//        String ngaymuon = datePicker_ngaymuon.getDateStringOrEmptyString();
    }

    //lưu thiết bị vào chi tiết mượn
    private void luuChiTietMuon(ArrayList<ThietBi> Tbmuon, String mamuon) {
        for (int i = 0; i < Tbmuon.size(); i++) {
            String sql = "insert into chitietmuon (MAMUON, MATB, TRANGTHAIMUONCT) values (?, ?, N'Đang Mượn')";
            try {
                PreparedStatement ps = ketNoi.prepareStatement(sql);
                ps.setString(1, mamuon);
                ps.setString(2, Tbmuon.get(i).matb);
                ps.executeUpdate();
            } catch (Exception e) {
                System.out.println("Lỗi thêm chi tiết 201");
            }

            capNhatTrangThaiTB(Tbmuon.get(i).matb);
        }
    }
    //cập nhật trạng thái mượn trong bảng MUONTB
    private void capNhatChoMuonTB(String mamuon){
        String sql = "update MUONTB set TRANGTHAIMUONCT = N'Mượn' where MAMUON = ?";
        try {
            PreparedStatement ps = ketNoi.prepareStatement(sql);
            ps.setString(1, mamuon);
            ps.executeUpdate();
        } catch (Exception e) {
            System.out.println("Lỗi cập nhật mượn tb 606");
        }
    }
    //Cập nhật trạng thái thiết bị đăng ký được mượn
    private void capNhatTrangThaiTBDK(String mamuon) {

        String sql = "select MATB from chitietmuon where MAMUON = ?";
        try {
            PreparedStatement ps = ketNoi.prepareStatement(sql);
            ps.setString(1, mamuon);
            ResultSet rs = ps.executeQuery();

            while (rs.next()) {
                String matb = rs.getString("MATB");
                capNhatTrangThaiTB(matb);
            }
        } catch (Exception e) {
            System.out.println("Lỗi cập nhật chi tiết 109");
        }

    }

    //cập nhật thông tin chi tiết mượn đăng ký
    private void capNhatChiTietMuonDK(String mamuon) {

        String sql = "update chitietmuon set TRANGTHAIMUONCT = N'Đang mượn' where MAMUON = ?";
        try {
            PreparedStatement ps = ketNoi.prepareStatement(sql);
            ps.setString(1, mamuon);
            ps.executeUpdate();
        } catch (Exception e) {
            System.out.println("Lỗi cập nhật chi tiết 102");
        }

    }

    //Cập nhật thong tin mượn đăng ký
    private void capNhatMuonDK(String mamuon, String manv) {

        String sql = "update MUONTB set TRANGTHAIMUON = N'Mượn',MANV = ? where MAMUON = ?";
        try {
            PreparedStatement ps = ketNoi.prepareStatement(sql);
            ps.setString(1, manv);
            ps.setString(2, mamuon);
            ps.executeUpdate();
        } catch (Exception e) {
            System.out.println("Lỗi cập nhật thông tin mượn  101");
        }

    }

    //kiểm tra thông tin sinh viên đã tồn tại chưa
    private boolean kiemTraThongTinSV(String masv) {

        String sql = "select * from sinhvien where MASV = ?";
        try {
            PreparedStatement ps = ketNoi.prepareStatement(sql);
            ps.setString(1, masv);
            ResultSet rs = ps.executeQuery();

            if (rs.next()) {
                return true;
            }

        } catch (Exception e) {
            System.out.println("Lỗi cập nhật thông tin mượn  101");
        }
        return false;

    }

    //Lưu sinh viên mới
    private void luuSV(String masv, String hoten, String lop, String sdt) {
        
        String sqlMaTK = "select dbo.AUTO_MATK() as MATK";
        String matk = "";
        try {
            PreparedStatement ps = ketNoi.prepareStatement(sqlMaTK);
            ResultSet rs = ps.executeQuery();
            if(rs.next()){
                matk = rs.getString("MATK");
                System.out.println("MATK = " + matk);
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }
        
        String sqlThemTK = "{Call Sp_ThemTaiKhoan(?, ?, ?)}";
        try {
            CallableStatement ps = ketNoi.prepareCall(sqlThemTK);
            ps.setString(1, masv);
            ps.setString(2, "123456");
            ps.setString(3, "SINHVIEN");
            ps.executeUpdate();
            System.out.println("Them tk thanh cong");
            
        } catch (SQLException e) {
            System.out.println("Them tk khong thanh cong");
        }
        
        String sql = "insert into sinhvien (MASV, HOTEN, LOP, SDT, MATK) values (?, ?, ?, ?, ?)";
        try {
            PreparedStatement ps = ketNoi.prepareStatement(sql);
            ps.setString(1, masv);
            ps.setString(2, hoten);
            ps.setString(3, lop);
            ps.setString(4, sdt);
            ps.setString(5, matk);
            ps.executeUpdate();
        } catch (Exception e) {
            System.out.println("Lỗi thêm sinh viên mới 203");
        }
    }

    //cập nhật trạng thái thiết bị trên bảng thiết bị sau khi mượn
    private void capNhatTrangThaiTB(String matb) {
        String sql = "update thietbi set TINHTRANGSD = N'Đang mượn' where MATB = ?";
        try {
            PreparedStatement ps = ketNoi.prepareStatement(sql);
            ps.setString(1, matb);
            ps.executeUpdate();
        } catch (Exception e) {
            System.out.println("Lỗi cập nhật thiết bị 501");
        }
    }

    //cap nhat trang  tb sau khi duoc tra
    private void capNhatTrangThaiTBTraXong(String matb) {
        String sql = "update THIETBI set TINHTRANGSD = N'Có sẵn' where MATB = ?";
        try {
            PreparedStatement ps = ketNoi.prepareStatement(sql);
            ps.setString(1, matb);
            ps.executeUpdate();
        } catch (Exception e) {
            System.out.println("Lỗi cập nhật thiết bị 501");
        }
    }

    //Kiểm tra danh sách thiết bị trong sanh sách đã được trả hết chưa
    private boolean kiemTraTraHoanTat(String mamuon) {
        String sql = "select * from CHITIETMUON where MAMUON = ? and TRANGTHAIMUONCT = N'Đang mượn'";
        try {
            PreparedStatement ps = ketNoi.prepareStatement(sql);
            ps.setString(1, mamuon);
            ResultSet rs = ps.executeQuery();

            if (rs.next()) {
                return false;  //chua tra het
            }
        } catch (Exception e) {
            System.out.println("Lỗi kiểm tra trả hoàn tất 109");
        }
        return true;
    }

    //Chọn các thiết bị cần trả 
    private void chonTbTra() {
        TBtra.clear();
        for (int i = 0; i < dstbtra.size(); i++) {
            boolean check = (boolean) jTable_DSThBiTra.getValueAt(i, 4);
            
            ThietBi tb;
            
            if (check == true) {
                String tinhtrang = (String) jTable_DSThBiTra.getValueAt(i, 3);
                tb = new ThietBi();
                tb = dstbtra.get(i);
                tb.moTa = tinhtrang;
                TBtra.add(tb);
                System.out.println("matb" + "");
            }
        }
        
        
    }

    //Cập nhật trạng thái chi tiết trả từng tb
    private void capNhatChiTietTBTra(String mamuon, String matb) {
        String sql = "update chitietmuon set TRANGTHAIMUONCT = N'Đã trả' where MAMUON = ? and MATB = ?";
        try {
            PreparedStatement ps = ketNoi.prepareStatement(sql);
            ps.setString(1, mamuon);
            ps.setString(2, matb);
            ps.executeUpdate();

        } catch (Exception e) {
            System.out.println("Lỗi cập nhật trạng thái trả chi tiết");
        }
    }

    private void capNhatChiTietTra(String mamuon) {

        for (int i = 0; i < TBtra.size(); i++) {
            capNhatChiTietTBTra(mamuon, TBtra.get(i).matb);
        }

    }

    //tao ma tra
    private String taoMaTra() {
        String sqlmuon = "select  MAX(MATRA) as max from tratb\n";
        String max = "";
        try {
            PreparedStatement ps_max = ketNoi.prepareStatement(sqlmuon);
            ResultSet rs = ps_max.executeQuery();

            while (rs.next()) {
                max = rs.getString("max");
            }
            System.out.println(max);
        } catch (Exception e) {
        }

        int maxInt = Integer.parseInt(max);
        maxInt += 1;
        max = maxInt + "";
        return max;
    }

    //kiem tra tra lan dau
    private boolean traLanDau(String mamuon) {
        String sql = "select * from chitietmuon where MAMUON = ? and TRANGTHAIMUONCT = N'Đã trả'";
        try {
            PreparedStatement ps = ketNoi.prepareStatement(sql);
            ps.setString(1, mamuon);
            ResultSet rs = ps.executeQuery();

            if (rs.next()) {
                return false;
            }
        } catch (Exception e) {
            System.out.println("Lỗi kiểm tra trả hoàn tất 109");
        }
        return true;
    }

    //trả thiết bị
    private void traTBChiTiet(String matra, String masv, String manv) {
        System.out.println("Matra: "+matra +"\nmasv = "+masv + "\nmanv: " + manv);
        for (int i = 0; i < TBtra.size(); i++) {
            String sql = "insert into chitiettra (MATRA, MATB, NGAYGIOTRA, TINHTRANGTB, MASV, MANV) values (?, ?, ?, ?, ?, ?)";
            try {
                PreparedStatement ps = ketNoi.prepareStatement(sql);
                ps.setString(1, matra);
                ps.setString(2, TBtra.get(i).matb);
                //lay thoi gian hien tai
                String pattern = "yyyy-MM-dd HH:mm:ss";
                SimpleDateFormat simpleDateFormat = new SimpleDateFormat(pattern);

                String tgHT = simpleDateFormat.format(new Date());
                ps.setString(3, tgHT);
                ps.setString(4, TBtra.get(i).moTa);
                ps.setString(5, masv);
                ps.setString(6, manv);

                ps.executeUpdate();
                capNhatTrangThaiTBTraXong(TBtra.get(i).matb);

            } catch (Exception e) {
                System.out.println("Lỗi trả thiết bị chi tiết 110");
            }
        }
    }

    //lay ma tra
    private String layMaTra(String mamuon) {
        String sql = "select MATRA from tratb  where MAMUON = ?";
        String matra = "";
        try {
            PreparedStatement ps = ketNoi.prepareStatement(sql);
            ps.setString(1, mamuon);
            ResultSet rs = ps.executeQuery();

            if (rs.next()) {
                matra = rs.getString("MATRA");
                return matra;
            }
        } catch (Exception e) {

        }
        return matra;
    }

    private void traTB(String mamuon) {
        String masv = jTextField_MaSVTra.getText();
        String manv = jLabel_MaNV.getText();
        if (traLanDau(mamuon)) {
            String matra = taoMaTra();
            String sql = "insert into tratb (MATRA, MAMUON) values (?, ?)";
            try {
                PreparedStatement ps = ketNoi.prepareStatement(sql);
                ps.setString(1, matra);
                ps.setString(2, mamuon);
                ps.executeUpdate();
                traTBChiTiet(matra, masv, manv);
                capNhatChiTietTra(mamuon);
            } catch (Exception e) {
                System.out.println("Lỗi trả thiết bị 110");
            }

        } else {
            String matra = layMaTra(mamuon);
            traTBChiTiet(matra, masv, manv);
            capNhatChiTietTra(mamuon);
        }

        if (kiemTraTraHoanTat(mamuon)) {
            String sql = "update MUONTB set TRANGTHAIMUON = N'Đã trả' where MAMUON = ?";
            try {
                PreparedStatement ps = ketNoi.prepareStatement(sql);
                ps.setString(1, mamuon);
                ps.executeUpdate();

            } catch (Exception e) {
                System.out.println("Lỗi cập nhật trạng thái bảng mượn");
            }
        }

    }
    //reset phần trả
    private void resetTraTB(){
        jTextField_MaSVTra.setText("");
        jTextField_HoTenSVTra.setText("");
        jTextField_LopSVTra.setText("");
        jTextField_SDTTra.setText("");
        jTextField_MaMuon.setText("");
        jTextField_MaSVMuon.setText("");
        DefaultTableModel dtm = (DefaultTableModel) jTable_DSThBiTra.getModel();
        dtm.setNumRows(0);
        TBmuon.clear();
    }
    private void resetMuonTB(){
        jTextField_MaSV.setText("");
        jTextField_HoTen.setText("");
        jTextField_Lop.setText("");
        jTextField_SDT.setText("");
        resetTableTBMUON();
        datePicker_NgayMuon.setText("");
        datePicker_NgayTra.setText("");
        timePicker_GioMuon.setText("");
        timePicker_GioTra.setText("");
        jButton_DSDangKy.setEnabled(false);
        dstbmuon.clear();
        jButton_ChonTB.setEnabled(true);
    }
    //-----------THEM THIET BI --------------------
    
    
    private void layLoaiTBThem(){
        String sql = "select * from LOAITB";
        maLoai.clear();
        jComboBox_LoaiTB_Them.removeAllItems();
        
        jComboBox_LoaiTB_Them.addItem("---Loại thiết bị---");
        try {
            PreparedStatement ps = ketNoi.prepareStatement(sql);
            ResultSet rs= ps.executeQuery();
            while(rs.next()){
                
                String maLoaiTB = rs.getString("MALOAI");
                String tenLoai = rs.getString("TENLOAI");
                maLoai.add(maLoaiTB);
                jComboBox_LoaiTB_Them.addItem(tenLoai);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
    
    //tim kiem matb co san
    private boolean kiemTraMaTB(String matb){
        String sql = "select * from THIETBI where MATB = ?";
        try {
            PreparedStatement ps = ketNoi.prepareStatement(sql);
            ps.setString(1, matb);
            ResultSet rs=  ps.executeQuery();
            if(rs.next()) {
                return true;
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        return false;
    }
    //----------END THEM THIET BI --- ----------------
    
    
    
    
    //======================================= button ==============================================
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    //======================================= <> =================================================
    private void jLabel1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel1MouseClicked
        // TODO add your handling code here:
        jPanel_trangchu.setVisible(true);
        jPanel_muontb.setVisible(false);
        jPanel_tratb.setVisible(false);
        jPanel_themtb.setVisible(false);

        jPanel_trangchu_btn.setBackground(Color.white);
        jPanel_muontb_btn.setBackground(new Color(153, 153, 153));
        jPanel_tratb_btn.setBackground(new Color(153, 153, 153));
        jPanel_themtb_btn.setBackground(new Color(153, 153, 153));
        
        docDanhSach();
    }//GEN-LAST:event_jLabel1MouseClicked

    private void jLabel2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel2MouseClicked
        // TODO add your handling code here:
        jPanel_trangchu.setVisible(false);
        jPanel_muontb.setVisible(true);
        jPanel_tratb.setVisible(false);
        jPanel_themtb.setVisible(false);

        jPanel_trangchu_btn.setBackground(new Color(153, 153, 153));
        jPanel_muontb_btn.setBackground(Color.white);
        jPanel_tratb_btn.setBackground(new Color(153, 153, 153));
        jPanel_themtb_btn.setBackground(new Color(153, 153, 153));
    }//GEN-LAST:event_jLabel2MouseClicked

    private void jLabel3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel3MouseClicked
        // TODO add your handling code here:
        jPanel_trangchu.setVisible(false);
        jPanel_muontb.setVisible(false);
        jPanel_tratb.setVisible(true);
        jPanel_themtb.setVisible(false);

        jPanel_trangchu_btn.setBackground(new Color(153, 153, 153));
        jPanel_muontb_btn.setBackground(new Color(153, 153, 153));
        jPanel_tratb_btn.setBackground(Color.white);
        jPanel_themtb_btn.setBackground(new Color(153, 153, 153));
    }//GEN-LAST:event_jLabel3MouseClicked

    private void jLabel4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel4MouseClicked
        // TODO add your handling code here:
        jPanel_trangchu.setVisible(false);
        jPanel_muontb.setVisible(false);
        jPanel_tratb.setVisible(false);
        jPanel_themtb.setVisible(true);

        jPanel_trangchu_btn.setBackground(new Color(153, 153, 153));
        jPanel_muontb_btn.setBackground(new Color(153, 153, 153));
        jPanel_tratb_btn.setBackground(new Color(153, 153, 153));
        jPanel_themtb_btn.setBackground(Color.white);
        
        layLoaiTBThem();
    }//GEN-LAST:event_jLabel4MouseClicked

    private void jButton_TimSVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_TimSVActionPerformed
        // Nhan tim sinh vien:
        String masv = jTextField_MaSV.getText();
        masv = masv.toUpperCase();
        jTextField_MaSV.setText(masv);
        if ("".equals(masv)) {
            jTextField_HoTen.setText("");
            jTextField_Lop.setText("");
            jTextField_SDT.setText("");
            jButton_DSDangKy.setEnabled(false);
            JOptionPane.showMessageDialog(rootPane, "Nhập mã số sinh viên");

            return;
        }
        System.out.println(masv);
        String sql = "select * from sinhvien where MASV = ?";
        try {
            PreparedStatement ps = ketNoi.prepareStatement(sql);
            ps.setString(1, masv);
            ResultSet rs = ps.executeQuery();
            if (rs.next()) {
                String hoten = rs.getString("HOTEN");
                String lop = rs.getString("LOP");
                String sdt = rs.getString("SDT");
                jTextField_MaSV.setText(masv);
                jTextField_HoTen.setText(hoten);
                jTextField_Lop.setText(lop);
                jTextField_SDT.setText(sdt);

                kiemTraDK(masv);
                jTextField_HoTen.setEditable(false);
                jTextField_Lop.setEditable(false);
                jTextField_SDT.setEditable(false);
            } else {
                jTextField_HoTen.setText("");
                jTextField_Lop.setText("");
                jTextField_SDT.setText("");
                jTextField_HoTen.setEditable(true);
                jTextField_Lop.setEditable(true);
                jTextField_SDT.setEditable(true);
                resetTableTBMUON();
                JOptionPane.showMessageDialog(rootPane, "Chưa có thông tin sinh viên");
            }
        } catch (Exception e) {

        }
    }//GEN-LAST:event_jButton_TimSVActionPerformed

    private void jButton_DSDangKyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_DSDangKyActionPerformed
        // Load ds dang ky:
        DefaultTableModel dtm = (DefaultTableModel) jTable_ChonDSDK.getModel();
        dtm.setNumRows(0);
        String masv = jTextField_MaSV.getText();
        String sql = "select * from muontb where MASV = ? and TRANGTHAIMUON = N'Đăng ký'";
        sods = 0;
        try {
            PreparedStatement ps = ketNoi.prepareStatement(sql);
            ps.setString(1, masv);
            ResultSet rs = ps.executeQuery();
            while (rs.next()) {
                Vector v = new Vector();
                String mamuon, tgmuon, tgtra;
                mamuon = rs.getString("MAMUON");
                v.add(mamuon);
                tgmuon = rs.getString("NGAYGIOMUON");
                v.add(tgmuon);
                tgtra = rs.getString("NGAYGIODUDINHTRA");
                v.add(tgtra);
                dtm.addRow(v);
                dtm.setValueAt(false, sods, 3);
                sods++;
            }
            if (sods > 0) {
                jTable_ChonDSDK.setModel(dtm);
                jDialog_ChonDSDangKy.setLocationRelativeTo(null);
                jDialog_ChonDSDangKy.setVisible(true);

            } else {
                JOptionPane.showMessageDialog(rootPane, "Sinh viên chưa đăng ký mượn thiết bị");
            }
            ps.close();
            rs.close();

        } catch (Exception e) {
            System.out.println("Load list error 304");
        }
    }//GEN-LAST:event_jButton_DSDangKyActionPerformed

    private void jButton_ChonDSDKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_ChonDSDKActionPerformed
        //chon danh sach dang ky:
        Vector dsmuon = new Vector();
//        int j=0;
        for (int i = 0; i < sods; i++) {
            boolean check = (boolean) jTable_ChonDSDK.getValueAt(i, 3);
            System.out.println("check: " + check);
            if (check) {

                dsmuon.add(jTable_ChonDSDK.getValueAt(i, 0));
                maMuonDK = (String) jTable_ChonDSDK.getValueAt(i, 0);
                SVDaDK = true;
            }
        }
        danhSachTBDangky((String) dsmuon.get(0));
        layThoiGianMuonTra((String) dsmuon.get(0));
        jDialog_ChonDSDangKy.setVisible(false);
        jButton_ChonTB.setEnabled(false);

    }//GEN-LAST:event_jButton_ChonDSDKActionPerformed

    private void jButton_DatLaiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_DatLaiActionPerformed
        // reset tb muon:
        resetMuonTB();
    }//GEN-LAST:event_jButton_DatLaiActionPerformed

    private void jButton_MaSVmuonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_MaSVmuonActionPerformed
        // tim sv tra tb:
        String masv = jTextField_MaSVMuon.getText();

        if ("".equals(masv)) {

            JOptionPane.showMessageDialog(rootPane, "Nhập mã số sinh viên");

            return;
        }
        System.out.println(masv);
        String sql = "select * from muontb where MASV = ?";
        try {
            PreparedStatement ps = ketNoi.prepareStatement(sql);
            ps.setString(1, masv);
            ResultSet rs = ps.executeQuery();
            if (rs.next()) {
                jDialog_ChonDSDangKy.setLocationRelativeTo(null);
                jDialog_ChonDSDangKy.setVisible(true);

            } else {

                JOptionPane.showMessageDialog(rootPane, "Không tìm thấy thông tin mượn");
            }
        } catch (Exception e) {

        }
    }//GEN-LAST:event_jButton_MaSVmuonActionPerformed

    private void jButton_gioHTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_gioHTActionPerformed
        // TODO add your handling code here:
        datePicker_NgayMuon.setDateToToday();
        timePicker_GioMuon.setTimeToNow();
    }//GEN-LAST:event_jButton_gioHTActionPerformed

    private void jButton_ChonTBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_ChonTBActionPerformed
        // Chon thiet bi muon:
        boolean check = true;
        Date timenow = new Date();
        String ngaymuon = datePicker_NgayMuon.getDateStringOrEmptyString();
        if (ngaymuon == "") {
            datePicker_NgayMuon.setDateToToday();
            ngaymuon = datePicker_NgayMuon.getDateStringOrEmptyString();
        }
        String ngaytra = datePicker_NgayTra.getDateStringOrEmptyString();
        if (ngaytra == "") {
            JOptionPane.showMessageDialog(rootPane, "Nhập thời gian sẽ trả thiết bị");
            check = false;
        }
        String giomuon = timePicker_GioMuon.getTimeStringOrEmptyString();
        if (giomuon == "") {
            timePicker_GioMuon.setTimeToNow();
            giomuon = timePicker_GioMuon.getTimeStringOrEmptyString();
        }
        String giotra = timePicker_GioTra.getTimeStringOrEmptyString();
        if (giotra == "" && check == true) {
            JOptionPane.showMessageDialog(rootPane, "Nhập thời gian sẽ trả thiết bị");
            check = false;
        }
        String tgMuon = ngaymuon + " " + giomuon;
        String tgTra = ngaytra + " " + giotra;
        if (check) {

            locDanhSach();
            

        }


    }//GEN-LAST:event_jButton_ChonTBActionPerformed

    private void jButton1_XacNhanChonTBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1_XacNhanChonTBActionPerformed
        // TODO add your handling code here:
        int soTBi = 0;
        TBmuon.clear();
        for (int i = 0; i < sotbMuon; i++) {
            
            
            if(dstbmuon.get(i).check==true){
                TBmuon.add(dstbmuon.get(i));
                soTBi++;
            }
            
        }
        int dem = 0;
        if (soTBi > 0) {

            jDialog_DanhSachMuon.setVisible(false);
            DefaultTableModel dtm = (DefaultTableModel) jTable_DSThBiMuon.getModel();
            dtm.setNumRows(0);
            for (int i = 0; i < sotbMuon; i++) {
                Vector vt = new Vector();
                if (dstbmuon.get(i).check) {
                    vt.add(dem + "");
                    vt.add(dstbmuon.get(i).matb);
                    vt.add(dstbmuon.get(i).tenTB);
                    vt.add(dstbmuon.get(i).moTa);
                    TBmuon.add(dstbmuon.get(i));
                    System.out.println("MTB: " + dstbmuon.get(i).matb);
                    vt.add(false);
                    dtm.addRow(vt);
                    dem++;
                    SVDaDK = false;
                }

            }
            jTable_TBCoSan.setModel(dtm);
        }


    }//GEN-LAST:event_jButton1_XacNhanChonTBActionPerformed
    /*
    private void jButton_TimMaMuonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton14ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton14ActionPerformed
*/
    private void jButton_TimMaSVmuonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_TimMaSVmuonActionPerformed
        // TIM danh sach muon bang ma sinh vien:
        String masv = jTextField_MaSVMuon.getText();
        masv = masv.toUpperCase();
        jTextField_MaSVMuon.setText(masv);
        DefaultTableModel dtm = (DefaultTableModel) jTable_ChonDSMuon.getModel();
        dtm.setNumRows(0);
        if ("".equals(masv)) {

            JOptionPane.showMessageDialog(rootPane, "Nhập mã số sinh viên");

            return;
        }
        System.out.println(masv);
        String sql = "select * from muontb where MASV = ? and TRANGTHAIMUON = N'Mượn'";
        try {
            PreparedStatement ps = ketNoi.prepareStatement(sql);
            ps.setString(1, masv);
            ResultSet rs = ps.executeQuery();
            Vector v;
            boolean check = true;
            while (rs.next()) {
                v = new Vector();
                String mamuon, tgmuon, tgtra;
                mamuon = rs.getString("MAMUON");
                tgmuon = rs.getString("NGAYGIOMUON");
                tgtra = rs.getString("NGAYGIODUDINHTRA");
                v.add(mamuon);
                v.add(tgmuon);
                v.add(tgtra);
                v.add(masv);
                dtm.addRow(v);
                check = false;

            }
            if (check) {

                JOptionPane.showMessageDialog(rootPane, "Không tìm thấy thông tin mượn");
                return;
            }
            jTable_ChonDSMuon.setModel(dtm);
            jDialog_ChonDSTra.setLocationRelativeTo(null);
            jDialog_ChonDSTra.setVisible(true);
        } catch (Exception e) {

        }
    }//GEN-LAST:event_jButton_TimMaSVmuonActionPerformed

    private void jButton1_TimMaMuonTBiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1_TimMaMuonTBiActionPerformed
        // TODO add your handling code here:
        String mamuon = jTextField_MaMuon.getText();
        DefaultTableModel dtm = (DefaultTableModel) jTable_DanhSachMuon.getModel();
        dtm.setNumRows(0);
        if ("".equals(mamuon)) {
            JOptionPane.showMessageDialog(rootPane, "Nhập mã mượn cần tìm");
        } else {
            String sql = "select * from muontb where MAMUON = ? and TRANGTHAIMUON = N'Mượn'";
            try {
                PreparedStatement ps = ketNoi.prepareStatement(sql);
                ps.setString(1, mamuon);
                ResultSet rs = ps.executeQuery();

                if (rs.next()) {
                    System.out.println("mamuon = " + mamuon);
                    layMaSVMuon(mamuon);
                    mamuonTra = mamuon;
                    layTBmuon(mamuon);

                } else {
                    JOptionPane.showMessageDialog(rootPane, "Không tìm thấy mã mượn");
                    mamuon = "";
                }
            } catch (Exception e) {
                System.out.println("Loi tim ma muon");
            }
            String masvmuon = jTextField_MaSVMuon.getText();
            if(masvmuon.equals("")){
                
            }
            else {
                layThongTinSVTra(masvmuon);
            }
            
        }
    }//GEN-LAST:event_jButton1_TimMaMuonTBiActionPerformed

    private void jButton_HuyChonTBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_HuyChonTBActionPerformed
        // TODO add your handling code here:
        jDialog_DanhSachMuon.setVisible(false);
    }//GEN-LAST:event_jButton_HuyChonTBActionPerformed

    private void jButton_ChonDSMuonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_ChonDSMuonActionPerformed
        // TODO add your handling code here:
        String mamuon = "";
        int vitri = jTable_ChonDSMuon.getSelectedRow();
        mamuon = (String) jTable_ChonDSMuon.getValueAt(vitri, 0);
        System.out.println("mamuon: " + mamuon);
        if (mamuon == "") {
            JOptionPane.showMessageDialog(rootPane, "Chọn danh sách cần trả");
            mamuonTra = "";
        } else {
            layTBmuon(mamuon);
            mamuonTra = mamuon;
            jDialog_ChonDSTra.setVisible(false);
            layMaSVMuon(mamuon);
            
            jTextField_MaMuon.setText(mamuon);
            String masvmuon = jTextField_MaSVMuon.getText();
            if(masvmuon.equals("")){
                
            }
            else {
                layThongTinSVTra(masvmuon);
            }
            
//             String sql = "select MASV from  where mamuon = ?";
//            try {
//                PreparedStatement ps = ketNoi.prepareStatement(sql);
//                ps.setString(1, mamuon);
//                ResultSet rs = ps.executeQuery();
//                if(rs.next()){
//                    
//                }
//            } catch (Exception e) {
//            }
        }

    }//GEN-LAST:event_jButton_ChonDSMuonActionPerformed

    private void jButton_DanhSachDaMuonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_DanhSachDaMuonActionPerformed
        // TODO add your handling code here:
        DefaultTableModel dtm = (DefaultTableModel) jTable_ChonDSMuon.getModel();
        dtm.setNumRows(0);
        String sql = "select * from muontb where TRANGTHAIMUON  = N'Mượn'";
        try {
            PreparedStatement ps = ketNoi.prepareStatement(sql);
            ResultSet rs = ps.executeQuery();
            Vector vt;
            while (rs.next()) {
                vt = new Vector();
                vt.add(rs.getString("MAMUON"));
                vt.add(rs.getString("NGAYGIOMUON"));
                vt.add(rs.getString("NGAYGIODUDINHTRA"));
                vt.add(rs.getString("MASV"));
                dtm.addRow(vt);
            }
            jTable_ChonDSMuon.setModel(dtm);
        } catch (Exception e) {
        }

        jDialog_ChonDSTra.setLocationRelativeTo(null);
        jDialog_ChonDSTra.setVisible(true);
    }//GEN-LAST:event_jButton_DanhSachDaMuonActionPerformed

    private void jButton_TimMaSVTraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_TimMaSVTraActionPerformed
        // TODO add your handling code here:
        String masv = jTextField_MaSVTra.getText();
        masv = masv.trim();
        if (masv == "") {
            resetSinhVienTra();
            JOptionPane.showMessageDialog(rootPane, "Nhập mã sinh viên cần tìm");
        } else {
            String sql = "select * from sinhvien where MASV = ?";
            try {
                PreparedStatement ps = ketNoi.prepareStatement(sql);
                ps.setString(1, masv);
                ResultSet rs = ps.executeQuery();
                String hoten, lop, sdt;

                if (rs.next()) {

                    hoten = rs.getString("HOTEN");
                    lop = rs.getString("LOP");
                    sdt = rs.getString("SDT");

                    jTextField_HoTenSVTra.setText(hoten);
                    jTextField_LopSVTra.setText(lop);
                    jTextField_SDTTra.setText(sdt);
                } else {
                    JOptionPane.showMessageDialog(rootPane, "Không tìm thấy mã sinh viên");
                    resetSinhVienTra();
                }
            } catch (SQLException ex) {
                Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
            }

        }
    }//GEN-LAST:event_jButton_TimMaSVTraActionPerformed

    private void jButton_XNmuonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_XNmuonActionPerformed
        // Xác nhận cho mượn thiết bị:

        String manv = jLabel_MaNV.getText();
        
        
        
        //Xác nhận điều kiện
        String masv = jTextField_MaSV.getText();
        String hoten = jTextField_HoTen.getText();
        String lop = jTextField_Lop.getText();
        String sdt = jTextField_SDT.getText();
        masv = masv.trim();
        boolean ktra = true;
        boolean tontaiSV = false;
        tontaiSV = timMaSVmuon();
            if ("".equals(masv)) {
                JOptionPane.showMessageDialog(rootPane, "Nhập mã sinh viên");
                return;
            }

            if ("".equals(hoten) && !tontaiSV) {
                JOptionPane.showMessageDialog(rootPane, "Nhập họ tên");
                return;
            }
            if ("".equals(lop)  && !tontaiSV) {
                JOptionPane.showMessageDialog(rootPane, "Nhập lớp");
                return;
            }
            if (sdt == "" && !tontaiSV) {
                JOptionPane.showMessageDialog(rootPane, "Nhập số điện thoại");
                return;
            }
        
        if (!tontaiSV) {
            if ("".equals(masv)) {
                JOptionPane.showMessageDialog(rootPane, "Nhập mã sinh viên");
                ktra = false;
            }

            if ("".equals(hoten) && ktra) {
                JOptionPane.showMessageDialog(rootPane, "Nhập họ tên");
                ktra = false;
            }
            if ("".equals(lop) && ktra) {
                JOptionPane.showMessageDialog(rootPane, "Nhập lớp");
                ktra = false;
            }
            if (sdt == "" && ktra) {
                JOptionPane.showMessageDialog(rootPane, "Nhập số điện thoại");
                ktra = false;
            }
        }

        if (!TBmuon.isEmpty()) {
            //lưu thông tin sinh viên nếu là sinh viên mới
            if (!kiemTraThongTinSV(masv)) {
                luuSV(masv, hoten, lop, sdt);
            }
            //kiểm tra danh sách đăng ký hay mượn tại phòng thiết bị

            if (SVDaDK) {
                capNhatMuonDK(maMuonDK, manv);
                //capNhatChoMuonTB(maMuonDK);
                capNhatChiTietMuonDK(maMuonDK);
                capNhatTrangThaiTBDK(maMuonDK);
            } else {
                //lưu thông tin mượn vào bảng mượn
                String ngaymuon = datePicker_NgayMuon.getDateStringOrEmptyString();
                String ngaytra = datePicker_NgayTra.getDateStringOrEmptyString();
                String giomuon = timePicker_GioMuon.getTimeStringOrEmptyString();
                String giotra = timePicker_GioTra.getTimeStringOrEmptyString();
                String tgmuon = ngaymuon + " " + giomuon;
                String tgtra = ngaytra + " " + giotra;

                luuThongTinMuon(tgmuon, tgtra, masv, manv);

                //lưu thông tin chi tiết bản chi tiết mượn
                
            }
            JOptionPane.showMessageDialog(rootPane, "Mượn thành công");
            resetMuonTB();
        } else {
            JOptionPane.showMessageDialog(rootPane, "Chọn thiết bị cần mượn");
        }


    }//GEN-LAST:event_jButton_XNmuonActionPerformed
//999
    private void jButton_XacNhanTraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_XacNhanTraActionPerformed
        // Xác nhận trả tb
        //kiểm tra điều kiện
        String masvmuon = jTextField_MaSVMuon.getText();
        if(!masvmuon.isEmpty())
        {
            layThongTinSVTra(masvmuon);
        }
        
        //1. Sinh viên trả
        //Xác nhận điều kiện
        String masv = jTextField_MaSVTra.getText();
        masv = masv.trim();
        masv = masv.toUpperCase();
        jTextField_MaSVTra.setText(masv);

        String hoten = jTextField_HoTenSVTra.getText();
        String lop = jTextField_LopSVTra.getText();
        String sdt = jTextField_SDTTra.getText();
        
        chonTbTra();
        
        boolean ktra = true;
        boolean tontaiSV = false;
        String mamuon = jTextField_MaMuon.getText();
        tontaiSV = timMaSVtra();
        System.out.println("tontai: " + tontaiSV);
        if (mamuon.equals("")) {
            JOptionPane.showMessageDialog(rootPane, "Nhập mã mượn hoặc mã sinh viên mượn");
            return;
        }

        //nếu masv trả trống 
        if(masv.equals("")){
            JOptionPane.showMessageDialog(rootPane, "Nhập mã sinh viên trả");
            return;
        }
        else {
            tontaiSV = timMaSVtra();
            //neu tồn tại tự động điền vào
            if(tontaiSV){
                layThongTinSVTra(masv);
            }
            else {
                //sinh viên chưa có trong bang sinh vien
                if ("".equals(hoten) && ktra ) {
                    JOptionPane.showMessageDialog(rootPane, "Nhập họ tên");
                    
                    ktra = false;
                    return;
                }
                if ("".equals(lop) && ktra) {
                    JOptionPane.showMessageDialog(rootPane, "Nhập lớp");
                    
                    ktra = false;
                    return;
                }
                if (sdt == "" && ktra) {
                    JOptionPane.showMessageDialog(rootPane, "Nhập số điện thoại");
                    
                    ktra = false;
                    return;
                }
            }
        }
        
        
        
        
        
        //2. Danh sách thiết bị trả
        if (!TBtra.isEmpty()) {
            //lưu thông tin sinh viên nếu là sinh viên mới
            if (!kiemTraThongTinSV(masv)) {
                luuSV(masv, hoten, lop, sdt);
            }

            //cập nhật trạng thái trả
            traTB(mamuon);
            JOptionPane.showMessageDialog(rootPane, "Trả thiết bị thành công");
            resetTraTB();
        } else {
            JOptionPane.showMessageDialog(rootPane, "Chọn thiết bị cần trả");
        }
       
    }//GEN-LAST:event_jButton_XacNhanTraActionPerformed

    private void jButton_ChonTatCaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_ChonTatCaActionPerformed
        // Chọn tất cả tb cần trả
        DefaultTableModel dtm = (DefaultTableModel) jTable_DSThBiTra.getModel();
        dtm.setNumRows(0);

        for (int i = 0; i < dstbtra.size(); i++) {
            dstbtra.get(i).check = true;
            Vector v = new Vector();
            v.add(i);
            v.add(dstbtra.get(i).matb);
            v.add(dstbtra.get(i).tenTB);
            v.add(dstbtra.get(i).tinhTrang);
            v.add(dstbtra.get(i).check);

            dtm.addRow(v);
        }
        jTable_DSThBiTra.setModel(dtm);

    }//GEN-LAST:event_jButton_ChonTatCaActionPerformed

    private void jLabel62MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel62MouseClicked
        // Thống kê:
    }//GEN-LAST:event_jLabel62MouseClicked

    private void jButton16ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton16ActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
        new LoginFrameQL().setVisible(true);
    }//GEN-LAST:event_jButton16ActionPerformed

    private void jButton_SuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_SuaActionPerformed
        // TODO add your handling code here:
        int i = jTable_TBCoSan.getSelectedRow();
        if(i >= 0){
            String matb = (String) jTable_TBCoSan.getValueAt(i, 0);
            String sql = "select * from thietbi where MATB = ?";
            try {
                PreparedStatement ps = ketNoi.prepareStatement(sql);
                ps.setString(1, matb);
                ResultSet rs = ps.executeQuery();
                if(rs.next()){
                    String tentb, maloai, ngayGioNhap, mota, tinhtrang;
                    tentb = rs.getString("TENTB");
                    maloai = rs.getString("MALOAI");
                    ngayGioNhap = rs.getString("NGAYNHAPKHO");
                    mota = rs.getString("MOTA");
                    tinhtrang = rs.getString("TINHTRANGSD");
                    
                    maLoaiBanDau = maloai;
                    
                    jTextField_MaTb_Sua.setText(matb);
                    jTextField_TenTb_Sua.setText(tentb);
                    
                    layTenLoaiTB(maloai);
                    jTextField_NgayNhapKho_Sua.setText(ngayGioNhap);
                    jTextArea_MoTa_Sua.setText(mota);
                    jComboBox_TinhTrang_Sua.setSelectedItem(tinhtrang);
                    
                    jDialog_SuaTB.setVisible(true);
                }
            } catch (SQLException ex) {
                Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
            
        }
        else {
            JOptionPane.showMessageDialog(rootPane, "Chọn thiết bị cần sửa");
        }
    }//GEN-LAST:event_jButton_SuaActionPerformed

    private void jLabel_ThongKeMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel_ThongKeMouseEntered
        // TODO add your handling code here:
        jLabel_ThongKe.setForeground(new Color(168, 168, 168));
    }//GEN-LAST:event_jLabel_ThongKeMouseEntered

    private void jLabel_ThongKeMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel_ThongKeMouseExited
        // TODO add your handling code here:
        jLabel_ThongKe.setForeground(new Color(0, 0, 0));
    }//GEN-LAST:event_jLabel_ThongKeMouseExited

    private void jLabel_ThemSVMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel_ThemSVMouseEntered
        // TODO add your handling code here:
        jLabel_ThemSV.setForeground(new Color(168, 168, 168));
    }//GEN-LAST:event_jLabel_ThemSVMouseEntered

    private void jLabel_ThemSVMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel_ThemSVMouseExited
        // TODO add your handling code here:
        jLabel_ThemSV.setForeground(new Color(0, 0, 0));
    }//GEN-LAST:event_jLabel_ThemSVMouseExited

    private void jLabel_ThemLoaiThietBiMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel_ThemLoaiThietBiMouseEntered
        // TODO add your handling code here:
        jLabel_ThemLoaiThietBi.setForeground(new Color(168, 168, 168));
    }//GEN-LAST:event_jLabel_ThemLoaiThietBiMouseEntered

    private void jLabel_ThemLoaiThietBiMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel_ThemLoaiThietBiMouseExited
        // TODO add your handling code here:
        jLabel_ThemLoaiThietBi.setForeground(new Color(0, 0, 0));
    }//GEN-LAST:event_jLabel_ThemLoaiThietBiMouseExited

    private void jComboBox_LocTheoLoaiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox_LocTheoLoaiActionPerformed
        // lọc danh sách
        int trangThai = jComboBox_TrangThai.getSelectedIndex();
        
        if(trangThai==0){
            int loc = jComboBox_LocTheoLoai.getSelectedIndex();
            if(loc != 0){
                DefaultTableModel dtm = (DefaultTableModel) jTable_TBCoSan.getModel();
                dtm.setNumRows(0);
                String tenloai = (String) jComboBox_LocTheoLoai.getSelectedItem();
                String sql = "select * from THIETBI tb, LOAITB ltb where tb.MALOAI = ltb.MALOAI and TENLOAI = ?";
                try {
                    PreparedStatement ps = ketNoi.prepareStatement(sql);
                    ps.setString(1, tenloai);
                    ResultSet rs = ps.executeQuery();
                    while (rs.next()) {
                        Vector v = new Vector();
                        String matb, tentb, maloai, ngaynhapkho, mota, tinhtrangsd;
                        matb = rs.getString("MATB");
                        v.add(matb);
                        tentb = rs.getString("TENTB");
                        v.add(tentb);
                        maloai = rs.getString("MALOAI");
                        v.add(maloai);
                        ngaynhapkho = rs.getString("NGAYNHAPKHO");
                        v.add(ngaynhapkho);
                        mota = rs.getString("MOTA");
                        v.add(mota);
                        tinhtrangsd = rs.getString("TINHTRANGSD");
                        demTB(tinhtrangsd);
                        v.add(tinhtrangsd);

                        dtm.addRow(v);

                    }
                    rs.close();
                    ps.close();
                    jTable_TBCoSan.setModel(dtm);
                } catch (Exception e) {
                }
                
            }
            else {
                docDanhSach();
            }
           
        }
        else {
            String trangThaiSD = (String) jComboBox_TrangThai.getSelectedItem();
            int loc = jComboBox_LocTheoLoai.getSelectedIndex();
            if(loc != 0){
                DefaultTableModel dtm = (DefaultTableModel) jTable_TBCoSan.getModel();
                dtm.setNumRows(0);
                String tenloai = (String) jComboBox_LocTheoLoai.getSelectedItem();
                String sql = "select * from THIETBI tb, LOAITB ltb where tb.MALOAI = ltb.MALOAI and TENLOAI = ? and TINHTRANGSD = ?";
                try {
                    PreparedStatement ps = ketNoi.prepareStatement(sql);
                    ps.setString(1, tenloai);
                    ps.setString(2, trangThaiSD);
                    ResultSet rs = ps.executeQuery();
                    while (rs.next()) {
                        Vector v = new Vector();
                        String matb, tentb, maloai, ngaynhapkho, mota, tinhtrangsd;
                        matb = rs.getString("MATB");
                        v.add(matb);
                        tentb = rs.getString("TENTB");
                        v.add(tentb);
                        maloai = rs.getString("MALOAI");
                        v.add(maloai);
                        ngaynhapkho = rs.getString("NGAYNHAPKHO");
                        v.add(ngaynhapkho);
                        mota = rs.getString("MOTA");
                        v.add(mota);
                        tinhtrangsd = rs.getString("TINHTRANGSD");
                        demTB(tinhtrangsd);
                        v.add(tinhtrangsd);

                        dtm.addRow(v);

                    }
                    rs.close();
                    ps.close();
                    jTable_TBCoSan.setModel(dtm);
                } catch (Exception e) {
                    
                }
            }
            else {
                DefaultTableModel dtm = (DefaultTableModel) jTable_TBCoSan.getModel();
                dtm.setNumRows(0);
                String tenloai = (String) jComboBox_LocTheoLoai.getSelectedItem();
                String sql = "select * from THIETBI tb, LOAITB ltb where tb.MALOAI = ltb.MALOAI and TINHTRANGSD = ?";
                try {
                    PreparedStatement ps = ketNoi.prepareStatement(sql);
                    ps.setString(1, trangThaiSD);
                    ResultSet rs = ps.executeQuery();
                    while (rs.next()) {
                        Vector v = new Vector();
                        String matb, tentb, maloai, ngaynhapkho, mota, tinhtrangsd;
                        matb = rs.getString("MATB");
                        v.add(matb);
                        tentb = rs.getString("TENTB");
                        v.add(tentb);
                        maloai = rs.getString("MALOAI");
                        v.add(maloai);
                        ngaynhapkho = rs.getString("NGAYNHAPKHO");
                        v.add(ngaynhapkho);
                        mota = rs.getString("MOTA");
                        v.add(mota);
                        tinhtrangsd = rs.getString("TINHTRANGSD");
                        demTB(tinhtrangsd);
                        v.add(tinhtrangsd);

                        dtm.addRow(v);

                    }
                    rs.close();
                    ps.close();
                    jTable_TBCoSan.setModel(dtm);
                } catch (Exception e) {
                    
                }
            }
        }
    }//GEN-LAST:event_jComboBox_LocTheoLoaiActionPerformed

    private void jComboBox_TrangThaiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox_TrangThaiActionPerformed
        // TODO add your handling code here:
        int trangThai = jComboBox_TrangThai.getSelectedIndex();
        
        if(trangThai==0){
            int loc = jComboBox_LocTheoLoai.getSelectedIndex();
            if(loc != 0){
                DefaultTableModel dtm = (DefaultTableModel) jTable_TBCoSan.getModel();
                dtm.setNumRows(0);
                String tenloai = (String) jComboBox_LocTheoLoai.getSelectedItem();
                String sql = "select * from THIETBI tb, LOAITB ltb where tb.MALOAI = ltb.MALOAI and TENLOAI = ?";
                try {
                    PreparedStatement ps = ketNoi.prepareStatement(sql);
                    ps.setString(1, tenloai);
                    ResultSet rs = ps.executeQuery();
                    while (rs.next()) {
                        Vector v = new Vector();
                        String matb, tentb, maloai, ngaynhapkho, mota, tinhtrangsd;
                        matb = rs.getString("MATB");
                        v.add(matb);
                        tentb = rs.getString("TENTB");
                        v.add(tentb);
                        maloai = rs.getString("MALOAI");
                        v.add(maloai);
                        ngaynhapkho = rs.getString("NGAYNHAPKHO");
                        v.add(ngaynhapkho);
                        mota = rs.getString("MOTA");
                        v.add(mota);
                        tinhtrangsd = rs.getString("TINHTRANGSD");
                        demTB(tinhtrangsd);
                        v.add(tinhtrangsd);

                        dtm.addRow(v);

                    }
                    rs.close();
                    ps.close();
                    jTable_TBCoSan.setModel(dtm);
                } catch (Exception e) {
                }
                
            }
            else {
                docDanhSach();
            }
           
        }
        else {
            String trangThaiSD = (String) jComboBox_TrangThai.getSelectedItem();
            int loc = jComboBox_LocTheoLoai.getSelectedIndex();
            if(loc != 0){
                DefaultTableModel dtm = (DefaultTableModel) jTable_TBCoSan.getModel();
                dtm.setNumRows(0);
                String tenloai = (String) jComboBox_LocTheoLoai.getSelectedItem();
                String sql = "select * from THIETBI tb, LOAITB ltb where tb.MALOAI = ltb.MALOAI and TENLOAI = ? and TINHTRANGSD = ?";
                try {
                    PreparedStatement ps = ketNoi.prepareStatement(sql);
                    ps.setString(1, tenloai);
                    ps.setString(2, trangThaiSD);
                    ResultSet rs = ps.executeQuery();
                    while (rs.next()) {
                        Vector v = new Vector();
                        String matb, tentb, maloai, ngaynhapkho, mota, tinhtrangsd;
                        matb = rs.getString("MATB");
                        v.add(matb);
                        tentb = rs.getString("TENTB");
                        v.add(tentb);
                        maloai = rs.getString("MALOAI");
                        v.add(maloai);
                        ngaynhapkho = rs.getString("NGAYNHAPKHO");
                        v.add(ngaynhapkho);
                        mota = rs.getString("MOTA");
                        v.add(mota);
                        tinhtrangsd = rs.getString("TINHTRANGSD");
                        demTB(tinhtrangsd);
                        v.add(tinhtrangsd);

                        dtm.addRow(v);

                    }
                    rs.close();
                    ps.close();
                    jTable_TBCoSan.setModel(dtm);
                } catch (Exception e) {
                    
                }
            }
            else {
                DefaultTableModel dtm = (DefaultTableModel) jTable_TBCoSan.getModel();
                dtm.setNumRows(0);
                String tenloai = (String) jComboBox_LocTheoLoai.getSelectedItem();
                String sql = "select * from THIETBI tb, LOAITB ltb where tb.MALOAI = ltb.MALOAI and TINHTRANGSD = ?";
                try {
                    PreparedStatement ps = ketNoi.prepareStatement(sql);
                    ps.setString(1, trangThaiSD);
                    ResultSet rs = ps.executeQuery();
                    while (rs.next()) {
                        Vector v = new Vector();
                        String matb, tentb, maloai, ngaynhapkho, mota, tinhtrangsd;
                        matb = rs.getString("MATB");
                        v.add(matb);
                        tentb = rs.getString("TENTB");
                        v.add(tentb);
                        maloai = rs.getString("MALOAI");
                        v.add(maloai);
                        ngaynhapkho = rs.getString("NGAYNHAPKHO");
                        v.add(ngaynhapkho);
                        mota = rs.getString("MOTA");
                        v.add(mota);
                        tinhtrangsd = rs.getString("TINHTRANGSD");
                        demTB(tinhtrangsd);
                        v.add(tinhtrangsd);

                        dtm.addRow(v);

                    }
                    rs.close();
                    ps.close();
                    jTable_TBCoSan.setModel(dtm);
                } catch (Exception e) {
                    
                }
            }
        }
        
    }//GEN-LAST:event_jComboBox_TrangThaiActionPerformed

    private void jTextField_TimKiemKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField_TimKiemKeyReleased
        // Tim kiem theo tên trong bang trang chủ:
        String tenTim = jTextField_TimKiem.getText();
        tenTim.toUpperCase();
        jTextField_TimKiem.setText(tenTim);
        DefaultTableModel dtm = (DefaultTableModel) jTable_TBCoSan.getModel();
        dtm.setNumRows(0);
        if(!tenTim.equals("")){
            tenTim= "%"+tenTim+"%";
            String sql = "select * from THIETBI where TENTB like ?";
            try {
                PreparedStatement ps = ketNoi.prepareStatement(sql);
                ps.setString(1, tenTim);
                ResultSet rs = ps.executeQuery();
                
           

                while (rs.next()) {
                    Vector v = new Vector();
                    String matb, tentb, maloai, ngaynhapkho, mota, tinhtrangsd;
                    matb = rs.getString("MATB");
                    v.add(matb);
                    tentb = rs.getString("TENTB");
                    v.add(tentb);
                    maloai = rs.getString("MALOAI");
                    v.add(maloai);
                    ngaynhapkho = rs.getString("NGAYNHAPKHO");
                    v.add(ngaynhapkho);
                    mota = rs.getString("MOTA");
                    v.add(mota);
                    tinhtrangsd = rs.getString("TINHTRANGSD");
                    demTB(tinhtrangsd);
                    v.add(tinhtrangsd);

                    dtm.addRow(v);

                }
                rs.close();
                ps.close();
            } catch (Exception e) {
            }
        }
        else {
            docDanhSach();
        }
    }//GEN-LAST:event_jTextField_TimKiemKeyReleased

    private void jComboBox_LocTheoLoaiTBDKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox_LocTheoLoaiTBDKActionPerformed
        // Chon loai 
        String timkiem = jTextField_TimKiemTBMuon.getText();
        int loaiTB = jComboBox_LocTheoLoaiTBDK.getSelectedIndex();
        
        if(loaiTB==0){
            DefaultTableModel dtm = (DefaultTableModel) jTable_DanhSachMuon.getModel();
            dtm.setNumRows(0);
            if(timkiem.equals("")){
                loadDuLieuLenBang();
            }
            else {
                Vector vt;
                for(int i=0; i<dstbmuon.size(); i++){
                    vt = new Vector();
                    vt.add(dstbmuon.get(i).matb);
                    vt.add(dstbmuon.get(i).tenTB);
                    vt.add(dstbmuon.get(i).moTa);
                    vt.add(dstbmuon.get(i).check);

                    dtm.addRow(vt);
                }
            }
            jTable_DanhSachMuon.setModel(dtm);
        }
        else {
            loaiTB--;
            DefaultTableModel dtm = (DefaultTableModel) jTable_DanhSachMuon.getModel();
            dtm.setNumRows(0);
            Vector vt;
            for(int i = 0; i<dstbmuon.size(); i++){
                if(dstbmuon.get(i).maLoai.equals(maLoai.get(loaiTB))){
                    if(timkiem.isEmpty()){
                        vt = new Vector();
                            vt.add(dstbmuon.get(i).matb);
                            vt.add(dstbmuon.get(i).tenTB);
                            vt.add(dstbmuon.get(i).moTa);
                            vt.add(dstbmuon.get(i).check);

                            dtm.addRow(vt);
                    }
                    else {
                        if(dstbmuon.get(i).tenTB.contains(timkiem)){
                            vt = new Vector();
                            vt.add(dstbmuon.get(i).matb);
                            vt.add(dstbmuon.get(i).tenTB);
                            vt.add(dstbmuon.get(i).moTa);
                            vt.add(dstbmuon.get(i).check);

                            dtm.addRow(vt);
                        }
                    }
                    
                    
                    
                }
            }
            jTable_DanhSachMuon.setModel(dtm);
        }
    }//GEN-LAST:event_jComboBox_LocTheoLoaiTBDKActionPerformed

    private void jTable_DanhSachMuonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable_DanhSachMuonMouseClicked
        // TODO add your handling code here:
        int vitriCot = jTable_DanhSachMuon.getSelectedColumn();
        int vitriDong = jTable_DanhSachMuon.getSelectedRow();
        if(vitriCot==3) {
            dstbmuon.get(vitriDong).check = (boolean) jTable_DanhSachMuon.getValueAt(vitriDong, 3);
        }
        
        
    }//GEN-LAST:event_jTable_DanhSachMuonMouseClicked

    private void jTextField_TimKiemTBMuonKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField_TimKiemTBMuonKeyReleased
        // TODO add your handling code here:
        String timkiem = jTextField_TimKiemTBMuon.getText();
        timkiem = timkiem.toUpperCase();
        int loaiTB = jComboBox_LocTheoLoaiTBDK.getSelectedIndex();
        if(timkiem.equals("")){
            if(loaiTB==0){
                loadDuLieuLenBang();
            }
            else {
                loaiTB--;
                DefaultTableModel dtm = (DefaultTableModel) jTable_DanhSachMuon.getModel();
                dtm.setNumRows(0);
                Vector vt;
                for(int i=0; i<dstbmuon.size();i++){
                    if(dstbmuon.get(i).maLoai.equals(maLoai.get(loaiTB))){

                        vt = new Vector();
                        vt.add(dstbmuon.get(i).matb);
                        vt.add(dstbmuon.get(i).tenTB);
                        vt.add(dstbmuon.get(i).moTa);
                        vt.add(dstbmuon.get(i).check);

                        dtm.addRow(vt);

                    }
                }
                jTable_DanhSachMuon.setModel(dtm);
            }
            
        }
        else {
            if(loaiTB==0){
                DefaultTableModel dtm = (DefaultTableModel) jTable_DanhSachMuon.getModel();
                dtm.setNumRows(0);
                Vector vt;
                for(int i=0; i<dstbmuon.size();i++){
                    String tentb = dstbmuon.get(i).tenTB.toUpperCase();
                    if( tentb.contains(timkiem)){

                        vt = new Vector();
                        vt.add(dstbmuon.get(i).matb);
                        vt.add(dstbmuon.get(i).tenTB);
                        vt.add(dstbmuon.get(i).moTa);
                        vt.add(dstbmuon.get(i).check);
                        dtm.addRow(vt);

                    }
                }
                jTable_DanhSachMuon.setModel(dtm);
                
            }
            else {
                loaiTB--;
                DefaultTableModel dtm = (DefaultTableModel) jTable_DanhSachMuon.getModel();
                dtm.setNumRows(0);
                Vector vt;
                for(int i=0; i<dstbmuon.size();i++){
                    String tentb = dstbmuon.get(i).tenTB.toUpperCase();
                    if(dstbmuon.get(i).maLoai.equals(maLoai.get(loaiTB)) && tentb.contains(timkiem)){

                        vt = new Vector();
                        vt.add(dstbmuon.get(i).matb);
                        vt.add(dstbmuon.get(i).tenTB);
                        vt.add(dstbmuon.get(i).moTa);
                        vt.add(dstbmuon.get(i).check);
                        dtm.addRow(vt);

                    }
                }
                jTable_DanhSachMuon.setModel(dtm);
            }
            
        }
        
        
    }//GEN-LAST:event_jTextField_TimKiemTBMuonKeyReleased

    private void jButton_XoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_XoaActionPerformed
        // Xoa TB:
        int dong = jTable_TBCoSan.getSelectedRow();
        if(dong > -1){
            String matb = (String) jTable_TBCoSan.getValueAt(dong, 0);
            String trangThai = (String) jTable_TBCoSan.getValueAt(dong, 5);
            if("Đang mượn".equals(trangThai)){
                JOptionPane.showMessageDialog(rootPane, "Thiết bị đang cho mượn không thể xóa");
                return;
            }
            else{
                int chon = JOptionPane.showConfirmDialog(rootPane, "Xác nhận xóa thiết bị", "Xóa thiết bị",1, JOptionPane.WARNING_MESSAGE);
                if(chon == 0){
                    
                    //xóa trong bảng chi tiết trả
                    String sql1 = "delete from CHITIETTRA where MATB = ?";
                    try {
                        PreparedStatement ps = ketNoi.prepareStatement(sql1);
                        ps.setString(1, matb);
                        ps.executeUpdate();
               
                    } catch (SQLException ex) {
                        Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    //xóa trong bảng chi tiết mượn
                    String sql2 = "delete from CHITIETMUON where MATB = ?";
                    try {
                        PreparedStatement ps = ketNoi.prepareStatement(sql2);
                        ps.setString(1, matb);
                        ps.executeUpdate();
               
                    } catch (SQLException ex) {
                        Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    
                    
                    //xóa trong bảng thb
                    String sql = "delete from THIETBI where MATB = ?";
                    try {
                        PreparedStatement ps = ketNoi.prepareStatement(sql);
                        ps.setString(1, matb);
                        ps.executeUpdate();
                        JOptionPane.showMessageDialog(rootPane, "Xóa thành công");
                    } catch (SQLException ex) {
                        Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    
                }
            }
            
        }
        else {
            JOptionPane.showMessageDialog(rootPane, "Chọn thiết bị cần xóa");
        }
    }//GEN-LAST:event_jButton_XoaActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jComboBox_LoaiTB_ThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox_LoaiTB_ThemActionPerformed
        // Chọn loai thiết bị thêm:
        int chon = jComboBox_LoaiTB_Them.getSelectedIndex();
        if(chon > 0){
            chon--;
            String ml = maLoai.get(chon);
            jLabel_DauMaTB_Them.setText(ml);
        }
        else {
            jLabel_DauMaTB_Them.setText("NaN");
        }
        jLabel_LoaiTB_TB_Them.setText("");
    }//GEN-LAST:event_jComboBox_LoaiTB_ThemActionPerformed

    private void jButton_ThemTBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_ThemTBActionPerformed
        // Them thiet bi:
        String maloai = jLabel_DauMaTB_Them.getText();
        String ngayNhapKho = jTextField_NgayGioNhapKho_Them.getText();
        boolean check = true;
        int loaiTb = jComboBox_LoaiTB_Them.getSelectedIndex();
        if(loaiTb == 0){
            jLabel_LoaiTB_TB_Them.setText("*Chọn loại thiết bị");
            check = false;
        }
        String maTB = jTextField_CuoiMaTB_Them.getText();
        if(maTB.equals("")){
            jLabel_MaTB_TB_Them.setText("*Nhập mã thiết bị");
            check = false;
        }
        String tenTb = jTextField_TenTB_Them.getText();
        if(tenTb.equals("")){
            jLabel_TenTB_TB_Them.setText("*Nhập tên thiết bị");
            check = false;
        }
        
        String moTa = jTextArea_MoTa_Them.getText();
        if(check){
            maTB = maloai + "-"+maTB;
            if(kiemTraMaTB(maTB)){
            jTextField_CuoiMaTB_Them.setForeground(Color.red);
            jLabel_MaTB_TB_Them.setText("Mã thiết bị là có sẵn");
            return;
        }
            String sql = "insert into THIETBI values (?,?,?,?,?,N'Có sẵn')";
            try {
                PreparedStatement ps = ketNoi.prepareStatement(sql);
                ps.setString(1, maTB);
                ps.setString(2, tenTb);
                ps.setString(3, maloai);
                ps.setString(4, ngayNhapKho);
                ps.setString(5, moTa);
                ps.executeUpdate();
                JOptionPane.showMessageDialog(rootPane, "Thêm thiết bị thành công");
            } catch (Exception e) {
            }
            
        }
    }//GEN-LAST:event_jButton_ThemTBActionPerformed

    private void jTextField_CuoiMaTB_ThemKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField_CuoiMaTB_ThemKeyReleased
        // TODO add your handling code here:
        String maloai =  jLabel_DauMaTB_Them.getText();
        String maTb = jTextField_CuoiMaTB_Them.getText();
        maTb = maloai + "-"+maTb;
        if(kiemTraMaTB(maTb)){
            jTextField_CuoiMaTB_Them.setForeground(Color.red);
            jLabel_MaTB_TB_Them.setText("Mã thiết bị là có sẵn");
        }
        else {
            jTextField_CuoiMaTB_Them.setForeground(Color.black);
            jLabel_MaTB_TB_Them.setText("");
        }
    }//GEN-LAST:event_jTextField_CuoiMaTB_ThemKeyReleased

    private void jTextField_TenTB_ThemFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextField_TenTB_ThemFocusGained
        // TODO add your handling code here:
        jLabel_TenTB_TB_Them.setText("");
    }//GEN-LAST:event_jTextField_TenTB_ThemFocusGained

    private void jTextField_CuoiMaTB_ThemFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextField_CuoiMaTB_ThemFocusGained
        // TODO add your handling code here:
        jLabel_MaTB_TB_Them.setText("");
    }//GEN-LAST:event_jTextField_CuoiMaTB_ThemFocusGained

    private void jButton_Luu_SuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_Luu_SuaActionPerformed
        // Sua thiet bi
        String matb = jTextField_MaTb_Sua.getText();
        String tenTB = jTextField_TenTb_Sua.getText();
        int loaiTB = jComboBox_LoaiTB_Sua.getSelectedIndex();
        System.out.println("LoaiTB = "+loaiTB);
        String moTa = jTextArea_MoTa_Sua.getText();
        String tinhTrang = (String) jComboBox_TinhTrang_Sua.getSelectedItem();
        
        if(tenTB.equals("")){
            JOptionPane.showMessageDialog(rootPane, "Nhập tên thiết bị");
            return;
        }
        String sql  = "update THIETBI set TENTB = ?, MOTA = ?, MALOAI = ?, TINHTRANGSD = ? where MATB = ?";
        
        try {
//            if(!maLoaiBanDau.equals(maLoai.get(loaiTB))){
//                String matbMoi = maLoai.get(loaiTB) + "-"+ matb.substring(4, matb.length());
//                String sql1 = "select * from THIETBI where MATB = ?";
//                try {
//                    PreparedStatement ps1 = ketNoi.prepareStatement(sql1);
//                    ps1.setString(1, matbMoi);
//                    ResultSet rs = ps1.executeQuery();
//                    if(rs.next()){
//                        matbMoi = taoMaThietBi(maLoai.get(loaiTB));
//                        matb = matbMoi;
//                    }
//
//                } catch (Exception e) {
//                }
//                System.out.println("MATB = "+matbMoi);
//            }
            
            
            
            
            
            try {
                PreparedStatement ps = ketNoi.prepareStatement(sql);
                ps.setString(1, tenTB);
                ps.setString(2, moTa);
                ps.setString(3, maLoai.get(loaiTB));
                ps.setString(4, tinhTrang);
                ps.setString(5, matb);
                ps.executeUpdate();
            } catch (Exception e) {
            }
                
            jDialog_SuaTB.setVisible(false);
            JOptionPane.showMessageDialog(rootPane, "Cập nhật thiết bị thành công");
            docDanhSach();
        } catch (HeadlessException e) {
            JOptionPane.showMessageDialog(rootPane, "Cập nhật thiết bị không thành công");
        }
            
    }//GEN-LAST:event_jButton_Luu_SuaActionPerformed

    private void jLabel_ThongTinNVMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel_ThongTinNVMouseEntered
        // TODO add your handling code here:
        jLabel_ThongTinNV.setForeground(new Color(168, 168, 168));
    }//GEN-LAST:event_jLabel_ThongTinNVMouseEntered

    private void jLabel_ThongTinNVMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel_ThongTinNVMouseExited
        // TODO add your handling code here:
        jLabel_ThongTinNV.setForeground(new Color(0, 0, 0));
    }//GEN-LAST:event_jLabel_ThongTinNVMouseExited

    private void jLabel_ThongKeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel_ThongKeMouseClicked
        // TODO add your handling code here:
        String manv = jLabel_MaNV.getText();
        this.setVisible(false);
        new ThongKe(manv).setVisible(true);
    }//GEN-LAST:event_jLabel_ThongKeMouseClicked

    private void jLabel_DanhSachSVMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel_DanhSachSVMouseEntered
        // TODO add your handling code here:
        jLabel_DanhSachSV.setForeground(new Color(168, 168, 168));
    }//GEN-LAST:event_jLabel_DanhSachSVMouseEntered

    private void jLabel_DanhSachSVMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel_DanhSachSVMouseExited
        // TODO add your handling code here:
        
        jLabel_DanhSachSV.setForeground(new Color(0, 0, 0));
    }//GEN-LAST:event_jLabel_DanhSachSVMouseExited

    private void jLabel_ThemLoaiThietBiMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel_ThemLoaiThietBiMouseClicked
        //Them loai thiet bi
        jDialog_ThemLoaiTB.setLocationRelativeTo(null);
        jDialog_ThemLoaiTB.setVisible(true);
        
    }//GEN-LAST:event_jLabel_ThemLoaiThietBiMouseClicked

    private void jButton_QuayLai_ThemLoaiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_QuayLai_ThemLoaiActionPerformed
        // TODO add your handling code here:
        jDialog_ThemLoaiTB.setVisible(false);
    }//GEN-LAST:event_jButton_QuayLai_ThemLoaiActionPerformed

    private void jLabel44MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel44MouseClicked
        // xuat file excel:
        exportExcel(jTable_TBCoSan);
    }//GEN-LAST:event_jLabel44MouseClicked

    private void jLabel_ThemSVMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel_ThemSVMouseClicked
        // Them sinh vien:
        jDialog_ThemSV.setLocationRelativeTo(null);
        jDialog_ThemSV.setVisible(true);
    }//GEN-LAST:event_jLabel_ThemSVMouseClicked

    private void jTextField_MaSV_ThemFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextField_MaSV_ThemFocusGained
        // TODO add your handling code here:
        jTextField_MaSV_Them.setBackground(Color.WHITE);
    }//GEN-LAST:event_jTextField_MaSV_ThemFocusGained

    private void jButton_SV_ThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_SV_ThemActionPerformed
        // Dang ky tai khoan:
        String masv = jTextField_MaSV_Them.getText();
        masv = masv.toUpperCase();
        String hoten = jTextField_HoTenSV_Them.getText();
        String lop = jTextField_LopSV_Them.getText();
        String sdt = jTextField_SDTSV_Them.getText();
        boolean check = true;
        if(masv.equals("")){
            jTextField_MaSV_Them.setBackground(new Color(181, 208, 255));
            check = false;
        }
        if(hoten.equals("")){
            jTextField_HoTenSV_Them.setBackground(new Color(181, 208, 255));
            check = false;
        }
        if(lop.equals("")){
            jTextField_LopSV_Them.setBackground(new Color(181, 208, 255));
            check = false;
        }
        if(sdt.equals("")){

            jTextField_SDTSV_Them.setBackground(new Color(181, 208, 255));
            check = false;
        }
        else {
            if(sdt.length() != 10){
                jLabel_NoteSDT.setText("Số điện thoại không phù hợp");
                check = false;
            }
        }

        if(check){
            boolean tonTaiThongTinSV = false;
            

            //            this.setVisible(false);
            String sql = "select * from SINHVIEN where MASV = N'"+masv+"'";
            try {
                PreparedStatement ps = ketNoi.prepareStatement(sql);
                ResultSet rs = ps.executeQuery();
                if(rs.next()){
                    JOptionPane.showMessageDialog(rootPane, "Tồn tại mã sinh viên");
                    return;
                    

                }
                else {
                    luuSV(masv, hoten, lop, sdt);
                    JOptionPane.showMessageDialog(rootPane, "Thêm sinh viên thành công");
                    jDialog_ThemSV.setVisible(false);
                }
            } catch (SQLException e) {
                e.printStackTrace();
            }

        }

    }//GEN-LAST:event_jButton_SV_ThemActionPerformed

    private void jTextField_HoTenSV_ThemFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextField_HoTenSV_ThemFocusGained
        // TODO add your handling code here:
        jTextField_HoTenSV_Them.setBackground(Color.WHITE);
    }//GEN-LAST:event_jTextField_HoTenSV_ThemFocusGained

    private void jTextField_LopSV_ThemFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextField_LopSV_ThemFocusGained
        // TODO add your handling code here:
        jTextField_LopSV_Them.setBackground(Color.WHITE);

    }//GEN-LAST:event_jTextField_LopSV_ThemFocusGained

    private void jTextField_SDTSV_ThemFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextField_SDTSV_ThemFocusGained
        // TODO add your handling code here:
        jTextField_SDTSV_Them.setBackground(Color.WHITE);
    }//GEN-LAST:event_jTextField_SDTSV_ThemFocusGained

    private void jTextField_SDTSV_ThemKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField_SDTSV_ThemKeyReleased
        // TODO add your handling code here:
        String sdt = jTextField_SDTSV_Them.getText();
        if(sdt.isEmpty()) {
            jButton_SV_Them.setEnabled(true);
            return;
        }
        try {
            int a = Integer.parseInt(sdt);
            jLabel_NoteSDT.setText("");
            jButton_SV_Them.setEnabled(true);

        } catch (Exception e) {
            jLabel_NoteSDT.setText("Số điện thoại chỉ chứa các số");
            jButton_SV_Them.setEnabled(false);
        }

    }//GEN-LAST:event_jTextField_SDTSV_ThemKeyReleased

    private void jLabel_ThongTinNVMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel_ThongTinNVMouseClicked
        // TODO add your handling code here:
        loadNhanVien();
        
        jButton_ThemNV.setVisible(false);
        jDialog_ThongTinNV.setLocationRelativeTo(null);
        jDialog_ThongTinNV.setVisible(true);
        
    }//GEN-LAST:event_jLabel_ThongTinNVMouseClicked

    private void jTable_NhanVIienMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable_NhanVIienMouseClicked
        // TODO add your handling code here:
        int nv = jTable_NhanVIien.getSelectedRow();
        if(nv != -1){
            String manv = (String) jTable_NhanVIien.getValueAt(nv, 0);
            String sql = "select * from NHANVIEN NV, TAIKHOAN TK where TK.MATK = NV.MATK and NV.MANV = ?";
            try {
                PreparedStatement ps = ketNoi.prepareStatement(sql);
                ps.setString(1, manv);
                ResultSet rs = ps.executeQuery();
                if(rs.next()){
                    jTextField_MaNV.setText(rs.getString("MANV"));
                    jTextField_HoTenNV.setText(rs.getString("HOTEN"));
                    String gioitinh = rs.getString("GIOITINH");
                    if(gioitinh.equals("NAM")){
                        jComboBox_GioiTinh.setSelectedItem("NAM");
                    }
                    else{
                        jComboBox_GioiTinh.setSelectedItem("NỮ");
                    }

                    String chucvu = rs.getString("CHUCVU");
                    if(chucvu.equals("QUẢN LÍ")){
                        jComboBox_ChucVu.setSelectedIndex(0);
                    }
                    else{
                        jComboBox_ChucVu.setSelectedItem("NHÂN VIÊN");
                    }
                    String namsinh = rs.getString("NAMSINH");
                    namsinh = namsinh.substring(8, 10) +"/"+namsinh.substring(5, 7)+"/"+namsinh.substring(0, 4);
                    datePicker_NamSinh.setText(namsinh);
                    
                    
                    
                    jTextField_SDTNV.setText(rs.getString("SDT"));
                    jTextField_TenDN.setText(rs.getString("TENDANGNHAP"));
                    tenDN = rs.getString("TENDANGNHAP");
                    jTextField_MatKhau.setText(rs.getString("MATKHAU"));
                }
                
                
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
    }//GEN-LAST:event_jTable_NhanVIienMouseClicked

    private void jButton_ThemLoaiTBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_ThemLoaiTBActionPerformed
        // TODO add your handling code here:
        String maLoai = jTextField_MaLoai_Them.getText();
        String tenLoai = jTextField_TenLoaiThem.getText();
        if(maLoai.equals("")){
            JOptionPane.showMessageDialog(rootPane, "Nhập mã loại");
            return;
        }
        if(maLoai.equals("")){
            JOptionPane.showMessageDialog(rootPane, "Nhập tên loại");
            return;
        }
        
        
        //kiểm tra trùng
        String sql = "select MALOAI from LOAITB where MALOAI = ?";
        try {
            PreparedStatement ps = ketNoi.prepareStatement(sql);
            ps.setString(1, maLoai);
            ResultSet rs = ps.executeQuery();
            if(rs.next()){
                JOptionPane.showMessageDialog(rootPane, "Mã loại bị trùng");
                return;
            }
            else {
                String sql1 = "insert into LOAITB values(?, ?)";
                PreparedStatement ps1 = ketNoi.prepareStatement(sql1);
                ps1.setString(1, maLoai);
                ps1.setString(2, tenLoai);
                ps1.executeUpdate();
                JOptionPane.showMessageDialog(rootPane, "Thêm loại thiết bị thành công");
                jDialog_ThemLoaiTB.setVisible(false);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jButton_ThemLoaiTBActionPerformed

    private void jTextField_MaSVKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField_MaSVKeyReleased
        // tim sinh vien:
        String masv = jTextField_MaSV.getText();
        masv = masv.toUpperCase();
        jTextField_MaSV.setText(masv);
        if ("".equals(masv)) {
            jTextField_HoTen.setText("");
                jTextField_Lop.setText("");
                jTextField_SDT.setText("");
                jTextField_HoTen.setEditable(true);
                jTextField_Lop.setEditable(true);
                jTextField_SDT.setEditable(true);
            return;
        }
        String sql = "select * from sinhvien where MASV = ?";
        try {
            PreparedStatement ps = ketNoi.prepareStatement(sql);
            ps.setString(1, masv);
            ResultSet rs = ps.executeQuery();
            if (rs.next()) {
                String hoten = rs.getString("HOTEN");
                String lop = rs.getString("LOP");
                String sdt = rs.getString("SDT");
                jTextField_MaSV.setText(masv);
                jTextField_HoTen.setText(hoten);
                jTextField_Lop.setText(lop);
                jTextField_SDT.setText(sdt);
                kiemTraDK(masv);
                jTextField_HoTen.setEditable(false);
                jTextField_Lop.setEditable(false);
                jTextField_SDT.setEditable(false);
            } else {
                jTextField_HoTen.setText("");
                jTextField_Lop.setText("");
                jTextField_SDT.setText("");
                jTextField_HoTen.setEditable(true);
                jTextField_Lop.setEditable(true);
                jTextField_SDT.setEditable(true);
    

            }
        } catch (Exception e) {

        }
    }//GEN-LAST:event_jTextField_MaSVKeyReleased

    private void jButton_XoaNVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_XoaNVActionPerformed
        //Xóa nhân viên:
        String manv = jTextField_MaNV.getText();
        if(!manv.isEmpty()){
            String sql = "select * from NHANVIEN where MANV = ?";
            try {
                
                PreparedStatement ps = ketNoi.prepareStatement(sql);
                ps.setString(1,manv);
                ResultSet rs = ps.executeQuery();
                if(rs.next()){
                    int confirm  = JOptionPane.showConfirmDialog(rootPane, "Nhân viên có mã "+ manv +" và mọi thông tin liên quang sẽ được xóa");
                    if(confirm == 0){
                        String matk = rs.getString("MATK");
                        System.out.println(confirm);
                        if(confirm==0){
                            String xoaNVsql = "update CHITIETTRA set MANV = 'NULL' where MANV = ?\n"
 
                                    + "update MUONTB set MANV = 'NULL' where MANV = ?\n"
                                    + "delete from NHANVIEN where MANV = ?\n"
                                    + "delete from TAIKHOAN where MATK = ?\n";
                            ps = ketNoi.prepareStatement(xoaNVsql);
                            ps.setString(1, manv);
                            ps.setString(2, manv);
                            ps.setString(3, manv);
                            ps.setString(4, matk);


                            ps.executeUpdate();
                            loadNhanVien();
                            JOptionPane.showMessageDialog(rootPane, "Xóa nhân viên thành công");
                        }
                    }
                    
                }
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
    }//GEN-LAST:event_jButton_XoaNVActionPerformed

    private void jButton_ThemNVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_ThemNVActionPerformed
        // Them nhan vien
        String manv = jTextField_MaNV.getText();
        String hoten = jTextField_HoTenNV.getText();
        String gioiTinh = (String) jComboBox_GioiTinh.getSelectedItem();
        String chucVu = (String) jComboBox_ChucVu.getSelectedItem();
        String ngaySinh = datePicker_NamSinh.getDateStringOrEmptyString();
        String tendangnhap = jTextField_TenDN.getText();
        String matkhau = jTextField_MatKhau.getText();
        String sdt = jTextField_SDTNV.getText();
        
        if(manv.equals("")){
            JOptionPane.showMessageDialog(rootPane, "Nhập mã nhân viên");
            return; 
        }
        if(hoten.equals("")){
            JOptionPane.showMessageDialog(rootPane, "Nhập họ tên nhân viên");
            return;
        }
        if(ngaySinh.equals("")){
            JOptionPane.showMessageDialog(rootPane, "Chọn ngày sinh");
            return;
        }
        if(tendangnhap.equals("")){
            JOptionPane.showMessageDialog(rootPane, "Nhập tên đăng nhập");
            return;
        }
        
        if(matkhau.equals("")){
            JOptionPane.showMessageDialog(rootPane, "nhập mật khẩu");
            return;
        }
        
        
        
        if(tontaiNV(manv)){
            JOptionPane.showMessageDialog(rootPane, "Mã nhân viên đã tồn tại");
            return;
        }

        if(tonTaiTenDN(tendangnhap)) {
            JOptionPane.showMessageDialog(rootPane, "Tên đăng nhập đã tồn tại");
            return;
        }
        String phanquyen = "";
        if(chucVu.equals("QUẢN LÍ")) {
            phanquyen = "QUANLI";
        }
        else {
            phanquyen = "NHANVIEN";
        }
        //lấy matk
        String sqlMaTK = "select dbo.AUTO_MATK() as MATK";
        String matk = "";
        try {
            PreparedStatement ps = ketNoi.prepareStatement(sqlMaTK);
            ResultSet rs = ps.executeQuery();
            if(rs.next()){
                matk = rs.getString("MATK");
                System.out.println("MATK = " + matk);
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }
        
        String sqlThemTK = "{Call Sp_ThemTaiKhoan(?, ?, ?)}";
        try {
            CallableStatement ps = ketNoi.prepareCall(sqlThemTK);
            ps.setString(1, manv);
            ps.setString(2, "123456");
            ps.setString(3, "phanquyen");
            ps.executeUpdate();
            System.out.println("Them tk thanh cong");
            
        } catch (SQLException e) {
            System.out.println("Them tk khong thanh cong");
        }
        
        String sql = "insert into NHANVIEN  values(?, ?, ? ,? , ?, ?, ?)\n";
        try {
            PreparedStatement ps = ketNoi.prepareStatement(sql);
            
            ps.setString(1, manv);
            ps.setString(2, hoten);
            ps.setString(3, chucVu);
            ps.setString(4, gioiTinh);
            ps.setString(5, ngaySinh);
            ps.setString(6, sdt);      
            ps.setString(7, matk);

            
            ps.executeUpdate();
            JOptionPane.showMessageDialog(rootPane, "Thêm nhân viên thành công");
            loadNhanVien();
//            jLabel_TenNV.setText(hoten);
         
//            jDialog_ThongTinCaNhan.setVisible(false);
        } catch (HeadlessException | SQLException e) {
            e.printStackTrace();
        }
        
        
        
    }//GEN-LAST:event_jButton_ThemNVActionPerformed

    private void jLabel_ThemNV_btnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel_ThemNV_btnMouseClicked
        // TODO add your handling code here:
        jPanel_ThemNV.setBackground(new Color(0, 0, 102));
        jLabel_ThemNV_btn.setForeground(Color.white);
        
        jPanel_ChinhSuaNV.setBackground(new Color(204,204,204));
        jLabel_ChinhSuaNV_btn.setForeground(new Color(0, 0, 102));
        
        jTextField_MaNV.setEnabled(true);
        jButton_XoaNV.setVisible(false);
        jButton_LuuNV.setVisible(false);
        jButton_ThemNV.setVisible(true);
    }//GEN-LAST:event_jLabel_ThemNV_btnMouseClicked

    private void jLabel_ChinhSuaNV_btnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel_ChinhSuaNV_btnMouseClicked
        // TODO add your handling code here:
        jPanel_ChinhSuaNV.setBackground(new Color(0, 0, 102));
        jLabel_ChinhSuaNV_btn.setForeground(Color.white);
        
        jPanel_ThemNV.setBackground(new Color(204,204,204));
        jLabel_ThemNV_btn.setForeground(new Color(0, 0, 102));
        
        jTextField_MaNV.setEnabled(false);
        jButton_XoaNV.setVisible(true);
        jButton_LuuNV.setVisible(true);
        jButton_ThemNV.setVisible(false);
    }//GEN-LAST:event_jLabel_ChinhSuaNV_btnMouseClicked

    private void jLabel_TenNVMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel_TenNVMouseClicked
        // Chinh sua thong tin ca nhan:
        String sql = "select * from NHANVIEN NV,TAIKHOAN TK where  NV.MATK = TK.MATK and NV.MANV = ?";
        try {
            PreparedStatement ps = ketNoi.prepareStatement(sql);
            ps.setString(1, jLabel_MaNV.getText());
            ResultSet rs = ps.executeQuery();
            if(rs.next()){
                jTextField_MaNV_CaNhan.setText(rs.getString("MANV"));
                jTextField_HoTenNV_CaNhan.setText(rs.getString("HOTEN"));
                
                String namsinh = rs.getString("NAMSINH");
                namsinh = namsinh.substring(8, 10) +"/"+namsinh.substring(5, 7)+"/"+namsinh.substring(0, 4);
                datePicker_NamSinhNV_CaNhan.setText(namsinh);
                jComboBox_ChucVu_CaNhan.setSelectedItem(rs.getString("CHUCVU"));
                jComboBox_GioiTinh_CaNhan.setSelectedItem(rs.getString("GIOITINH"));
                jTextField_SDT_CaNhan.setText(rs.getString("SDT"));
                jTextField_TenDangNhap_CaNhan.setText(rs.getString("TENDANGNHAP"));
                tenDN = rs.getString("TENDANGNHAP");
                jTextField_MatKhau_CaNhan.setText(rs.getString("MATKHAU"));
                jLabel_MaTK.setText(rs.getString("MATK"));
            }
            
        } catch (Exception e) {
        }
        jDialog_ThongTinCaNhan.setLocationRelativeTo(null);
        jDialog_ThongTinCaNhan.setVisible(true);
    }//GEN-LAST:event_jLabel_TenNVMouseClicked

    private void jButton_LuuTTCNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_LuuTTCNActionPerformed
        // Luu thong tin ca nhan
        String manv = jTextField_MaNV_CaNhan.getText();
        String hoten = jTextField_HoTenNV_CaNhan.getText();
        LocalDate namsinh = datePicker_NamSinhNV_CaNhan.getDate();
        String chucvu = (String) jComboBox_ChucVu_CaNhan.getSelectedItem();
        String gioiTinh = (String) jComboBox_GioiTinh_CaNhan.getSelectedItem();
        String tendangnhap = jTextField_TenDangNhap_CaNhan.getText();
        String matKhau = jTextField_MatKhau_CaNhan.getText();
        
        
        if(hoten.equals("")){
            JOptionPane.showMessageDialog(rootPane, "Nhập tên nhân viên");
            return;
        }
        if(tendangnhap.equals("")){
            JOptionPane.showMessageDialog(rootPane, "Nhập tên đăng nhập");
            return;
        }
        if(matKhau.equals("")){
            JOptionPane.showMessageDialog(rootPane, "Nhập mật khẩu");
            return;
        }
        if(tenDN.equals(tendangnhap)){
            
        }
        else {
            if(tonTaiTenDN(tendangnhap)) {
            JOptionPane.showMessageDialog(rootPane, "Tên đăng nhập đã tồn tại");
            return;
            }
        }
        
        
        String sql = "update NHANVIEN set HOTEN = ?, NAMSINH = ?, CHUCVU = ?, GIOITINH = ? where MANV = ?\n"
                + "update TAIKHOAN set TENDANGNHAP = ?, MATKHAU = ? where MATK = ?";
        try {
            PreparedStatement ps = ketNoi.prepareStatement(sql);
            ps.setString(1, hoten);
            ps.setString(2, namsinh.toString());
            ps.setString(3, chucvu);
            ps.setString(4, gioiTinh);
            ps.setString(5, manv);
            ps.setString(6, tendangnhap);
            ps.setString(7, matKhau);
            ps.setString(8, jLabel_MaTK.getText());
            
            ps.executeUpdate();
            JOptionPane.showMessageDialog(rootPane, "Cập nhật thông tin thành công");
            jLabel_TenNV.setText(hoten);
         
            jDialog_ThongTinCaNhan.setVisible(false);
        } catch (HeadlessException | SQLException e) {
        }
    }//GEN-LAST:event_jButton_LuuTTCNActionPerformed

    private void jButton_LuuNVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_LuuNVActionPerformed
        // TODO add your handling code here:
        String manv = jTextField_MaNV.getText();
        String hoten = jTextField_HoTenNV.getText();
        LocalDate namsinh = datePicker_NamSinh.getDate();
        String chucvu = (String) jComboBox_ChucVu.getSelectedItem();
        String gioiTinh = (String) jComboBox_GioiTinh.getSelectedItem();
        String tendangnhap = jTextField_TenDN.getText();
        String matKhau = jTextField_MatKhau.getText();
        
        
        
        
        
        if(hoten.equals("")){
            JOptionPane.showMessageDialog(rootPane, "Nhập tên nhân viên");
            return;
        }
        if(tendangnhap.equals("")){
            JOptionPane.showMessageDialog(rootPane, "Nhập tên đăng nhập");
            return;
        }
        if(matKhau.equals("")){
            JOptionPane.showMessageDialog(rootPane, "Nhập mật khẩu");
            return;
        }
        if(tenDN.equals(tendangnhap)){
            
        }
        else {
            if(tonTaiTenDN(tendangnhap)) {
            JOptionPane.showMessageDialog(rootPane, "Tên đăng nhập đã tồn tại");
            return;
            }
        }
        String matk = "";
        String sql2 = "select MATK from NHANVIEN where MATK = ?";
            try {
               PreparedStatement ps = ketNoi.prepareStatement(sql2);
               ps.setString(1, manv);
               ResultSet rs = ps.executeQuery();
               if(rs.next()){
                   matk = rs.getString("MATK");
               }
            } catch (Exception e) {
            }
        
        String sql = "update NHANVIEN set HOTEN = ?, NAMSINH = ?, CHUCVU = ?, GIOITINH = ? where MANV = ?\n"
                + "update TAIKHOAN set TENDANGNHAP = ?, MATKHAU = ? where MATK = ?";
        try {
            PreparedStatement ps = ketNoi.prepareStatement(sql);
            ps.setString(1, hoten);
            ps.setString(2, namsinh.toString());
            ps.setString(3, chucvu);
            ps.setString(4, gioiTinh);
            ps.setString(5, manv);
            ps.setString(6, tendangnhap);
            ps.setString(7, matKhau);
            
            
            
            ps.setString(8, matk);
            
            ps.executeUpdate();
            JOptionPane.showMessageDialog(rootPane, "Cập nhật thông tin thành công");
            loadNhanVien();
//            jDialog_ThongTinNV.setVisible(false);
        } catch (HeadlessException | SQLException e) {
        }
    }//GEN-LAST:event_jButton_LuuNVActionPerformed

    private void jTextField_LopSV_TTFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextField_LopSV_TTFocusGained
        // TODO add your handling code here:
        jTextField_LopSV_TT.setBackground(Color.WHITE);
    }//GEN-LAST:event_jTextField_LopSV_TTFocusGained

    private void jTextField_MaSV_TTFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextField_MaSV_TTFocusGained
        // TODO add your handling code here:
        jTextField_MaSV_TT.setBackground(Color.WHITE);
    }//GEN-LAST:event_jTextField_MaSV_TTFocusGained

    private void jTextField_HoTenSV_TTFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextField_HoTenSV_TTFocusGained
        // TODO add your handling code here:
        jTextField_HoTenSV_TT.setBackground(Color.WHITE);
    }//GEN-LAST:event_jTextField_HoTenSV_TTFocusGained

    private void jTextField_SDTSV_TTFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextField_SDTSV_TTFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField_SDTSV_TTFocusGained

    private void jTextField_SDTSV_TTKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField_SDTSV_TTKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField_SDTSV_TTKeyReleased

    private void jTextField_TenDN_TTFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextField_TenDN_TTFocusGained
        // TODO add your handling code here:
        jTextField_TenDN_TT.setBackground(Color.WHITE);
    }//GEN-LAST:event_jTextField_TenDN_TTFocusGained

    private void jTextField_TenDN_TTKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField_TenDN_TTKeyReleased
        // TODO add your handling code here:
        String sdt = jTextField_TenDN_TT.getText();
        if(sdt.isEmpty()) {

            return;
        }
        try {
            int a = Integer.parseInt(sdt);

        } catch (Exception e) {

        }
    }//GEN-LAST:event_jTextField_TenDN_TTKeyReleased

    private void jTextField_MatKhau_TTFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextField_MatKhau_TTFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField_MatKhau_TTFocusGained

    private void jTextField_MatKhau_TTKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField_MatKhau_TTKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField_MatKhau_TTKeyReleased

    private void jButton_Luu_TTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_Luu_TTActionPerformed
        // TODO add your handling code here:
        String masv = jTextField_MaSV_TT.getText();
        String hoten = jTextField_HoTenSV_TT.getText();
        String lop = jTextField_LopSV_TT.getText();
        String sdt = jTextField_SDTSV_TT.getText();
        String tenDN1 = jTextField_TenDN_TT.getText();
        String matkhau = jTextField_MatKhau_TT.getText();
        String matk = "";
        String sqlMatk = "select MATK from SINHVIEN where MASV = ?";
        try {
            PreparedStatement ps = ketNoi.prepareStatement(sqlMatk);
            ps.setString(1, masv);
            ResultSet rs = ps.executeQuery();
            if(rs.next()){
                matk = rs.getString("MATK");
            }
        } catch (Exception e) {
        }
        
        
        if(hoten.equals("")){
            JOptionPane.showMessageDialog(rootPane, "Nhập họ tên sinh viên");
            return;
        }

        if(lop.equals("")){
            JOptionPane.showMessageDialog(rootPane, "Nhập lớp");
            return;
        }

        if(sdt.equals("")){
            JOptionPane.showMessageDialog(rootPane, "Nhập số điện thoại");
            return;
        }

        if(tenDN1.equals("")){
            JOptionPane.showMessageDialog(rootPane, "Nhập tên đăng nhập");
            return;
        }
        if(matkhau.equals("")){
            JOptionPane.showMessageDialog(rootPane, "Nhập mật khẩu");
            return;
        }

        if(!tenDNSV.equals(tenDN1)){
            if(tonTaiTenDN(tenDN1)){
                JOptionPane.showMessageDialog(rootPane, "Tên đăng nhập đã tồn tại");
                return;
            }
        }
        if(!sdt.matches("0[0-9]{9}")){
            JOptionPane.showMessageDialog(rootPane, "Số điện thoại không đúng định dạng");
            return;
        }

        String sql = "update SINHVIEN set HOTEN = ?, LOP = ?, SDT = ? where MASV = ?\n"
        + "update TAIKHOAN set TENDANGNHAP = ?, MATKHAU = ? where MATK = ?";
        try {
            PreparedStatement ps = ketNoi.prepareStatement(sql);
            ps.setString(1, hoten);
            ps.setString(2, lop);
            ps.setString(3, sdt);
            ps.setString(4, masv);
            ps.setString(5, tenDN1);
            ps.setString(6, matkhau);
            ps.setString(7, matk);
            ps.executeUpdate();
            JOptionPane.showMessageDialog(rootPane, "Cập nhật thông tin thành công");
            loadDanhSachSV();
           
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jButton_Luu_TTActionPerformed

    private void jLabel_DanhSachSVMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel_DanhSachSVMouseClicked
        // TODO add your handling code here:
        loadDanhSachSV();
        jDialog_DanhSachSV.setLocationRelativeTo(null);
        jDialog_DanhSachSV.setVisible(true);
    }//GEN-LAST:event_jLabel_DanhSachSVMouseClicked

    private void jTable_SinhVienMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable_SinhVienMouseClicked
        // TODO add your handling code here:
        int dong = jTable_SinhVien.getSelectedRow();
        if(dong < 0) return;
        String masv = (String) jTable_SinhVien.getValueAt(dong, 0);
        String sql = "select * from SINHVIEN SV, TAIKHOAN TK where TK.MATK = SV.MATK and MASV = ?";
        try {
            PreparedStatement ps = ketNoi.prepareStatement(sql);
            ps.setString(1, masv);
            ResultSet rs = ps.executeQuery();
            if(rs.next()){
                jTextField_MaSV_TT.setText(rs.getString("MASV"));
                jTextField_HoTenSV_TT.setText(rs.getString("HOTEN"));
                jTextField_LopSV_TT.setText(rs.getString("LOP"));
                jTextField_SDTSV_TT.setText(rs.getString("SDT"));
                jTextField_TenDN_TT.setText(rs.getString("TENDANGNHAP"));
                tenDNSV = rs.getString("TENDANGNHAP");
                jTextField_MatKhau_TT.setText(rs.getString("MATKHAU"));
                loadDanhSachSV();
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jTable_SinhVienMouseClicked

    private void jButton_XoaSVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_XoaSVActionPerformed
        // TODO add your handling code here:
        String masv = jTextField_MaSV_TT.getText();
        
        if(masv != ""){
            String matk = "";
            String sqlMatk = "select MATK from SINHVIEN where MASV = ?";
            try {
                PreparedStatement ps = ketNoi.prepareStatement(sqlMatk);
                ps.setString(1, masv);
                ResultSet rs = ps.executeQuery();
                if(rs.next()){
                    matk = rs.getString("MATK");
                }
            } catch (Exception e) {
            }
            int check = JOptionPane.showConfirmDialog(rootPane, "Mọi thông tin liên quan đến sinh viên sẽ được xóa");
            if(check == 0){
                String sql = "delete from CHITIETTRA where MASV = ?\n"
                        + "delete from MUONTB where MASV = ?\n"
                        + "delete from SINHVIEN where MASV = ?\n"
                        + "delete from TAIKHOAN wher MATK= ?";
                try {
                    PreparedStatement ps2 = ketNoi.prepareStatement(sqlMatk);
                    ps2.setString(1, masv);
                    ps2.setString(1, masv);
                    ps2.setString(1, masv);
                    ps2.setString(1, matk);
                    ps2.executeUpdate();
                    JOptionPane.showMessageDialog(rootPane, "Xóa sinh viên thành công");
                } catch (Exception e) {
                    e.printStackTrace();
                }
            }
        }
    }//GEN-LAST:event_jButton_XoaSVActionPerformed

    private void jTextField_TimKiemSVKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField_TimKiemSVKeyReleased
        // TODO add your handling code here:
        String masv = jTextField_TimKiemSV.getText();
        if(masv.equals("")){
            loadDanhSachSV();
        }
        else {
            loadDanhSachSVTheoMa(masv);
        }
    }//GEN-LAST:event_jTextField_TimKiemSVKeyReleased
    /*

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainFrame("QL01", "QUANLI").setVisible(true);

            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.github.lgooddatepicker.components.DatePicker datePicker_NamSinh;
    private com.github.lgooddatepicker.components.DatePicker datePicker_NamSinhNV_CaNhan;
    private com.github.lgooddatepicker.components.DatePicker datePicker_NgayMuon;
    private com.github.lgooddatepicker.components.DatePicker datePicker_NgayTra;
    private javax.swing.JButton jButton16;
    private javax.swing.JButton jButton1_TimMaMuonTBi;
    private javax.swing.JButton jButton1_XacNhanChonTB;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton_ChonDSDK;
    private javax.swing.JButton jButton_ChonDSMuon;
    private javax.swing.JButton jButton_ChonTB;
    private javax.swing.JButton jButton_ChonTatCa;
    private javax.swing.JButton jButton_DSDangKy;
    private javax.swing.JButton jButton_DanhSachDaMuon;
    private javax.swing.JButton jButton_DatLai;
    private javax.swing.JButton jButton_HuyChonTB;
    private javax.swing.JButton jButton_LuuNV;
    private javax.swing.JButton jButton_LuuTTCN;
    private javax.swing.JButton jButton_Luu_Sua;
    private javax.swing.JButton jButton_Luu_TT;
    private javax.swing.JButton jButton_QuayLai_Sua;
    private javax.swing.JButton jButton_QuayLai_ThemLoai;
    private javax.swing.JButton jButton_SV_Them;
    private javax.swing.JButton jButton_Sua;
    private javax.swing.JButton jButton_ThemLoaiTB;
    private javax.swing.JButton jButton_ThemNV;
    private javax.swing.JButton jButton_ThemTB;
    private javax.swing.JButton jButton_TimKiem;
    private javax.swing.JButton jButton_TimMaSVTra;
    private javax.swing.JButton jButton_TimMaSVmuon;
    private javax.swing.JButton jButton_TimSV;
    private javax.swing.JButton jButton_XNmuon;
    private javax.swing.JButton jButton_XacNhanTra;
    private javax.swing.JButton jButton_Xoa;
    private javax.swing.JButton jButton_XoaNV;
    private javax.swing.JButton jButton_XoaSV;
    private javax.swing.JButton jButton_gioHT;
    private javax.swing.JComboBox<String> jComboBox_ChucVu;
    private javax.swing.JComboBox<String> jComboBox_ChucVu_CaNhan;
    private javax.swing.JComboBox<String> jComboBox_GioiTinh;
    private javax.swing.JComboBox<String> jComboBox_GioiTinh_CaNhan;
    private javax.swing.JComboBox<String> jComboBox_LoaiTB_Sua;
    private javax.swing.JComboBox<String> jComboBox_LoaiTB_Them;
    private javax.swing.JComboBox<String> jComboBox_LocTheoLoai;
    private javax.swing.JComboBox<String> jComboBox_LocTheoLoaiTBDK;
    private javax.swing.JComboBox<String> jComboBox_TinhTrang_Sua;
    private javax.swing.JComboBox<String> jComboBox_TrangThai;
    private javax.swing.JDialog jDialog_ChonDSDangKy;
    private javax.swing.JDialog jDialog_ChonDSTra;
    private javax.swing.JDialog jDialog_ChucNang;
    private javax.swing.JDialog jDialog_DanhSachMuon;
    private javax.swing.JDialog jDialog_DanhSachSV;
    private javax.swing.JDialog jDialog_SuaTB;
    private javax.swing.JDialog jDialog_ThemLoaiTB;
    private javax.swing.JDialog jDialog_ThemSV;
    private javax.swing.JDialog jDialog_ThongTinCaNhan;
    private javax.swing.JDialog jDialog_ThongTinNV;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel100;
    private javax.swing.JLabel jLabel101;
    private javax.swing.JLabel jLabel102;
    private javax.swing.JLabel jLabel103;
    private javax.swing.JLabel jLabel104;
    private javax.swing.JLabel jLabel105;
    private javax.swing.JLabel jLabel106;
    private javax.swing.JLabel jLabel107;
    private javax.swing.JLabel jLabel108;
    private javax.swing.JLabel jLabel109;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel110;
    private javax.swing.JLabel jLabel111;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JLabel jLabel44;
    private javax.swing.JLabel jLabel45;
    private javax.swing.JLabel jLabel46;
    private javax.swing.JLabel jLabel47;
    private javax.swing.JLabel jLabel48;
    private javax.swing.JLabel jLabel49;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel50;
    private javax.swing.JLabel jLabel51;
    private javax.swing.JLabel jLabel52;
    private javax.swing.JLabel jLabel53;
    private javax.swing.JLabel jLabel54;
    private javax.swing.JLabel jLabel55;
    private javax.swing.JLabel jLabel56;
    private javax.swing.JLabel jLabel57;
    private javax.swing.JLabel jLabel58;
    private javax.swing.JLabel jLabel59;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel60;
    private javax.swing.JLabel jLabel61;
    private javax.swing.JLabel jLabel62;
    private javax.swing.JLabel jLabel63;
    private javax.swing.JLabel jLabel64;
    private javax.swing.JLabel jLabel65;
    private javax.swing.JLabel jLabel66;
    private javax.swing.JLabel jLabel67;
    private javax.swing.JLabel jLabel68;
    private javax.swing.JLabel jLabel69;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel70;
    private javax.swing.JLabel jLabel71;
    private javax.swing.JLabel jLabel72;
    private javax.swing.JLabel jLabel73;
    private javax.swing.JLabel jLabel74;
    private javax.swing.JLabel jLabel75;
    private javax.swing.JLabel jLabel76;
    private javax.swing.JLabel jLabel77;
    private javax.swing.JLabel jLabel78;
    private javax.swing.JLabel jLabel79;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel80;
    private javax.swing.JLabel jLabel81;
    private javax.swing.JLabel jLabel82;
    private javax.swing.JLabel jLabel83;
    private javax.swing.JLabel jLabel84;
    private javax.swing.JLabel jLabel85;
    private javax.swing.JLabel jLabel86;
    private javax.swing.JLabel jLabel87;
    private javax.swing.JLabel jLabel88;
    private javax.swing.JLabel jLabel89;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabel90;
    private javax.swing.JLabel jLabel91;
    private javax.swing.JLabel jLabel92;
    private javax.swing.JLabel jLabel93;
    private javax.swing.JLabel jLabel94;
    private javax.swing.JLabel jLabel95;
    private javax.swing.JLabel jLabel96;
    private javax.swing.JLabel jLabel97;
    private javax.swing.JLabel jLabel98;
    private javax.swing.JLabel jLabel99;
    private javax.swing.JLabel jLabel_ChinhSuaNV_btn;
    private javax.swing.JLabel jLabel_ChucNang;
    private javax.swing.JLabel jLabel_DanhSachSV;
    private javax.swing.JLabel jLabel_DauMaTB_Them;
    private javax.swing.JLabel jLabel_LoaiTB_TB_Them;
    private javax.swing.JLabel jLabel_MaNV;
    private javax.swing.JLabel jLabel_MaTB_TB_Them;
    private javax.swing.JLabel jLabel_MaTK;
    private javax.swing.JLabel jLabel_NotePass;
    private javax.swing.JLabel jLabel_NoteSDT;
    private javax.swing.JLabel jLabel_TenNV;
    private javax.swing.JLabel jLabel_TenTB_TB_Them;
    private javax.swing.JLabel jLabel_ThemLoaiThietBi;
    private javax.swing.JLabel jLabel_ThemNV_btn;
    private javax.swing.JLabel jLabel_ThemSV;
    private javax.swing.JLabel jLabel_ThongKe;
    private javax.swing.JLabel jLabel_ThongTinNV;
    private javax.swing.JLabel jLabel_TongSoTB;
    private javax.swing.JLabel jLabel_tbBaoTri;
    private javax.swing.JLabel jLabel_tbCoSan;
    private javax.swing.JLabel jLabel_tbDangMuon;
    private javax.swing.JLabel jLabel_tbHong;
    private javax.swing.JLabel jLabel_time;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel17;
    private javax.swing.JPanel jPanel18;
    private javax.swing.JPanel jPanel19;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel20;
    private javax.swing.JPanel jPanel21;
    private javax.swing.JPanel jPanel22;
    private javax.swing.JPanel jPanel23;
    private javax.swing.JPanel jPanel24;
    private javax.swing.JPanel jPanel25;
    private javax.swing.JPanel jPanel26;
    private javax.swing.JPanel jPanel27;
    private javax.swing.JPanel jPanel28;
    private javax.swing.JPanel jPanel29;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel30;
    private javax.swing.JPanel jPanel31;
    private javax.swing.JPanel jPanel32;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JPanel jPanel_ChinhSuaNV;
    private javax.swing.JPanel jPanel_ThemNV;
    private javax.swing.JPanel jPanel_main;
    private javax.swing.JPanel jPanel_muontb;
    private javax.swing.JPanel jPanel_muontb_btn;
    private javax.swing.JPanel jPanel_themtb;
    private javax.swing.JPanel jPanel_themtb_btn;
    private javax.swing.JPanel jPanel_trangchu;
    private javax.swing.JPanel jPanel_trangchu_btn;
    private javax.swing.JPanel jPanel_tratb;
    private javax.swing.JPanel jPanel_tratb_btn;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane11;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator10;
    private javax.swing.JSeparator jSeparator11;
    private javax.swing.JSeparator jSeparator12;
    private javax.swing.JSeparator jSeparator13;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JSeparator jSeparator6;
    private javax.swing.JSeparator jSeparator7;
    private javax.swing.JSeparator jSeparator8;
    private javax.swing.JSeparator jSeparator9;
    private javax.swing.JTable jTable_ChonDSDK;
    private javax.swing.JTable jTable_ChonDSMuon;
    private javax.swing.JTable jTable_DSThBiMuon;
    private javax.swing.JTable jTable_DSThBiTra;
    private javax.swing.JTable jTable_DanhSachMuon;
    private javax.swing.JTable jTable_NhanVIien;
    private javax.swing.JTable jTable_SinhVien;
    private javax.swing.JTable jTable_TBCoSan;
    private javax.swing.JTextArea jTextArea_MoTa_Sua;
    private javax.swing.JTextArea jTextArea_MoTa_Them;
    private javax.swing.JTextField jTextField_CuoiMaTB_Them;
    private javax.swing.JTextField jTextField_HoTen;
    private javax.swing.JTextField jTextField_HoTenNV;
    private javax.swing.JTextField jTextField_HoTenNV_CaNhan;
    private javax.swing.JTextField jTextField_HoTenSVTra;
    private javax.swing.JTextField jTextField_HoTenSV_TT;
    private javax.swing.JTextField jTextField_HoTenSV_Them;
    private javax.swing.JTextField jTextField_Lop;
    private javax.swing.JTextField jTextField_LopSVTra;
    private javax.swing.JTextField jTextField_LopSV_TT;
    private javax.swing.JTextField jTextField_LopSV_Them;
    private javax.swing.JTextField jTextField_MaLoai_Them;
    private javax.swing.JTextField jTextField_MaMuon;
    private javax.swing.JTextField jTextField_MaNV;
    private javax.swing.JTextField jTextField_MaNV_CaNhan;
    private javax.swing.JTextField jTextField_MaSV;
    private javax.swing.JTextField jTextField_MaSVMuon;
    private javax.swing.JTextField jTextField_MaSVTra;
    private javax.swing.JTextField jTextField_MaSV_TT;
    private javax.swing.JTextField jTextField_MaSV_Them;
    private javax.swing.JTextField jTextField_MaTb_Sua;
    private javax.swing.JTextField jTextField_MatKhau;
    private javax.swing.JTextField jTextField_MatKhau_CaNhan;
    private javax.swing.JTextField jTextField_MatKhau_TT;
    private javax.swing.JTextField jTextField_NgayGioNhapKho_Them;
    private javax.swing.JTextField jTextField_NgayNhapKho_Sua;
    private javax.swing.JTextField jTextField_SDT;
    private javax.swing.JTextField jTextField_SDTNV;
    private javax.swing.JTextField jTextField_SDTSV_TT;
    private javax.swing.JTextField jTextField_SDTSV_Them;
    private javax.swing.JTextField jTextField_SDTTra;
    private javax.swing.JTextField jTextField_SDT_CaNhan;
    private javax.swing.JTextField jTextField_TenDN;
    private javax.swing.JTextField jTextField_TenDN_TT;
    private javax.swing.JTextField jTextField_TenDangNhap_CaNhan;
    private javax.swing.JTextField jTextField_TenLoaiThem;
    private javax.swing.JTextField jTextField_TenTB_Them;
    private javax.swing.JTextField jTextField_TenTb_Sua;
    private javax.swing.JTextField jTextField_TimKiem;
    private javax.swing.JTextField jTextField_TimKiemSV;
    private javax.swing.JTextField jTextField_TimKiemTBMuon;
    private com.github.lgooddatepicker.components.TimePicker timePicker_GioMuon;
    private com.github.lgooddatepicker.components.TimePicker timePicker_GioTra;
    // End of variables declaration//GEN-END:variables
}
